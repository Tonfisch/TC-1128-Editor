<?xml version="1.0" encoding="UTF-8"?>

<panel name="TC-1128" panelShowDialogs="1" panelMessageTime="1000" panelAuthorName="Tonfisch"
       panelAuthorEmail="" panelAuthorUrl="" panelAuthorDesc="" panelVersionMajor="1"
       panelVersionMinor="4" panelVersionName="TC-1128_V1.4_2" panelVendor="TC Electronic"
       panelDevice="TC 1128" panelMidiSnapshotAfterLoad="0" panelMidiSnapshotAfterProgramChange="0"
       panelMidiSnapshotDelay="5" panelMidiSnapshotShowProgress="0"
       panelMidiInputChannelDevice="1" panelMidiInputDevice="2- MIDISPORT 2x2 In A"
       panelMidiControllerChannelDevice="1" panelMidiControllerDevice="-- None"
       panelMidiOutputChannelDevice="1" panelMidiOutputDevice="2- MIDISPORT 2x2 Out A"
       panelMidiInputFromHost="1" panelMidiInputChannelHost="1" panelMidiOutputToHost="1"
       panelMidiOutputChannelHost="1" panelMidiThruH2H="0" panelMidiThruH2HChannelize="0"
       panelMidiThruH2D="0" panelMidiThruH2DChannelize="0" panelMidiThruD2D="0"
       panelMidiThruD2DChannelize="0" panelMidiThruD2H="0" panelMidiThruD2HChannelize="0"
       panelMidiRealtimeIgnore="0" panelMidiInputThreadPriority="7"
       panelMidiProgram="0" panelMidiBankLsb="0" panelMidiBankMsb="0"
       panelMidiSendProgramChangeOnLoad="0" panelMidiProgramCalloutOnprogramChange="0"
       panelMidiMatchCacheSize="32" panelMidiGlobalDelay="1" panelMidiPauseOut="0"
       panelMidiPauseIn="0" panelOSCEnabled="0" panelOSCPort="-1" panelOSCProtocol="0"
       luaPanelMidiChannelChanged="-- None" luaPanelMidiReceived="midiMessageReceived"
       luaPanelMidiMultiReceived="-- None" luaPanelLoaded="onPanelLoad"
       luaPanelBeforeLoad="beforePanelLoads" luaPanelSaved="-- None"
       luaPanelResourcesLoaded="-- None" luaPanelProgramChanged="-- None"
       luaPanelGlobalChanged="-- None" luaPanelMessageHandler="-- None"
       luaPanelModulatorValueChanged="-- None" luaPanelSaveState="-- None"
       luaPanelRestoreState="-- None" luaPanelMidiSnapshotPost="-- None"
       luaPanelMidiSnapshotPre="-- None" luaAudioProcessBlock="-- None"
       luaPanelOSCReceived="-- None" panelFilePath="C:\Users\tf\Desktop\Studiokram\CRLR\TC-1128-Editor\TC-1128_1_4_TC-1128_V1.4_2_2023-07-30_16-19.panel"
       panelUID="8.3tKBw2pat5E" panelInstanceUID="eaoE" panelInstanceManufacturerID="iIgx"
       panelModulatorListColumns="&lt;TABLELAYOUT sortedCol=&quot;613&quot; sortForwards=&quot;1&quot;&gt;&lt;COLUMN id=&quot;125&quot; visible=&quot;1&quot; width=&quot;147&quot;/&gt;&lt;COLUMN id=&quot;612&quot; visible=&quot;1&quot; width=&quot;91&quot;/&gt;&lt;COLUMN id=&quot;589&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;556&quot; visible=&quot;1&quot; width=&quot;91&quot;/&gt;&lt;COLUMN id=&quot;1&quot; visible=&quot;1&quot; width=&quot;91&quot;/&gt;&lt;COLUMN id=&quot;613&quot; visible=&quot;1&quot; width=&quot;140&quot;/&gt;&lt;COLUMN id=&quot;127&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;128&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;135&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;179&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;15&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;14&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;172&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;173&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;102&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;3&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;555&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;558&quot; visible=&quot;1&quot; width=&quot;90&quot;/&gt;&lt;COLUMN id=&quot;210&quot; visible=&quot;1&quot; width=&quot;151&quot;/&gt;&lt;COLUMN id=&quot;334&quot; visible=&quot;1&quot; width=&quot;181&quot;/&gt;&lt;COLUMN id=&quot;213&quot; visible=&quot;1&quot; width=&quot;158&quot;/&gt;&lt;COLUMN id=&quot;619&quot; visible=&quot;1&quot; width=&quot;85&quot;/&gt;&lt;COLUMN id=&quot;663&quot; visible=&quot;1&quot; width=&quot;85&quot;/&gt;&lt;COLUMN id=&quot;666&quot; visible=&quot;1&quot; width=&quot;85&quot;/&gt;&lt;COLUMN id=&quot;151&quot; visible=&quot;1&quot; width=&quot;133&quot;/&gt;&lt;COLUMN id=&quot;595&quot; visible=&quot;1&quot; width=&quot;83&quot;/&gt;&lt;COLUMN id=&quot;670&quot; visible=&quot;1&quot; width=&quot;83&quot;/&gt;&lt;COLUMN id=&quot;554&quot; visible=&quot;1&quot; width=&quot;83&quot;/&gt;&lt;COLUMN id=&quot;177&quot; visible=&quot;1&quot; width=&quot;83&quot;/&gt;&lt;COLUMN id=&quot;128&quot; visible=&quot;1&quot; width=&quot;83&quot;/&gt;&lt;COLUMN id=&quot;134&quot; visible=&quot;1&quot; width=&quot;122&quot;/&gt;&lt;COLUMN id=&quot;129&quot; visible=&quot;1&quot; width=&quot;83&quot;/&gt;&lt;COLUMN id=&quot;194&quot; visible=&quot;1&quot; width=&quot;82&quot;/&gt;&lt;COLUMN id=&quot;195&quot; visible=&quot;1&quot; width=&quot;82&quot;/&gt;&lt;COLUMN id=&quot;189&quot; visible=&quot;1&quot; width=&quot;82&quot;/&gt;&lt;COLUMN id=&quot;188&quot; visible=&quot;1&quot; width=&quot;126&quot;/&gt;&lt;COLUMN id=&quot;660&quot; visible=&quot;1&quot; width=&quot;81&quot;/&gt;&lt;COLUMN id=&quot;180&quot; visible=&quot;1&quot; width=&quot;81&quot;/&gt;&lt;COLUMN id=&quot;181&quot; visible=&quot;1&quot; width=&quot;81&quot;/&gt;&lt;COLUMN id=&quot;182&quot; visible=&quot;1&quot; width=&quot;81&quot;/&gt;&lt;COLUMN id=&quot;659&quot; visible=&quot;1&quot; width=&quot;81&quot;/&gt;&lt;COLUMN id=&quot;183&quot; visible=&quot;1&quot; width=&quot;81&quot;/&gt;&lt;COLUMN id=&quot;184&quot; visible=&quot;1&quot; width=&quot;81&quot;/&gt;&lt;COLUMN id=&quot;469&quot; visible=&quot;1&quot; width=&quot;85&quot;/&gt;&lt;COLUMN id=&quot;375&quot; visible=&quot;1&quot; width=&quot;81&quot;/&gt;&lt;COLUMN id=&quot;374&quot; visible=&quot;1&quot; width=&quot;96&quot;/&gt;&lt;COLUMN id=&quot;372&quot; visible=&quot;1&quot; width=&quot;96&quot;/&gt;&lt;COLUMN id=&quot;133&quot; visible=&quot;1&quot; width=&quot;94&quot;/&gt;&lt;/TABLELAYOUT&gt;"
       panelModulatorListCsvDelimiter="," panelModulatorListXmlRoot="ctrlrModulatorList"
       panelModulatorListXmlModulator="ctrlrModulator" panelModulatorListSortOption="1"
       panelGlobalVariables="0:-1:0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:0:-1:-1:-1:0:-1:-1:-1:-1:-1:0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1"
       panelResources="-- None" panelPropertyDisplayIDs="0" ctrlrMenuItemBackgroundColour="ffffffff"
       ctrlrMenuItemTextColour="ff000000" ctrlrMenuItemHighlightedTextColour="ffffffff"
       ctrlrMenuItemHighlightColour="ff4364ff" ctrlrMenuItemFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;3"
       ctrlrMenuItemSeparatorColour="44000000" ctrlrMenuItemHeaderColour="ff000000"
       ctrlrMenuBarBackgroundColour1="fff7f7f7" ctrlrMenuBarBackgroundColour2="ffcccccc"
       ctrlrMenuBarTextColour="ff000000" ctrlrMenuBarHighlightedTextColour="ffffffff"
       ctrlrMenuBarHighlightColour="ff4364ff" ctrlrMenuBarFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;3"
       ctrlrUseEditorWrapper="1" panelAuthorDonateUrl="" panelLastSaveDir="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC"
       panelIndex="0" uiPanelModulatorListViewTree="1" panelIsDirty="1">
  <uiWindowManager>
    <uiChildWindow uiChildWindowName="ModulatorList" uiChildWindowState="377 209 4655 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="MIDILibrary" uiChildWindowState="fs 0 0 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaMethodEditor" uiChildWindowState="647 408 1848 754">
      <uiChildWindowContentState luaMethodEditorBgColour="ffffffff" luaMethodEditorFont="&lt;Monospaced&gt;;14;0;0;0;0;1;3"
                                 luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;LUA&quot; scrollPos=&quot;254&quot;&gt;&#13;&#10;  &lt;OPEN id=&quot;Built-In&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Testkram&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Start&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;AssignValues&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Sweeper&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;XY&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Version&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Unused&quot;/&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;;5635c952af494654b884a205d2ebcc6c:8fa0a79d42a2418e884b67357599ce0b:a9a54f884cbd481cb1f89d6374c74834:f961f6c9c8ee41cbbde2c59a6c8abc36:c79f52e485dd4b33b8f76cd95ebb2cae:ea3f8ef553f246e7a8e2a4b5bd2c2b8e:7f04292507244ef893e0387fd672da90:75f4f419e8404d1aa1ad7f124916cbc2:573183b3ffb14a56b3891c9c22a71f7a:0242a4e03f664bcdb2a782d5d4a484f8:cc45051e255748e4abec69c7bcf48c52:df384fe5357246da8b8291b4a4fe2459:d07c3f0c5bfe4defaccb0aef6df4e1d1:73222b2a4fc8432badc503b1791c4631"/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaConsole" uiChildWindowState="2544 416 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LayerEditor" uiChildWindowState="3367 387 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="BufferEditor" uiChildWindowState="2534 440 800 500">
      <uiChildWindowContentState>
        <midiBufferEditorLeft midiBufferEditorSource="0" midiBufferEditorFilePath="" midiBufferEditorCodeEditor="0:0:0"/>
        <midiBufferEditorRight midiBufferEditorSource="0" midiBufferEditorFilePath="" midiBufferEditorCodeEditor="0:0:0"/>
      </uiChildWindowContentState>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="MIDISettings" uiChildWindowState="368 162 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
  </uiWindowManager>
  <midiLibrary uuid="4a8eb7e2a3254809b9e3cd3fc89744ac" luaTransInfo="-- None"
               midiLibraryParameterIndexProperty="modulatorCustomIndex" midiLibraryMidiProgramChangeControl="0"
               midiLibrarySendSnapAfterPChg="0" midiLibraryDefaultBankName="New Bank - %H:%M:%S"
               midiLibraryDefaultProgramName="New Program - %H:%M:%S" midiLibraryDefaultSnapshotName="Snapshot - %H:%M:%S"
               midiLibraryCustomRequests="">
    <midiLibrarySnapshots name="Snapshots"/>
    <midiLibraryFirmware name="Firmware"/>
    <midiLibraryEditBuffer name="Edit buffer"/>
    <midiLibraryTransactions name="Transactions"/>
  </midiLibrary>
  <luaManager>
    <luaManagerMethods>
      <luaMethodGroup name="Built-In" uuid="d97fbcb94cdf467dae62b3bf9bcd71fb">
        <luaMethod luaMethodName="table_dump" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print table contents&#13;&#10;--&#13;&#10;function table_dump(table)&#13;&#10;&#9;for key,value in ipairs(table) do&#13;&#10;&#9;&#9;_DBG (&quot;KEY= [&quot;..key..&quot;]&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if (type(value) == &quot;table&quot;) then&#13;&#10;&#9;&#9;&#9;table_dump(value)&#13;&#10;&#9;&#9;elseif (type(value) == &quot;nil&quot;) then&#13;&#10;&#9;&#9;&#9;_DBG (&quot; = NIL&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;what (value)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000001"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="what" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print methods for an object&#13;&#10;--&#13;&#10;function what(o)&#13;&#10;&#9;info = class_info(o)&#13;&#10;&#9;if info ~= nil then&#13;&#10;&#9;&#9;ret = &quot;Object type [&quot; .. info.name .. &quot;]\n-----------------------------------------------------------------\n\n&quot;..&quot;Members:\n&quot;&#13;&#10;&#13;&#10;&#9;&#9;if info.name == &quot;table&quot; then&#13;&#10;&#9;&#9;&#9;table_dump(o)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;for k, v in pairs(info.methods) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n\nAttributes:\n&quot;&#13;&#10;&#9;&#9;for k, v in pairs(info.attributes) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;console (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000002"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="how" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print all available classes&#13;&#10;--&#13;&#10;function how()&#13;&#10;&#9;ret = &quot;Available classes:\n&quot;&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;for i,v in ipairs(class_names()) do&#13;&#10;&#9;&#9;ret = ret .. &quot;\t&quot;.. v .. &quot;\n&quot;&#13;&#10;&#9;end&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;console (J(ret))&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000003"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="json4lua" luaMethodCode="-----------------------------------------------------------------------------&#13;&#10;-- JSON4Lua: JSON encoding / decoding support for the Lua language.&#13;&#10;-- json Module.&#13;&#10;-- Author: Craig Mason-Jones&#13;&#10;-- Homepage: http://json.luaforge.net/&#13;&#10;-- Version: 0.9.40&#13;&#10;-- This module is released under the MIT License (MIT).&#13;&#10;-- Please see LICENCE.txt for details.&#13;&#10;--&#13;&#10;-- USAGE:&#13;&#10;-- This module exposes two functions:&#13;&#10;--   encode(o)&#13;&#10;--     Returns the table / string / boolean / number / nil / json.null value as a JSON-encoded string.&#13;&#10;--   decode(json_string)&#13;&#10;--     Returns a Lua object populated with the data encoded in the JSON string json_string.&#13;&#10;--&#13;&#10;-- REQUIREMENTS:&#13;&#10;--   compat-5.1 if using Lua 5.0&#13;&#10;--&#13;&#10;-- CHANGELOG&#13;&#10;--   0.9.20 Introduction of local Lua functions for private functions (removed _ function prefix). &#13;&#10;--          Fixed Lua 5.1 compatibility issues.&#13;&#10;--   &#9;&#9;Introduced json.null to have null values in associative arrays.&#13;&#10;--          encode() performance improvement (more than 50%) through table.concat rather than ..&#13;&#10;--          Introduced decode ability to ignore /**/ comments in the JSON string.&#13;&#10;--   0.9.10 Fix to array encoding / decoding to correctly manage nil/null values in arrays.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Imports and dependencies&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;local math = require('math')&#13;&#10;local string = require(&quot;string&quot;)&#13;&#10;local table = require(&quot;table&quot;)&#13;&#10;&#13;&#10;local base = _G&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Module declaration&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;module(&quot;json&quot;)&#13;&#10;&#13;&#10;-- Public functions&#13;&#10;&#13;&#10;-- Private functions&#13;&#10;local decode_scanArray&#13;&#10;local decode_scanComment&#13;&#10;local decode_scanConstant&#13;&#10;local decode_scanNumber&#13;&#10;local decode_scanObject&#13;&#10;local decode_scanString&#13;&#10;local decode_scanWhitespace&#13;&#10;local encodeString&#13;&#10;local isArray&#13;&#10;local isEncodable&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- PUBLIC FUNCTIONS&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;--- Encodes an arbitrary Lua object / variable.&#13;&#10;-- @param v The Lua object / variable to be JSON encoded.&#13;&#10;-- @return String containing the JSON encoding in internal Lua string format (i.e. not unicode)&#13;&#10;function encode (v)&#13;&#10;  -- Handle nil values&#13;&#10;  if v==nil then&#13;&#10;    return &quot;null&quot;&#13;&#10;  end&#13;&#10;  &#13;&#10;  local vtype = base.type(v)  &#13;&#10;&#13;&#10;  -- Handle strings&#13;&#10;  if vtype=='string' then    &#13;&#10;    return '&quot;' .. encodeString(v) .. '&quot;'&#9;    -- Need to handle encoding in string&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle booleans&#13;&#10;  if vtype=='number' or vtype=='boolean' then&#13;&#10;    return base.tostring(v)&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle tables&#13;&#10;  if vtype=='table' then&#13;&#10;    local rval = {}&#13;&#10;    -- Consider arrays separately&#13;&#10;    local bArray, maxCount = isArray(v)&#13;&#10;    if bArray then&#13;&#10;      for i = 1,maxCount do&#13;&#10;        table.insert(rval, encode(v[i]))&#13;&#10;      end&#13;&#10;    else&#9;-- An object, not an array&#13;&#10;      for i,j in base.pairs(v) do&#13;&#10;        if isEncodable(i) and isEncodable(j) then&#13;&#10;          table.insert(rval, '&quot;' .. encodeString(i) .. '&quot;:' .. encode(j))&#13;&#10;        end&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if bArray then&#13;&#10;      return '[' .. table.concat(rval,',') ..']'&#13;&#10;    else&#13;&#10;      return '{' .. table.concat(rval,',') .. '}'&#13;&#10;    end&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle null values&#13;&#10;  if vtype=='function' and v==null then&#13;&#10;    return 'null'&#13;&#10;  end&#13;&#10;  &#13;&#10;  base.assert(false,'encode attempt to encode unsupported type ' .. vtype .. ':' .. base.tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;--- Decodes a JSON string and returns the decoded value as a Lua data structure / value.&#13;&#10;-- @param s The string to scan.&#13;&#10;-- @param [startPos] Optional starting position where the JSON string is located. Defaults to 1.&#13;&#10;-- @param Lua object, number The object that was scanned, as a Lua table / string / number / boolean or nil,&#13;&#10;-- and the position of the first character after&#13;&#10;-- the scanned JSON object.&#13;&#10;function decode(s, startPos)&#13;&#10;  startPos = startPos and startPos or 1&#13;&#10;  startPos = decode_scanWhitespace(s,startPos)&#13;&#10;  base.assert(startPos&lt;=string.len(s), 'Unterminated JSON encoded object found at position in [' .. s .. ']')&#13;&#10;  local curChar = string.sub(s,startPos,startPos)&#13;&#10;  -- Object&#13;&#10;  if curChar=='{' then&#13;&#10;    return decode_scanObject(s,startPos)&#13;&#10;  end&#13;&#10;  -- Array&#13;&#10;  if curChar=='[' then&#13;&#10;    return decode_scanArray(s,startPos)&#13;&#10;  end&#13;&#10;  -- Number&#13;&#10;  if string.find(&quot;+-0123456789.e&quot;, curChar, 1, true) then&#13;&#10;    return decode_scanNumber(s,startPos)&#13;&#10;  end&#13;&#10;  -- String&#13;&#10;  if curChar==[[&quot;]] or curChar==[[']] then&#13;&#10;    return decode_scanString(s,startPos)&#13;&#10;  end&#13;&#10;  if string.sub(s,startPos,startPos+1)=='/*' then&#13;&#10;    return decode(s, decode_scanComment(s,startPos))&#13;&#10;  end&#13;&#10;  -- Otherwise, it must be a constant&#13;&#10;  return decode_scanConstant(s,startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- The null function allows one to specify a null value in an associative array (which is otherwise&#13;&#10;-- discarded if you set the value with 'nil' in Lua. Simply set t = { first=json.null }&#13;&#10;function null()&#13;&#10;  return null -- so json.null() will also return null ;-)&#13;&#10;end&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Internal, PRIVATE functions.&#13;&#10;-- Following a Python-like convention, I have prefixed all these 'PRIVATE'&#13;&#10;-- functions with an underscore.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;--- Scans an array from JSON into a Lua object&#13;&#10;-- startPos begins at the start of the array.&#13;&#10;-- Returns the array and the next starting position&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position for the scan.&#13;&#10;-- @return table, int The scanned array as a table, and the position of the next character to scan.&#13;&#10;function decode_scanArray(s,startPos)&#13;&#10;  local array = {}&#9;-- The return value&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='[','decode_scanArray called but array does not start at position ' .. startPos .. ' in string:\n'..s )&#13;&#10;  startPos = startPos + 1&#13;&#10;  -- Infinite loop for array elements&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen,'JSON String ended unexpectedly scanning array.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar==']') then&#13;&#10;      return array, startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON String ended unexpectedly scanning array.')&#13;&#10;    object, startPos = decode(s,startPos)&#13;&#10;    table.insert(array,object)&#13;&#10;  until false&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a comment and discards the comment.&#13;&#10;-- Returns the position of the next character following the comment.&#13;&#10;-- @param string s The JSON string to scan.&#13;&#10;-- @param int startPos The starting position of the comment&#13;&#10;function decode_scanComment(s, startPos)&#13;&#10;  base.assert( string.sub(s,startPos,startPos+1)=='/*', &quot;decode_scanComment called but comment does not start at position &quot; .. startPos)&#13;&#10;  local endPos = string.find(s,'*/',startPos+2)&#13;&#10;  base.assert(endPos~=nil, &quot;Unterminated comment in string at &quot; .. startPos)&#13;&#10;  return endPos+2  &#13;&#10;end&#13;&#10;&#13;&#10;--- Scans for given constants: true, false or null&#13;&#10;-- Returns the appropriate Lua type, and the position of the next character to read.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position in the string at which to start scanning.&#13;&#10;-- @return object, int The object (true, false or nil) and the position at which the next character should be &#13;&#10;-- scanned.&#13;&#10;function decode_scanConstant(s, startPos)&#13;&#10;  local consts = { [&quot;true&quot;] = true, [&quot;false&quot;] = false, [&quot;null&quot;] = nil }&#13;&#10;  local constNames = {&quot;true&quot;,&quot;false&quot;,&quot;null&quot;}&#13;&#10;&#13;&#10;  for i,k in base.pairs(constNames) do&#13;&#10;    --print (&quot;[&quot; .. string.sub(s,startPos, startPos + string.len(k) -1) ..&quot;]&quot;, k)&#13;&#10;    if string.sub(s,startPos, startPos + string.len(k) -1 )==k then&#13;&#10;      return consts[k], startPos + string.len(k)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  base.assert(nil, 'Failed to scan constant from string ' .. s .. ' at starting position ' .. startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a number from the JSON encoded string.&#13;&#10;-- (in fact, also is able to scan numeric +- eqns, which is not&#13;&#10;-- in the JSON spec.)&#13;&#10;-- Returns the number, and the position of the next character&#13;&#10;-- after the number.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position at which to start scanning.&#13;&#10;-- @return number, int The extracted number and the position of the next character to scan.&#13;&#10;function decode_scanNumber(s,startPos)&#13;&#10;  local endPos = startPos+1&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local acceptableChars = &quot;+-0123456789.e&quot;&#13;&#10;  while (string.find(acceptableChars, string.sub(s,endPos,endPos), 1, true)&#13;&#10;&#9;and endPos&lt;=stringLen&#13;&#10;&#9;) do&#13;&#10;    endPos = endPos + 1&#13;&#10;  end&#13;&#10;  local stringValue = 'return ' .. string.sub(s,startPos, endPos-1)&#13;&#10;  local stringEval = base.loadstring(stringValue)&#13;&#10;  base.assert(stringEval, 'Failed to scan number [ ' .. stringValue .. '] in JSON string at position ' .. startPos .. ' : ' .. endPos)&#13;&#10;  return stringEval(), endPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON object into a Lua object.&#13;&#10;-- startPos begins at the start of the object.&#13;&#10;-- Returns the object and the next starting position.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return table, int The scanned object as a table and the position of the next character to scan.&#13;&#10;function decode_scanObject(s,startPos)&#13;&#10;  local object = {}&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local key, value&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='{','decode_scanObject called but object does not start at position ' .. startPos .. ' in string:\n' .. s)&#13;&#10;  startPos = startPos + 1&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly while scanning object.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar=='}') then&#13;&#10;      return object,startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly scanning object.')&#13;&#10;    -- Scan the key&#13;&#10;    key, startPos = decode(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    base.assert(string.sub(s,startPos,startPos)==':','JSON object key-value assignment mal-formed at ' .. startPos)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    value, startPos = decode(s,startPos)&#13;&#10;    object[key]=value&#13;&#10;  until false&#9;-- infinite loop while key-value pairs are found&#13;&#10;end&#13;&#10;&#13;&#10;-- START SoniEx2&#13;&#10;-- Initialize some things used by decode_scanString&#13;&#10;-- You know, for efficiency&#13;&#10;local escapeSequences = {&#13;&#10;  [&quot;\\t&quot;] = &quot;\t&quot;,&#13;&#10;  [&quot;\\f&quot;] = &quot;\f&quot;,&#13;&#10;  [&quot;\\r&quot;] = &quot;\r&quot;,&#13;&#10;  [&quot;\\n&quot;] = &quot;\n&quot;,&#13;&#10;  [&quot;\\b&quot;] = &quot;\b&quot;&#13;&#10;}&#13;&#10;base.setmetatable(escapeSequences, {__index = function(t,k)&#13;&#10;  -- skip &quot;\&quot; aka strip escape&#13;&#10;  return string.sub(k,2)&#13;&#10;end})&#13;&#10;-- END SoniEx2&#13;&#10;&#13;&#10;--- Scans a JSON string from the opening inverted comma or single quote to the&#13;&#10;-- end of the string.&#13;&#10;-- Returns the string extracted as a Lua string,&#13;&#10;-- and the position of the next non-string character&#13;&#10;-- (after the closing inverted comma or single quote).&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return string, int The extracted string as a Lua string, and the next character to parse.&#13;&#10;function decode_scanString(s,startPos)&#13;&#10;  base.assert(startPos, 'decode_scanString(..) called without start position')&#13;&#10;  local startChar = string.sub(s,startPos,startPos)&#13;&#10;  -- START SoniEx2&#13;&#10;  -- PS: I don't think single quotes are valid JSON&#13;&#10;  base.assert(startChar == [[&quot;]] or startChar == [[']],'decode_scanString called for a non-string')&#13;&#10;  --base.assert(startPos, &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; for string at position &quot; .. oldStart)&#13;&#10;  local t = {}&#13;&#10;  local i,j = startPos,startPos&#13;&#10;  while string.find(s, startChar, j+1) ~= j+1 do&#13;&#10;    local oldj = j&#13;&#10;    i,j = string.find(s, &quot;\\.&quot;, j+1)&#13;&#10;    local x,y = string.find(s, startChar, oldj+1)&#13;&#10;    if not i or x &lt; i then&#13;&#10;      base.print(s, startPos, string.sub(s,startPos,oldj))&#13;&#10;      i,j = x,y-1&#13;&#10;      if not x then base.print(s, startPos, string.sub(s,startPos,oldj)) end&#13;&#10;    end&#13;&#10;    table.insert(t, string.sub(s, oldj+1, i-1))&#13;&#10;    if string.sub(s, i, j) == &quot;\\u&quot; then&#13;&#10;      local a = string.sub(s,j+1,j+4)&#13;&#10;      j = j + 4&#13;&#10;      local n = base.tonumber(a, 16)&#13;&#10;      base.assert(n, &quot;String decoding failed: bad Unicode escape &quot; .. a .. &quot; at position &quot; .. i .. &quot; : &quot; .. j)&#13;&#10;      -- math.floor(x/2&#94;y) == lazy right shift&#13;&#10;      -- a % 2&#94;b == bitwise_and(a, (2&#94;b)-1)&#13;&#10;      -- 64 = 2&#94;6&#13;&#10;      -- 4096 = 2&#94;12 (or 2&#94;6 * 2&#94;6)&#13;&#10;      local x&#13;&#10;      if n &lt; 0x80 then&#13;&#10;        x = string.char(n % 0x80)&#13;&#10;      elseif n &lt; 0x800 then&#13;&#10;        -- [110x xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xC0 + (math.floor(n/64) % 0x20), 0x80 + (n % 0x40))&#13;&#10;      else&#13;&#10;        -- [1110 xxxx] [10xx xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xE0 + (math.floor(n/4096) % 0x10), 0x80 + (math.floor(n/64) % 0x40), 0x80 + (n % 0x40))&#13;&#10;      end&#13;&#10;      table.insert(t, x)&#13;&#10;    else&#13;&#10;      table.insert(t, escapeSequences[string.sub(s, i, j)])&#13;&#10;    end&#13;&#10;  end&#13;&#10;  table.insert(t,string.sub(j, j+1))&#13;&#10;  base.assert(string.find(s, startChar, j+1), &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; at position &quot; .. j .. &quot;(for string at position &quot; .. startPos .. &quot;)&quot;)&#13;&#10;  return table.concat(t,&quot;&quot;), j+2&#13;&#10;  -- END SoniEx2&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON string skipping all whitespace from the current start position.&#13;&#10;-- Returns the position of the first non-whitespace character, or nil if the whole end of string is reached.&#13;&#10;-- @param s The string being scanned&#13;&#10;-- @param startPos The starting position where we should begin removing whitespace.&#13;&#10;-- @return int The first position where non-whitespace was encountered, or string.len(s)+1 if the end of string&#13;&#10;-- was reached.&#13;&#10;function decode_scanWhitespace(s,startPos)&#13;&#10;  local whitespace=&quot; \n\r\t&quot;&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  while ( string.find(whitespace, string.sub(s,startPos,startPos), 1, true)  and startPos &lt;= stringLen) do&#13;&#10;    startPos = startPos + 1&#13;&#10;  end&#13;&#10;  return startPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Encodes a string to be JSON-compatible.&#13;&#10;-- This just involves back-quoting inverted commas, back-quotes and newlines, I think ;-)&#13;&#10;-- @param s The string to return as a JSON encoded (i.e. backquoted string)&#13;&#10;-- @return The string appropriately escaped.&#13;&#10;&#13;&#10;local escapeList = {&#13;&#10;    ['&quot;']  = '\\&quot;',&#13;&#10;    ['\\'] = '\\\\',&#13;&#10;    ['/']  = '\\/', &#13;&#10;    ['\b'] = '\\b',&#13;&#10;    ['\f'] = '\\f',&#13;&#10;    ['\n'] = '\\n',&#13;&#10;    ['\r'] = '\\r',&#13;&#10;    ['\t'] = '\\t'&#13;&#10;}&#13;&#10;&#13;&#10;function encodeString(s)&#13;&#10; return s:gsub(&quot;.&quot;, function(c) return escapeList[c] end) -- SoniEx2: 5.0 compat&#13;&#10;end&#13;&#10;&#13;&#10;-- Determines whether the given Lua type is an array or a table / dictionary.&#13;&#10;-- We consider any table an array if it has indexes 1..n for its n items, and no&#13;&#10;-- other data in the table.&#13;&#10;-- I think this method is currently a little 'flaky', but can't think of a good way around it yet...&#13;&#10;-- @param t The table to evaluate as an array&#13;&#10;-- @return boolean, number True if the table can be represented as an array, false otherwise. If true,&#13;&#10;-- the second returned value is the maximum&#13;&#10;-- number of indexed elements in the array. &#13;&#10;function isArray(t)&#13;&#10;  -- Next we count all the elements, ensuring that any non-indexed elements are not-encodable &#13;&#10;  -- (with the possible exception of 'n')&#13;&#10;  local maxIndex = 0&#13;&#10;  for k,v in base.pairs(t) do&#13;&#10;    if (base.type(k)=='number' and math.floor(k)==k and 1&lt;=k) then&#9;-- k,v is an indexed pair&#13;&#10;      if (not isEncodable(v)) then return false end&#9;-- All array elements must be encodable&#13;&#10;      maxIndex = math.max(maxIndex,k)&#13;&#10;    else&#13;&#10;      if (k=='n') then&#13;&#10;        if v ~= table.getn(t) then return false end  -- False if n does not hold the number of elements&#13;&#10;      else -- Else of (k=='n')&#13;&#10;        if isEncodable(v) then return false end&#13;&#10;      end  -- End of (k~='n')&#13;&#10;    end -- End of k,v not an indexed pair&#13;&#10;  end  -- End of loop across all pairs&#13;&#10;  return true, maxIndex&#13;&#10;end&#13;&#10;&#13;&#10;--- Determines whether the given Lua object / table / variable can be JSON encoded. The only&#13;&#10;-- types that are JSON encodable are: string, boolean, number, nil, table and json.null.&#13;&#10;-- In this implementation, all other types are ignored.&#13;&#10;-- @param o The object to examine.&#13;&#10;-- @return boolean True if the object should be JSON encoded, false if it should be ignored.&#13;&#10;function isEncodable(o)&#13;&#10;  local t = base.type(o)&#13;&#10;  return (t=='string' or t=='boolean' or t=='number' or t=='nil' or t=='table') or (t=='function' and o==null) &#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000004"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="debugger.lua" luaMethodCode="--{{{  history&#13;&#10;&#13;&#10;--15/03/06 DCN Created based on RemDebug&#13;&#10;--28/04/06 DCN Update for Lua 5.1&#13;&#10;--01/06/06 DCN Fix command argument parsing&#13;&#10;--             Add step/over N facility&#13;&#10;--             Add trace lines facility&#13;&#10;--05/06/06 DCN Add trace call/return facility&#13;&#10;--06/06/06 DCN Make it behave when stepping through the creation of a coroutine&#13;&#10;--06/06/06 DCN Integrate the simple debugger into the main one&#13;&#10;--07/06/06 DCN Provide facility to step into coroutines&#13;&#10;--13/06/06 DCN Fix bug that caused the function environment to get corrupted with the global one&#13;&#10;--14/06/06 DCN Allow 'sloppy' file names when setting breakpoints&#13;&#10;--04/08/06 DCN Allow for no space after command name&#13;&#10;--11/08/06 DCN Use io.write not print&#13;&#10;--30/08/06 DCN Allow access to array elements in 'dump'&#13;&#10;--10/10/06 DCN Default to breakfile for all commands that require a filename and give '-'&#13;&#10;--06/12/06 DCN Allow for punctuation characters in DUMP variable names&#13;&#10;--03/01/07 DCN Add pause on/off facility&#13;&#10;--19/06/07 DCN Allow for duff commands being typed in the debugger (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--             Allow for case sensitive file systems               (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--04/08/09 DCN Add optional line count param to pause&#13;&#10;--05/08/09 DCN Reset the debug hook in Pause() even if we think we're started&#13;&#10;--30/09/09 DCN Re-jig to not use co-routines (makes debugging co-routines awkward)&#13;&#10;--01/10/09 DCN Add ability to break on reaching any line in a file&#13;&#10;--24/07/13 TWW Added code for emulating setfenv/getfenv in Lua 5.2 as per&#13;&#10;--             http://lua-users.org/lists/lua-l/2010-06/msg00313.html&#13;&#10;--25/07/13 TWW Copied Alex Parrill's fix for errors when tracing back across a C frame&#13;&#10;--             (https://github.com/ColonelThirtyTwo/clidebugger, 26/01/12)&#13;&#10;--25/07/13 DCN Allow for windows and unix file name conventions in has_breakpoint&#13;&#10;--26/07/13 DCN Allow for \ being interpreted as an escape inside a [] pattern in 5.2&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  description&#13;&#10;&#13;&#10;--A simple command line debug system for Lua written by Dave Nichols of&#13;&#10;--Match-IT Limited. Its public domain software. Do with it as you wish.&#13;&#10;&#13;&#10;--This debugger was inspired by:&#13;&#10;-- RemDebug 1.0 Beta&#13;&#10;-- Copyright Kepler Project 2005 (http://www.keplerproject.org/remdebug)&#13;&#10;&#13;&#10;--Usage:&#13;&#10;--  require('debugger')        --load the debug library&#13;&#10;--  pause(message)             --start/resume a debug session&#13;&#10;&#13;&#10;--An assert() failure will also invoke the debugger.&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;local IsWindows = string.find(string.lower(os.getenv('OS') or ''),'&#94;windows')&#13;&#10;&#13;&#10;local coro_debugger&#13;&#10;local events = { BREAK = 1, WATCH = 2, STEP = 3, SET = 4 }&#13;&#10;breakpoints = {}&#13;&#10;local watches = {}&#13;&#10;local step_into   = false&#13;&#10;local step_over   = false&#13;&#10;local step_lines  = 0&#13;&#10;local step_level  = {main=0}&#13;&#10;local stack_level = {main=0}&#13;&#10;local trace_level = {main=0}&#13;&#10;local trace_calls = false&#13;&#10;local trace_returns = false&#13;&#10;local trace_lines = false&#13;&#10;local ret_file, ret_line, ret_name&#13;&#10;local current_thread = 'main'&#13;&#10;local started = false&#13;&#10;local pause_off = false&#13;&#10;local _g      = _G&#13;&#10;local cocreate, cowrap = coroutine.create, coroutine.wrap&#13;&#10;local pausemsg = 'pause'&#13;&#10;&#13;&#10;--{{{  make Lua 5.2 compatible&#13;&#10;&#13;&#10;if not setfenv then -- Lua 5.2&#13;&#10;  --[[&#13;&#10;  As far as I can see, the only missing detail of these functions (except&#13;&#10;  for occasional bugs) to achieve 100% compatibility is the case of&#13;&#10;  'getfenv' over a function that does not have an _ENV variable (that is,&#13;&#10;  it uses no globals).&#13;&#10;&#13;&#10;  We could use a weak table to keep the environments of these functions&#13;&#10;  when set by setfenv, but that still misses the case of a function&#13;&#10;  without _ENV that was not subjected to setfenv.&#13;&#10;&#13;&#10;  -- Roberto&#13;&#10;  ]]--&#13;&#10;&#13;&#10;  setfenv = setfenv or function(f, t)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    if name then&#13;&#10;      debug.upvaluejoin(f, up, function() return name end, 1) -- use unique upvalue&#13;&#10;      debug.setupvalue(f, up, t)&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  getfenv = getfenv or function(f)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name, val&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name, val = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    return val&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local hints -- command help&#13;&#10;--The format in here is name=summary|description&#13;&#10;local hints = {&#13;&#10;&#13;&#10;pause =   [[&#13;&#10;pause(msg[,lines][,force]) -- start/resume a debugger session|&#13;&#10;&#13;&#10;This can only be used in your code or from the console as a means to&#13;&#10;start/resume a debug session.&#13;&#10;If msg is given that is shown when the session starts/resumes. Useful to&#13;&#10;give a context if you've instrumented your code with pause() statements.&#13;&#10;&#13;&#10;If lines is given, the script pauses after that many lines, else it pauses&#13;&#10;immediately.&#13;&#10;&#13;&#10;If force is true, the pause function is honoured even if poff has been used.&#13;&#10;This is useful when in an interactive console session to regain debugger&#13;&#10;control.&#13;&#10;]],&#13;&#10;&#13;&#10;poff =    [[&#13;&#10;poff                -- turn off pause() command|&#13;&#10;&#13;&#10;This causes all pause() commands to be ignored. This is useful if you have&#13;&#10;instrumented your code in a busy loop and want to continue normal execution&#13;&#10;with no further interruption.&#13;&#10;]],&#13;&#10;&#13;&#10;pon =     [[&#13;&#10;pon                 -- turn on pause() command|&#13;&#10;&#13;&#10;This re-instates honouring the pause() commands you may have instrumented&#13;&#10;your code with.&#13;&#10;]],&#13;&#10;&#13;&#10;setb =    [[&#13;&#10;setb [line file]    -- set a breakpoint to line/file|, line 0 means 'any'&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is set at the file for the&#13;&#10;currently set level (see &quot;set&quot;). Execution pauses when this line is about&#13;&#10;to be executed and the debugger session is re-activated.&#13;&#10;&#13;&#10;The file can be given as the fully qualified name, partially qualified or&#13;&#10;just the file name. E.g. if file is set as &quot;myfile.lua&quot;, then whenever&#13;&#10;execution reaches any file that ends with &quot;myfile.lua&quot; it will pause. If&#13;&#10;no extension is given, any extension will do.&#13;&#10;&#13;&#10;If the line is given as 0, then reaching any line in the file will do.&#13;&#10;]],&#13;&#10;&#13;&#10;delb =    [[&#13;&#10;delb [line file]    -- removes a breakpoint|&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is removed for the file of the&#13;&#10;currently set level (see &quot;set&quot;).&#13;&#10;]],&#13;&#10;&#13;&#10;delallb = [[&#13;&#10;delallb             -- removes all breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;setw =    [[&#13;&#10;setw &lt;exp&gt;          -- adds a new watch expression|&#13;&#10;&#13;&#10;The expression is evaluated before each line is executed. If the expression&#13;&#10;yields true then execution is paused and the debugger session re-activated.&#13;&#10;The expression is executed in the context of the line about to be executed.&#13;&#10;]],&#13;&#10;&#13;&#10;delw =    [[&#13;&#10;delw &lt;index&gt;        -- removes the watch expression at index|&#13;&#10;&#13;&#10;The index is that returned when the watch expression was set by setw.&#13;&#10;]],&#13;&#10;&#13;&#10;delallw = [[&#13;&#10;delallw             -- removes all watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;run     = [[&#13;&#10;run                 -- run until next breakpoint or watch expression|&#13;&#10;]],&#13;&#10;&#13;&#10;step    = [[&#13;&#10;step [N]            -- run next N lines, stepping into function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;over    = [[&#13;&#10;over [N]            -- run next N lines, stepping over function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;out     = [[&#13;&#10;out [N]             -- run lines until stepped out of N functions|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;If you are inside a function, using &quot;out 1&quot; will run until you return&#13;&#10;from that function to the caller.&#13;&#10;]],&#13;&#10;&#13;&#10;gotoo   = [[&#13;&#10;gotoo [line file]    -- step to line in file|&#13;&#10;&#13;&#10;This is equivalent to 'setb line file', followed by 'run', followed&#13;&#10;by 'delb line file'.&#13;&#10;]],&#13;&#10;&#13;&#10;listb   = [[&#13;&#10;listb               -- lists breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;listw   = [[&#13;&#10;listw               -- lists watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;set     = [[&#13;&#10;set [level]         -- set context to stack level, omitted=show|&#13;&#10;&#13;&#10;If level is omitted it just prints the current level set.&#13;&#10;This sets the current context to the level given. This affects the&#13;&#10;context used for several other functions (e.g. vars). The possible&#13;&#10;levels are those shown by trace.&#13;&#10;]],&#13;&#10;&#13;&#10;vars    = [[&#13;&#10;vars [depth]        -- list context locals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all non-nil local variables and all non-nil upvalues in the&#13;&#10;currently set context. For variables that are tables, lists all fields&#13;&#10;to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;fenv    = [[&#13;&#10;fenv [depth]        -- list context function env to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all function environment variables in the currently set context.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;glob    = [[&#13;&#10;glob [depth]        -- list globals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all global variables.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;ups     = [[&#13;&#10;ups                 -- list all the upvalue names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;locs    = [[&#13;&#10;locs                -- list all the locals names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;dump    = [[&#13;&#10;dump &lt;var&gt; [depth]  -- dump all fields of variable to depth|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Prints the value of &lt;var&gt; in the currently set context level. If &lt;var&gt;&#13;&#10;is a table, lists all fields to the given depth. &lt;var&gt; can be just a&#13;&#10;name, or name.field or name.# to any depth, e.g. t.1.f accesses field&#13;&#10;'f' in array element 1 in table 't'.&#13;&#10;&#13;&#10;Can also be called from a script as dump(var,depth).&#13;&#10;]],&#13;&#10;&#13;&#10;tron    = [[&#13;&#10;tron [crl]          -- turn trace on for (c)alls, (r)etuns, (l)lines|&#13;&#10;&#13;&#10;If no parameter is given then tracing is turned off.&#13;&#10;When tracing is turned on a line is printed to the console for each&#13;&#10;debug 'event' selected. c=function calls, r=function returns, l=lines.&#13;&#10;]],&#13;&#10;&#13;&#10;trace   = [[&#13;&#10;trace               -- dumps a stack trace|&#13;&#10;&#13;&#10;Format is [level] = file,line,name&#13;&#10;The level is a candidate for use by the 'set' command.&#13;&#10;]],&#13;&#10;&#13;&#10;info    = [[&#13;&#10;info                -- dumps the complete debug info captured|&#13;&#10;&#13;&#10;Only useful as a diagnostic aid for the debugger itself. This information&#13;&#10;can be HUGE as it dumps all variables to the maximum depth, so be careful.&#13;&#10;]],&#13;&#10;&#13;&#10;show    = [[&#13;&#10;show line file X Y  -- show X lines before and Y after line in file|&#13;&#10;&#13;&#10;If line is omitted or is '-' then the current set context line is used.&#13;&#10;If file is omitted or is '-' then the current set context file is used.&#13;&#10;If file is not fully qualified and cannot be opened as specified, then&#13;&#10;a search for the file in the package[path] is performed using the usual&#13;&#10;&quot;require&quot; searching rules. If no file extension is given, .lua is used.&#13;&#10;Prints the lines from the source file around the given line.&#13;&#10;]],&#13;&#10;&#13;&#10;exit    = [[&#13;&#10;exit                -- exits debugger, re-start it using pause()|&#13;&#10;]],&#13;&#10;&#13;&#10;help    = [[&#13;&#10;help [command]      -- show this list or help for command|&#13;&#10;]],&#13;&#10;&#13;&#10;[&quot;&lt;statement&gt;&quot;] = [[&#13;&#10;&lt;statement&gt;         -- execute a statement in the current context|&#13;&#10;&#13;&#10;The statement can be anything that is legal in the context, including&#13;&#10;assignments. Such assignments affect the context and will be in force&#13;&#10;immediately. Any results returned are printed. Use '=' as a short-hand&#13;&#10;for 'return', e.g. &quot;=func(arg)&quot; will call 'func' with 'arg' and print&#13;&#10;the results, and &quot;=var&quot; will just print the value of 'var'.&#13;&#10;]],&#13;&#10;&#13;&#10;what    = [[&#13;&#10;what &lt;func&gt;         -- show where &lt;func&gt; is defined (if known)|&#13;&#10;]],&#13;&#10;&#13;&#10;}&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{ Local function to get table size&#13;&#10;local function tsize(t)&#13;&#10;    local count=0&#13;&#10;&#13;&#10;    for k,v in pairs(t) do&#13;&#10;        count = count + 1&#13;&#10;    end&#13;&#10;&#13;&#10;    return count&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;---{{{ Global utility function to set breakpoints, used inside Ctrlr&#13;&#10;function setBreakpoint(line, file, shouldBeSet)&#13;&#10;    if not breakpoints[line] then&#13;&#10;        breakpoints[line] = {}&#13;&#10;    end&#13;&#10;&#13;&#10;    if shouldBeSet then&#13;&#10;        breakpoints[line][file] = true&#13;&#10;    else&#13;&#10;        breakpoints[line] = nil&#13;&#10;    end&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;&#13;&#10;--{{{  local function getinfo(level,field)&#13;&#10;&#13;&#10;--like debug.getinfo but copes with no activation record at the given level&#13;&#10;--and knows how to get 'field'. 'field' can be the name of any of the&#13;&#10;--activation record fields or any of the 'what' names or nil for everything.&#13;&#10;--only valid when using the stack level to get info, not a function name.&#13;&#10;&#13;&#10;local function getinfo(level,field)&#13;&#10;  level = level + 1  --to get to the same relative level as the caller&#13;&#10;  if not field then return debug.getinfo(level) end&#13;&#10;  local what&#13;&#10;  if field == 'name' or field == 'namewhat' then&#13;&#10;    what = 'n'&#13;&#10;  elseif field == 'what' or field == 'source' or field == 'linedefined' or field == 'lastlinedefined' or field == 'short_src' then&#13;&#10;    what = 'S'&#13;&#10;  elseif field == 'currentline' then&#13;&#10;    what = 'l'&#13;&#10;  elseif field == 'nups' then&#13;&#10;    what = 'u'&#13;&#10;  elseif field == 'func' then&#13;&#10;    what = 'f'&#13;&#10;  else&#13;&#10;    return debug.getinfo(level,field)&#13;&#10;  end&#13;&#10;  local ar = debug.getinfo(level,what)&#13;&#10;  if ar then return ar[field] else return nil end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function indented( level, ... )&#13;&#10;&#13;&#10;local function indented( level, ... )&#13;&#10;  ctrlrDebugger:write( string.format (&quot;%s%s\n&quot;, string.rep('  ',level), table.concat({...}) ))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpval( level, name, value, limit )&#13;&#10;&#13;&#10;local dumpvisited&#13;&#10;&#13;&#10;local function dumpval( level, name, value, limit )&#13;&#10;    local index&#13;&#10;&#13;&#10;    if type(name) == 'number' then&#13;&#10;        index = string.format(&quot;%q,&quot;,name)&#13;&#10;    elseif type(name) == 'string' and (name == '__VARSLEVEL__' or name == '__ENVIRONMENT__' or name == '__GLOBALS__' or name == '__UPVALUES__' or name == '__LOCALS__') then&#13;&#10;        --ignore these, they are debugger generated&#13;&#10;        return&#13;&#10;    elseif type(name) == 'string' and string.find(name,'&#94;[_%a][_.%w]*$') then&#13;&#10;        index = string.format (&quot;%q: &quot;, name);&#13;&#10;    else&#13;&#10;        index = string.format (&quot;%q,&quot;, tostring(name))&#13;&#10;    end&#13;&#10;&#13;&#10;    if type(value) == 'table' then&#13;&#10;        if dumpvisited[value] then&#13;&#10;            indented (level, index, string.format(&quot;%q&quot;, dumpvisited[value]))&#13;&#10;        else&#13;&#10;            dumpvisited[value] = string.format (&quot;\&quot;table\&quot;: \&quot;%d\&quot;,&quot;, tsize (value))&#13;&#10;            if (limit or 0) &gt; 0 and level+1 &gt;= limit then&#13;&#10;                indented (level, index, string.format (&quot;{%s&quot;, string.gsub(dumpvisited[value], &quot;,&quot;, &quot;},&quot;)))&#13;&#10;            else&#13;&#10;                indented (level, index, &quot;{\n&quot;, dumpvisited[value])&#13;&#10;&#13;&#10;                for n,v in pairs(value) do&#13;&#10;                    dumpval (level+1, n, v, limit)&#13;&#10;                end&#13;&#10;&#13;&#10;                indented (level, &quot;}&quot;)&#13;&#10;            end&#13;&#10;        end&#13;&#10;    else&#13;&#10;        if type(value) == 'string' then&#13;&#10;            indented (level, index, string.format(&quot;{\&quot;string\&quot;: %q}&quot;,value), ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'userdata' then&#13;&#10;            info = class_info (value)&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;userdata\&quot;: %q}&quot;, info.name) , ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'number' then&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;number\&quot;: %q}&quot;,tostring(value)), ',')&#13;&#10;        end&#13;&#10;    end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpvar( value, limit, name )&#13;&#10;&#13;&#10;local function dumpvar( value, limit, name )&#13;&#10;  ctrlrDebugger:write (&quot;\n::start dumpvar\n&quot;)&#13;&#10;  dumpvisited = {}&#13;&#10;  dumpval( 0, name or tostring(value), value, limit )&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function show(file,line,before,after)&#13;&#10;&#13;&#10;--show +/-N lines of a file around line M&#13;&#10;&#13;&#10;local function show(file,line,before,after)&#13;&#10;&#13;&#10;  line   = tonumber(line   or 1)&#13;&#10;  before = tonumber(before or 10)&#13;&#10;  after  = tonumber(after  or before)&#13;&#10;&#13;&#10;  if not string.find(file,'%.') then file = file..'.lua' end&#13;&#10;&#13;&#10;  local f = io.open(file,'r')&#13;&#10;  if not f then&#13;&#10;    --{{{  try to find the file in the path&#13;&#10;&#13;&#10;    --&#13;&#10;    -- looks for a file in the package path&#13;&#10;    --&#13;&#10;    local path = package.path or LUA_PATH or ''&#13;&#10;    for c in string.gmatch (path, &quot;[&#94;;]+&quot;) do&#13;&#10;      local c = string.gsub (c, &quot;%?%.lua&quot;, file)&#13;&#10;      f = io.open (c,'r')&#13;&#10;      if f then&#13;&#10;        break&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    --}}}&#13;&#10;    if not f then&#13;&#10;      ctrlrDebugger:write('Cannot find '..file..'\n')&#13;&#10;      return&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  local i = 0&#13;&#10;  for l in f:lines() do&#13;&#10;    i = i + 1&#13;&#10;    if i &gt;= (line-before) then&#13;&#10;      if i &gt; (line+after) then break end&#13;&#10;      if i == line then&#13;&#10;        ctrlrDebugger:write(i..'***\t'..l..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(i..'\t'..l..'\n')&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  f:close()&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function tracestack(l)&#13;&#10;&#13;&#10;local function gi( i )&#13;&#10;  return function() i=i+1 return debug.getinfo(i),i end&#13;&#10;end&#13;&#10;&#13;&#10;local function gl( level, j )&#13;&#10;  return function() j=j+1 return debug.getlocal( level, j ) end&#13;&#10;end&#13;&#10;&#13;&#10;local function gu( func, k )&#13;&#10;  return function() k=k+1 return debug.getupvalue( func, k ) end&#13;&#10;end&#13;&#10;&#13;&#10;local  traceinfo&#13;&#10;&#13;&#10;local function tracestack(l)&#13;&#10;  local l = l + 1                        --NB: +1 to get level relative to caller&#13;&#10;  traceinfo = {}&#13;&#10;  traceinfo.pausemsg = pausemsg&#13;&#10;  for ar,i in gi(l) do&#13;&#10;    table.insert( traceinfo, ar )&#13;&#10;    if ar.what ~= 'C' then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gl(i,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.lnames  = names&#13;&#10;        ar.lvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if ar.func then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gu(ar.func,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.unames  = names&#13;&#10;        ar.uvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace()&#13;&#10;&#13;&#10;local function trace(set)&#13;&#10;  ctrlrDebugger:write (&quot;\n::start trace\n&quot;)&#13;&#10;  local mark&#13;&#10;  for level,ar in ipairs(traceinfo) do&#13;&#10;    if level == set then&#13;&#10;      mark = '***'&#13;&#10;    else&#13;&#10;      mark = ''&#13;&#10;    end&#13;&#10;    ctrlrDebugger:write('['..level..']'..mark..'\t'..(ar.name or ar.what)..' in '..ar.short_src..':'..ar.currentline..'\n')&#13;&#10;  end&#13;&#10;&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function info()&#13;&#10;&#13;&#10;local function info()&#13;&#10;    dumpvar( traceinfo, 0, 'traceinfo' )&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function set_breakpoint(file, line, once)&#13;&#10;&#13;&#10;local function set_breakpoint(file, line, once)&#13;&#10;  if not breakpoints[line] then&#13;&#10;    breakpoints[line] = {}&#13;&#10;  end&#13;&#10;  if once then&#13;&#10;    breakpoints[line][file] = 1&#13;&#10;  else&#13;&#10;    breakpoints[line][file] = true&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function remove_breakpoint(file, line)&#13;&#10;&#13;&#10;local function remove_breakpoint(file, line)&#13;&#10;  if breakpoints[line] then&#13;&#10;    breakpoints[line][file] = nil&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function has_breakpoint(file, line)&#13;&#10;&#13;&#10;--allow for 'sloppy' file names&#13;&#10;--search for file and all variations walking up its directory hierachy&#13;&#10;--ditto for the file with no extension&#13;&#10;--a breakpoint can be permenant or once only, if once only its removed&#13;&#10;--after detection here, these are used for temporary breakpoints in the&#13;&#10;--debugger loop when executing the 'gotoo' command&#13;&#10;--a breakpoint on line 0 of a file means any line in that file&#13;&#10;&#13;&#10;local function has_breakpoint(file, line)&#13;&#10;  local isLine = breakpoints[line]&#13;&#10;  local isZero = breakpoints[0]&#13;&#10;  if not isLine and not isZero then return false end&#13;&#10;  local noext = string.gsub(file,&quot;(%..-)$&quot;,'',1)&#13;&#10;  if noext == file then noext = nil end&#13;&#10;  while file do&#13;&#10;    if isLine and isLine[file] then&#13;&#10;      if isLine[file] == 1 then isLine[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[file] then&#13;&#10;      if isZero[file] == 1 then isZero[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      file = string.match(file,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      file = string.match(file,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  while noext do&#13;&#10;    if isLine and isLine[noext] then&#13;&#10;      if isLine[noext] == 1 then isLine[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[noext] then&#13;&#10;      if isZero[noext] == 1 then isZero[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      noext = string.match(noext,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      noext = string.match(noext,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  return false&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function capture_vars(ref,level,line)&#13;&#10;&#13;&#10;local function capture_vars(ref,level,line)&#13;&#10;  --get vars, file and line for the given level relative to debug_hook offset by ref&#13;&#10;&#13;&#10;  local lvl = ref + level                --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  --{{{  capture variables&#13;&#10;&#13;&#10;  local ar = debug.getinfo(lvl, &quot;f&quot;)&#13;&#10;  if not ar then return {},'?',0 end&#13;&#10;&#13;&#10;  local vars = {__UPVALUES__={}, __LOCALS__={}}&#13;&#10;  local i&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if string.sub(name,1,1) ~= '(' then  --NB: ignoring internal control variables&#13;&#10;        vars[name] = value&#13;&#10;        vars.__UPVALUES__[i] = name&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;    vars.__ENVIRONMENT__ = getfenv(func)&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__GLOBALS__ = getfenv(0)&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(lvl, i)&#13;&#10;    if not name then break end&#13;&#10;    if string.sub(name,1,1) ~= '(' then    --NB: ignoring internal control variables&#13;&#10;      vars[name] = value&#13;&#10;      vars.__LOCALS__[i] = name&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__VARSLEVEL__ = level&#13;&#10;&#13;&#10;  if func then&#13;&#10;    --NB: Do not do this until finished filling the vars table&#13;&#10;    setmetatable(vars, { __index = getfenv(func), __newindex = getfenv(func) })&#13;&#10;  end&#13;&#10;&#13;&#10;  --NB: Do not read or write the vars table anymore else the metatable functions will get invoked!&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  local file = getinfo(lvl, &quot;source&quot;)&#13;&#10;  if string.find(file, &quot;@&quot;) == 1 then&#13;&#10;    file = string.sub(file, 2)&#13;&#10;  end&#13;&#10;  if IsWindows then file = string.lower(file) end&#13;&#10;&#13;&#10;  if not line then&#13;&#10;    line = getinfo(lvl, &quot;currentline&quot;)&#13;&#10;  end&#13;&#10;&#13;&#10;  return vars,file,line&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;  if type(vars) ~= 'table' then return end&#13;&#10;&#13;&#10;  local level = vars.__VARSLEVEL__       --NB: This level is relative to debug_hook offset by ref&#13;&#10;  if not level then return end&#13;&#10;&#13;&#10;  level = level + ref                    --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  local i&#13;&#10;  local written_vars = {}&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(level, i)&#13;&#10;    if not name then break end&#13;&#10;    if vars[name] and string.sub(name,1,1) ~= '(' then     --NB: ignoring internal control variables&#13;&#10;      debug.setlocal(level, i, vars[name])&#13;&#10;      written_vars[name] = true&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  local ar = debug.getinfo(level, &quot;f&quot;)&#13;&#10;  if not ar then return end&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if vars[name] and string.sub(name,1,1) ~= '(' then   --NB: ignoring internal control variables&#13;&#10;        if not written_vars[name] then&#13;&#10;          debug.setupvalue(func, i, vars[name])&#13;&#10;        end&#13;&#10;        written_vars[name] = true&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace_event(event, line, level)&#13;&#10;&#13;&#10;local function print_trace(level,depth,event,file,line,name)&#13;&#10;&#13;&#10;  --NB: level here is relative to the caller of trace_event, so offset by 2 to get to there&#13;&#10;  level = level + 2&#13;&#10;&#13;&#10;  local file = file or getinfo(level,'short_src')&#13;&#10;  local line = line or getinfo(level,'currentline')&#13;&#10;  local name = name or getinfo(level,'name')&#13;&#10;&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;&#13;&#10;  ctrlrDebugger:write(prefix..&#13;&#10;           string.format('%08.2f:%02i.',os.clock(),depth)..&#13;&#10;           string.rep('.',depth%32)..&#13;&#10;           (file or '')..' ('..(line or '')..') '..&#13;&#10;           (name or '')..&#13;&#10;           ' ('..event..')\n')&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;local function trace_event(event, line, level)&#13;&#10;&#13;&#10;  if event == 'return' and trace_returns then&#13;&#10;    --note the line info for later&#13;&#10;    ret_file = getinfo(level+1,'short_src')&#13;&#10;    ret_line = getinfo(level+1,'currentline')&#13;&#10;    ret_name = getinfo(level+1,'name')&#13;&#10;  end&#13;&#10;&#13;&#10;  if event ~= 'line' then return end&#13;&#10;&#13;&#10;  local slevel = stack_level[current_thread]&#13;&#10;  local tlevel = trace_level[current_thread]&#13;&#10;&#13;&#10;  if trace_calls and slevel &gt; tlevel then&#13;&#10;    --we are now in the function called, so look back 1 level further to find the calling file and line&#13;&#10;    print_trace(level+1,slevel-1,'c',nil,nil,getinfo(level+1,'name'))&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_returns and slevel &lt; tlevel then&#13;&#10;    print_trace(level,slevel,'r',ret_file,ret_line,ret_name)&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_lines then&#13;&#10;    print_trace(level,slevel,'l')&#13;&#10;  end&#13;&#10;&#13;&#10;  trace_level[current_thread] = stack_level[current_thread]&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function report(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function report(ev, vars, file, line, idx_watch)&#13;&#10;  local vars = vars or {}&#13;&#10;  local file = file or '?'&#13;&#10;  local line = line or 0&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;  if ev == events.STEP then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')\n')&#13;&#10;  elseif ev == events.BREAK then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..') (breakpoint)\n')&#13;&#10;  elseif ev == events.WATCH then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')'..&quot; (watch expression &quot;..idx_watch.. &quot;: [&quot;..watches[idx_watch].exp..&quot;])\n&quot;)&#13;&#10;  elseif ev == events.SET then&#13;&#10;    --do nothing&#13;&#10;  else&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Error in application: &quot;..file..&quot; line &quot;..line..&quot;\n&quot;)&#13;&#10;  end&#13;&#10;  if ev ~= events.SET then&#13;&#10;    if pausemsg and pausemsg ~= '' then ctrlrDebugger:write('Message: '..pausemsg..'\n') end&#13;&#10;    pausemsg = ''&#13;&#10;  end&#13;&#10;  return vars, file, line&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;  local eval_env  = vars or {}&#13;&#10;  local breakfile = file or '?'&#13;&#10;  local breakline = line or 0&#13;&#10;&#13;&#10;  local command, args&#13;&#10;&#13;&#10;  --{{{  local function getargs(spec)&#13;&#10;&#13;&#10;  --get command arguments according to the given spec from the args string&#13;&#10;  --the spec has a single character for each argument, arguments are separated&#13;&#10;  --by white space, the spec characters can be one of:&#13;&#10;  -- F for a filename    (defaults to breakfile if - given in args)&#13;&#10;  -- L for a line number (defaults to breakline if - given in args)&#13;&#10;  -- N for a number&#13;&#10;  -- V for a variable name&#13;&#10;  -- S for a string&#13;&#10;&#13;&#10;  local function getargs(spec)&#13;&#10;    local res={}&#13;&#10;    local char,arg&#13;&#10;    local ptr=1&#13;&#10;    for i=1,string.len(spec) do&#13;&#10;      char = string.sub(spec,i,i)&#13;&#10;      if     char == 'F' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakfile end&#13;&#10;      elseif char == 'L' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakline end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'N' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '0' end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'V' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      elseif char == 'S' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      else&#13;&#10;        arg = ''&#13;&#10;      end&#13;&#10;      table.insert(res,arg or '')&#13;&#10;    end&#13;&#10;    return unpack(res)&#13;&#10;  end&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  while true do&#13;&#10;    -- io.write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    ctrlrDebugger:write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    -- local line = io.read(&quot;*line&quot;)&#13;&#10;    local line = ctrlrDebugger:read()&#13;&#10;    if line == nil then ctrlrDebugger:write('\n'); line = 'exit' end&#13;&#10;&#13;&#10;    if string.find(line, &quot;&#94;[a-z]+&quot;) then&#13;&#10;      command = string.sub(line, string.find(line, &quot;&#94;[a-z]+&quot;))&#13;&#10;      args    = string.gsub(line,&quot;&#94;[a-z]+%s*&quot;,'',1)            --strip command off line&#13;&#10;    else&#13;&#10;      command = ''&#13;&#10;    end&#13;&#10;&#13;&#10;    if command == &quot;setb&quot; then&#13;&#10;      --{{{  set breakpoint&#13;&#10;&#13;&#10;      local line, filename  = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        set_breakpoint(filename,line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint set in file &quot;..filename..' line '..line..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delb&quot; then&#13;&#10;      --{{{  delete breakpoint&#13;&#10;&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        remove_breakpoint(filename, line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint deleted from file &quot;..filename..' line '..line..&quot;\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallb&quot; then&#13;&#10;      --{{{  delete all breakpoints&#13;&#10;      breakpoints = {}&#13;&#10;      ctrlrDebugger:write('All breakpoints deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listb&quot; then&#13;&#10;      --{{{  list breakpoints&#13;&#10;      for i, v in pairs(breakpoints) do&#13;&#10;        for ii, vv in pairs(v) do&#13;&#10;          ctrlrDebugger:write(&quot;Break at: &quot;..i..' in '..ii..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;setw&quot; then&#13;&#10;      --{{{  set watch expression&#13;&#10;&#13;&#10;      if args and args ~= '' then&#13;&#10;        local func = loadstring(&quot;return(&quot; .. args .. &quot;)&quot;)&#13;&#10;        local newidx = #watches + 1&#13;&#10;        watches[newidx] = {func = func, exp = args}&#13;&#10;        ctrlrDebugger:write(&quot;Set watch exp no. &quot; .. newidx..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delw&quot; then&#13;&#10;      --{{{  delete watch expression&#13;&#10;&#13;&#10;      local index = tonumber(args)&#13;&#10;      if index then&#13;&#10;        watches[index] = nil&#13;&#10;        ctrlrDebugger:write(&quot;Watch expression deleted\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallw&quot; then&#13;&#10;      --{{{  delete all watch expressions&#13;&#10;      watches = {}&#13;&#10;      ctrlrDebugger:write('All watch expressions deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listw&quot; then&#13;&#10;      --{{{  list watch expressions&#13;&#10;      for i, v in pairs(watches) do&#13;&#10;        ctrlrDebugger:write(&quot;Watch exp. &quot; .. i .. &quot;: &quot; .. v.exp..'\n')&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;run&quot; then&#13;&#10;      --{{{  run until breakpoint&#13;&#10;      step_into = false&#13;&#10;      step_over = false&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;step&quot; then&#13;&#10;      --{{{  step N lines (into functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_over  = false&#13;&#10;      step_into  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;over&quot; then&#13;&#10;      --{{{  step N lines (over functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      step_level[current_thread] = stack_level[current_thread]&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;out&quot; then&#13;&#10;      --{{{  step N lines (out of functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = 1&#13;&#10;      step_level[current_thread] = stack_level[current_thread] - tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;gotoo&quot; then&#13;&#10;      --{{{  step until reach line&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if line ~= '' then&#13;&#10;        step_over  = false&#13;&#10;        step_into  = false&#13;&#10;        if has_breakpoint(filename,line) then&#13;&#10;          return 'cont'&#13;&#10;        else&#13;&#10;          set_breakpoint(filename,line,true)&#13;&#10;          return 'cont'&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;set&quot; then&#13;&#10;      --{{{  set/show context level&#13;&#10;      local level = args&#13;&#10;      if level and level == '' then level = nil end&#13;&#10;      if level then return level end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;vars&quot; then&#13;&#10;      --{{{  list context variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env, depth+1, 'variables')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;glob&quot; then&#13;&#10;      --{{{  list global variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__GLOBALS__,depth+1,'globals')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;fenv&quot; then&#13;&#10;      --{{{  list function environment variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__ENVIRONMENT__,depth+1,'environment')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;ups&quot; then&#13;&#10;      --{{{  list upvalue names&#13;&#10;      dumpvar(eval_env.__UPVALUES__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;locs&quot; then&#13;&#10;      --{{{  list locals names&#13;&#10;      dumpvar(eval_env.__LOCALS__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;what&quot; then&#13;&#10;      --{{{  show where a function is defined&#13;&#10;      if args and args ~= '' then&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(args,&quot;[%w_]+&quot;) do&#13;&#10;          v = v[w]&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        if type(v) == 'function' then&#13;&#10;          local def = debug.getinfo(v,'S')&#13;&#10;          if def then&#13;&#10;            ctrlrDebugger:write(def.what..' in '..def.short_src..' '..def.linedefined..'..'..def.lastlinedefined..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('Cannot get info for '..v..'\n')&#13;&#10;          end&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(v..' is not a function\n')&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;dump&quot; then&#13;&#10;      --{{{  dump a variable&#13;&#10;      local name, depth = getargs('VN')&#13;&#10;      if name ~= '' then&#13;&#10;        if depth == '' or depth == 0 then depth = nil end&#13;&#10;        depth = tonumber(depth or 1)&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(name,&quot;[&#94;%.]+&quot;) do     --get everything between dots&#13;&#10;          if tonumber(w) then&#13;&#10;            v = v[tonumber(w)]&#13;&#10;          else&#13;&#10;            v = v[w]&#13;&#10;          end&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        dumpvar(v,depth+1,n)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;show&quot; then&#13;&#10;      --{{{  show file around a line or the current breakpoint&#13;&#10;&#13;&#10;      local line, file, before, after = getargs('LFNN')&#13;&#10;      if before == 0 then before = 10     end&#13;&#10;      if after  == 0 then after  = before end&#13;&#10;&#13;&#10;      if file ~= '' and file ~= &quot;=stdin&quot; then&#13;&#10;        show(file,line,before,after)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Nothing to show\n')&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;poff&quot; then&#13;&#10;      --{{{  turn pause command off&#13;&#10;      pause_off = true&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pon&quot; then&#13;&#10;      --{{{  turn pause command on&#13;&#10;      pause_off = false&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;tron&quot; then&#13;&#10;      --{{{  turn tracing on/off&#13;&#10;      local option = getargs('S')&#13;&#10;      trace_calls   = false&#13;&#10;      trace_returns = false&#13;&#10;      trace_lines   = false&#13;&#10;      if string.find(option,'c') then trace_calls   = true end&#13;&#10;      if string.find(option,'r') then trace_returns = true end&#13;&#10;      if string.find(option,'l') then trace_lines   = true end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;trace&quot; then&#13;&#10;      --{{{  dump a stack trace&#13;&#10;      trace(eval_env.__VARSLEVEL__)&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;info&quot; then&#13;&#10;      --{{{  dump all debug info captured&#13;&#10;      info()&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pause&quot; then&#13;&#10;      --{{{  not allowed in here&#13;&#10;      ctrlrDebugger:write('pause() should only be used in the script you are debugging\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;help&quot; then&#13;&#10;      --{{{  help&#13;&#10;      local command = getargs('S')&#13;&#10;      if command ~= '' and hints[command] then&#13;&#10;        ctrlrDebugger:write(hints[command]..'\n')&#13;&#10;      else&#13;&#10;        for _,v in pairs(hints) do&#13;&#10;          local _,_,h = string.find(v,&quot;(.+)|&quot;)&#13;&#10;          ctrlrDebugger:write(h..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;exit&quot; then&#13;&#10;      --{{{  exit debugger&#13;&#10;      return 'stop'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif line ~= '' then&#13;&#10;      --{{{  just execute whatever it is in the current context&#13;&#10;&#13;&#10;      --map line starting with &quot;=...&quot; to &quot;return ...&quot;&#13;&#10;      if string.sub(line,1,1) == '=' then line = string.gsub(line,'=','return ',1) end&#13;&#10;&#13;&#10;      local ok, func = pcall(loadstring,line)&#13;&#10;      if func == nil then                             --Michael.Bringmann@lsi.com&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..line..'\n')&#13;&#10;      elseif not ok then&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..func..'\n')&#13;&#10;      else&#13;&#10;        setfenv(func, eval_env)&#13;&#10;        local res = {pcall(func)}&#13;&#10;        if res[1] then&#13;&#10;          if res[2] then&#13;&#10;            table.remove(res,1)&#13;&#10;            for _,v in ipairs(res) do&#13;&#10;              ctrlrDebugger:write(tostring(v))&#13;&#10;              ctrlrDebugger:write('\t')&#13;&#10;            end&#13;&#10;            ctrlrDebugger:write('\n')&#13;&#10;          end&#13;&#10;          --update in the context&#13;&#10;          return 0&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(&quot;Run error: &quot;..res[2]..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function debug_hook(event, line, level, thread)&#13;&#10;&#13;&#10;local function debug_hook(event, line, level, thread)&#13;&#10;  if not started then debug.sethook(); coro_debugger = nil; return end&#13;&#10;  current_thread = thread or 'main'&#13;&#10;  local level = level or 2&#13;&#10;  trace_event(event,line,level)&#13;&#10;  if event == &quot;call&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] + 1&#13;&#10;  elseif event == &quot;return&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] - 1&#13;&#10;    if stack_level[current_thread] &lt; 0 then stack_level[current_thread] = 0 end&#13;&#10;  else&#13;&#10;    local vars,file,line = capture_vars(level,1,line)&#13;&#10;    local stop, ev, idx = false, events.STEP, 0&#13;&#10;    while true do&#13;&#10;      for index, value in pairs(watches) do&#13;&#10;        setfenv(value.func, vars)&#13;&#10;        local status, res = pcall(value.func)&#13;&#10;        if status and res then&#13;&#10;          ev, idx = events.WATCH, index&#13;&#10;          stop = true&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if stop then break end&#13;&#10;      if (step_into)&#13;&#10;      or (step_over and (stack_level[current_thread] &lt;= step_level[current_thread] or stack_level[current_thread] == 0)) then&#13;&#10;        step_lines = step_lines - 1&#13;&#10;        if step_lines &lt; 1 then&#13;&#10;          ev, idx = events.STEP, 0&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if has_breakpoint(file, line) then&#13;&#10;        ev, idx = events.BREAK, 0&#13;&#10;        break&#13;&#10;      end&#13;&#10;      return&#13;&#10;    end&#13;&#10;    if not coro_debugger then&#13;&#10;      ctrlrDebugger:write(&quot;Lua Debugger\n&quot;)&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;      ctrlrDebugger:write(&quot;Type 'help' for commands\n&quot;)&#13;&#10;      coro_debugger = true&#13;&#10;    else&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;    end&#13;&#10;    tracestack(level)&#13;&#10;    local last_next = 1&#13;&#10;    local next = 'ask'&#13;&#10;    local silent = false&#13;&#10;    while true do&#13;&#10;      if next == 'ask' then&#13;&#10;        next = debugger_loop(ev, vars, file, line, idx)&#13;&#10;      elseif next == 'cont' then&#13;&#10;        return&#13;&#10;      elseif next == 'stop' then&#13;&#10;        started = false&#13;&#10;        debug.sethook()&#13;&#10;        coro_debugger = nil&#13;&#10;        return&#13;&#10;      elseif tonumber(next) then --get vars for given level or last level&#13;&#10;        next = tonumber(next)&#13;&#10;        if next == 0 then silent = true; next = last_next else silent = false end&#13;&#10;        last_next = next&#13;&#10;        restore_vars(level,vars)&#13;&#10;        vars, file, line = capture_vars(level,next)&#13;&#10;        if not silent then&#13;&#10;          if vars and vars.__VARSLEVEL__ then&#13;&#10;            ctrlrDebugger:write('Level: '..vars.__VARSLEVEL__..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('No level set\n')&#13;&#10;          end&#13;&#10;        end&#13;&#10;        ev = events.SET&#13;&#10;        next = 'ask'&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Unknown command from debugger_loop: '..tostring(next)..'\n')&#13;&#10;        ctrlrDebugger:write('Stopping debugger\n')&#13;&#10;        next = 'stop'&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  coroutine.create&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.create = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cocreate(function(...)&#13;&#10;                        stack_level[thread] = 0&#13;&#10;                        trace_level[thread] = 0&#13;&#10;                        step_level [thread] = 0&#13;&#10;                        debug.sethook(thread_hook,mask,count)&#13;&#10;                        return f(...)&#13;&#10;                      end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cocreate(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  coroutine.wrap&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.wrap = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cowrap(function(...)&#13;&#10;                      stack_level[thread] = 0&#13;&#10;                      trace_level[thread] = 0&#13;&#10;                      step_level [thread] = 0&#13;&#10;                      debug.sethook(thread_hook,mask,count)&#13;&#10;                      return f(...)&#13;&#10;                    end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cowrap(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  function pause(x,l,f)&#13;&#10;&#13;&#10;--&#13;&#10;-- Starts/resumes a debug session&#13;&#10;--&#13;&#10;&#13;&#10;function pause(x,l,f)&#13;&#10;  if not f and pause_off then return end       --being told to ignore pauses&#13;&#10;  pausemsg = x or 'pause'&#13;&#10;  local lines&#13;&#10;  local src = getinfo(2,'short_src')&#13;&#10;  if l then&#13;&#10;    lines = l   --being told when to stop&#13;&#10;  elseif src == &quot;stdin&quot; then&#13;&#10;    lines = 1   --if in a console session, stop now&#13;&#10;  else&#13;&#10;    lines = 2   --if in a script, stop when get out of pause()&#13;&#10;  end&#13;&#10;  if started then&#13;&#10;    --we'll stop now 'cos the existing debug hook will grab us&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --reset it in case some external agent fiddled with it&#13;&#10;  else&#13;&#10;    --set to stop when get out of pause()&#13;&#10;    trace_level[current_thread] = 0&#13;&#10;    step_level [current_thread] = 0&#13;&#10;    stack_level[current_thread] = 1&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    started    = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --NB: this will cause an immediate entry to the debugger_loop&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function dump(v,depth)&#13;&#10;&#13;&#10;--shows the value of the given variable, only really useful&#13;&#10;--when the variable is a table&#13;&#10;--see dump debug command hints for full semantics&#13;&#10;&#13;&#10;function dump(v,depth)&#13;&#10;  dumpvar(v,(depth or 1)+1,tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function debug.traceback(x)&#13;&#10;&#13;&#10;local _traceback = debug.traceback       --note original function&#13;&#10;&#13;&#10;--override standard function&#13;&#10;debug.traceback = function(x)&#13;&#10;  local assertmsg = _traceback(x)        --do original function&#13;&#10;  pause(x)                               --let user have a look at stuff&#13;&#10;  return assertmsg                       --carry on&#13;&#10;end&#13;&#10;&#13;&#10;_TRACEBACK = debug.traceback             --Lua 5.0 function&#13;&#10;&#13;&#10;--}}}"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000005"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="inspect" luaMethodCode="function getInspect()&#13;&#10;local inspect ={&#13;&#10;  _VERSION = 'inspect.lua 3.0.0',&#13;&#10;  _URL     = 'http://github.com/kikito/inspect.lua',&#13;&#10;  _DESCRIPTION = 'human-readable representations of tables',&#13;&#10;  _LICENSE = [[&#13;&#10;    MIT LICENSE&#13;&#10;&#13;&#10;    Copyright (c) 2013 Enrique Garc&#237;a Cota&#13;&#10;&#13;&#10;    Permission is hereby granted, free of charge, to any person obtaining a&#13;&#10;    copy of this software and associated documentation files (the&#13;&#10;    &quot;Software&quot;), to deal in the Software without restriction, including&#13;&#10;    without limitation the rights to use, copy, modify, merge, publish,&#13;&#10;    distribute, sublicense, and/or sell copies of the Software, and to&#13;&#10;    permit persons to whom the Software is furnished to do so, subject to&#13;&#10;    the following conditions:&#13;&#10;&#13;&#10;    The above copyright notice and this permission notice shall be included&#13;&#10;    in all copies or substantial portions of the Software.&#13;&#10;&#13;&#10;    THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS&#13;&#10;    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF&#13;&#10;    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.&#13;&#10;    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY&#13;&#10;    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,&#13;&#10;    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE&#13;&#10;    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&#13;&#10;  ]]&#13;&#10;}&#13;&#10;&#13;&#10;inspect.KEY       = setmetatable({}, {__tostring = function() return 'inspect.KEY' end})&#13;&#10;inspect.METATABLE = setmetatable({}, {__tostring = function() return 'inspect.METATABLE' end})&#13;&#10;&#13;&#10;-- Apostrophizes the string if it has quotes, but not aphostrophes&#13;&#10;-- Otherwise, it returns a regular quoted string&#13;&#10;local function smartQuote(str)&#13;&#10;  if str:match('&quot;') and not str:match(&quot;'&quot;) then&#13;&#10;    return &quot;'&quot; .. str .. &quot;'&quot;&#13;&#10;  end&#13;&#10;  return '&quot;' .. str:gsub('&quot;', '\\&quot;') .. '&quot;'&#13;&#10;end&#13;&#10;&#13;&#10;local controlCharsTranslation = {&#13;&#10;  [&quot;\a&quot;] = &quot;\\a&quot;,  [&quot;\b&quot;] = &quot;\\b&quot;, [&quot;\f&quot;] = &quot;\\f&quot;,  [&quot;\n&quot;] = &quot;\\n&quot;,&#13;&#10;  [&quot;\r&quot;] = &quot;\\r&quot;,  [&quot;\t&quot;] = &quot;\\t&quot;, [&quot;\v&quot;] = &quot;\\v&quot;&#13;&#10;}&#13;&#10;&#13;&#10;local function escape(str)&#13;&#10;  local result = str:gsub(&quot;\\&quot;, &quot;\\\\&quot;):gsub(&quot;(%c)&quot;, controlCharsTranslation)&#13;&#10;  return result&#13;&#10;end&#13;&#10;&#13;&#10;local function isIdentifier(str)&#13;&#10;  return type(str) == 'string' and str:match( &quot;&#94;[_%a][_%a%d]*$&quot; )&#13;&#10;end&#13;&#10;&#13;&#10;local function isSequenceKey(k, length)&#13;&#10;  return type(k) == 'number'&#13;&#10;     and 1 &lt;= k&#13;&#10;     and k &lt;= length&#13;&#10;     and math.floor(k) == k&#13;&#10;end&#13;&#10;&#13;&#10;local defaultTypeOrders = {&#13;&#10;  ['number']   = 1, ['boolean']  = 2, ['string'] = 3, ['table'] = 4,&#13;&#10;  ['function'] = 5, ['userdata'] = 6, ['thread'] = 7&#13;&#10;}&#13;&#10;&#13;&#10;local function sortKeys(a, b)&#13;&#10;  local ta, tb = type(a), type(b)&#13;&#10;&#13;&#10;  -- strings and numbers are sorted numerically/alphabetically&#13;&#10;  if ta == tb and (ta == 'string' or ta == 'number') then return a &lt; b end&#13;&#10;&#13;&#10;  local dta, dtb = defaultTypeOrders[ta], defaultTypeOrders[tb]&#13;&#10;  -- Two default types are compared according to the defaultTypeOrders table&#13;&#10;  if dta and dtb then return defaultTypeOrders[ta] &lt; defaultTypeOrders[tb]&#13;&#10;  elseif dta     then return true  -- default types before custom ones&#13;&#10;  elseif dtb     then return false -- custom types after default ones&#13;&#10;  end&#13;&#10;&#13;&#10;  -- custom types are sorted out alphabetically&#13;&#10;  return ta &lt; tb&#13;&#10;end&#13;&#10;&#13;&#10;local function getNonSequentialKeys(t)&#13;&#10;  local keys, length = {}, #t&#13;&#10;  for k,_ in pairs(t) do&#13;&#10;    if not isSequenceKey(k, length) then table.insert(keys, k) end&#13;&#10;  end&#13;&#10;  table.sort(keys, sortKeys)&#13;&#10;  return keys&#13;&#10;end&#13;&#10;&#13;&#10;local function getToStringResultSafely(t, mt)&#13;&#10;  local __tostring = type(mt) == 'table' and rawget(mt, '__tostring')&#13;&#10;  local str, ok&#13;&#10;  if type(__tostring) == 'function' then&#13;&#10;    ok, str = pcall(__tostring, t)&#13;&#10;    str = ok and str or 'error: ' .. tostring(str)&#13;&#10;  end&#13;&#10;  if type(str) == 'string' and #str &gt; 0 then return str end&#13;&#10;end&#13;&#10;&#13;&#10;local maxIdsMetaTable = {&#13;&#10;  __index = function(self, typeName)&#13;&#10;    rawset(self, typeName, 0)&#13;&#10;    return 0&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local idsMetaTable = {&#13;&#10;  __index = function (self, typeName)&#13;&#10;    local col = setmetatable({}, {__mode = &quot;kv&quot;})&#13;&#10;    rawset(self, typeName, col)&#13;&#10;    return col&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local function countTableAppearances(t, tableAppearances)&#13;&#10;  tableAppearances = tableAppearances or setmetatable({}, {__mode = &quot;k&quot;})&#13;&#10;&#13;&#10;  if type(t) == 'table' then&#13;&#10;    if not tableAppearances[t] then&#13;&#10;      tableAppearances[t] = 1&#13;&#10;      for k,v in pairs(t) do&#13;&#10;        countTableAppearances(k, tableAppearances)&#13;&#10;        countTableAppearances(v, tableAppearances)&#13;&#10;      end&#13;&#10;      countTableAppearances(getmetatable(t), tableAppearances)&#13;&#10;    else&#13;&#10;      tableAppearances[t] = tableAppearances[t] + 1&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  return tableAppearances&#13;&#10;end&#13;&#10;&#13;&#10;local copySequence = function(s)&#13;&#10;  local copy, len = {}, #s&#13;&#10;  for i=1, len do copy[i] = s[i] end&#13;&#10;  return copy, len&#13;&#10;end&#13;&#10;&#13;&#10;local function makePath(path, ...)&#13;&#10;  local keys = {...}&#13;&#10;  local newPath, len = copySequence(path)&#13;&#10;  for i=1, #keys do&#13;&#10;    newPath[len + i] = keys[i]&#13;&#10;  end&#13;&#10;  return newPath&#13;&#10;end&#13;&#10;&#13;&#10;local function processRecursive(process, item, path)&#13;&#10;  if item == nil then return nil end&#13;&#10;&#13;&#10;  local processed = process(item, path)&#13;&#10;  if type(processed) == 'table' then&#13;&#10;    local processedCopy = {}&#13;&#10;    local processedKey&#13;&#10;&#13;&#10;    for k,v in pairs(processed) do&#13;&#10;      processedKey = processRecursive(process, k, makePath(path, k, inspect.KEY))&#13;&#10;      if processedKey ~= nil then&#13;&#10;        processedCopy[processedKey] = processRecursive(process, v, makePath(path, processedKey))&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    local mt  = processRecursive(process, getmetatable(processed), makePath(path, inspect.METATABLE))&#13;&#10;    setmetatable(processedCopy, mt)&#13;&#10;    processed = processedCopy&#13;&#10;  end&#13;&#10;  return processed&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;local Inspector = {}&#13;&#10;local Inspector_mt = {__index = Inspector}&#13;&#10;&#13;&#10;function Inspector:puts(...)&#13;&#10;  local args   = {...}&#13;&#10;  local buffer = self.buffer&#13;&#10;  local len    = #buffer&#13;&#10;  for i=1, #args do&#13;&#10;    len = len + 1&#13;&#10;    buffer[len] = tostring(args[i])&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:down(f)&#13;&#10;  self.level = self.level + 1&#13;&#10;  f()&#13;&#10;  self.level = self.level - 1&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:tabify()&#13;&#10;  self:puts(self.newline, string.rep(self.indent, self.level))&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:alreadyVisited(v)&#13;&#10;  return self.ids[type(v)][v] ~= nil&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:getId(v)&#13;&#10;  local tv = type(v)&#13;&#10;  local id = self.ids[tv][v]&#13;&#10;  if not id then&#13;&#10;    id              = self.maxIds[tv] + 1&#13;&#10;    self.maxIds[tv] = id&#13;&#10;    self.ids[tv][v] = id&#13;&#10;  end&#13;&#10;  return id&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putKey(k)&#13;&#10;  if isIdentifier(k) then return self:puts(k) end&#13;&#10;  self:puts(&quot;[&quot;)&#13;&#10;  self:putValue(k)&#13;&#10;  self:puts(&quot;]&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putTable(t)&#13;&#10;  if t == inspect.KEY or t == inspect.METATABLE then&#13;&#10;    self:puts(tostring(t))&#13;&#10;  elseif self:alreadyVisited(t) then&#13;&#10;    self:puts('&lt;table ', self:getId(t), '&gt;')&#13;&#10;  elseif self.level &gt;= self.depth then&#13;&#10;    self:puts('{...}')&#13;&#10;  else&#13;&#10;    if self.tableAppearances[t] &gt; 1 then self:puts('&lt;', self:getId(t), '&gt;') end&#13;&#10;&#13;&#10;    local nonSequentialKeys = getNonSequentialKeys(t)&#13;&#10;    local length            = #t&#13;&#10;    local mt                = getmetatable(t)&#13;&#10;    local toStringResult    = getToStringResultSafely(t, mt)&#13;&#10;&#13;&#10;    self:puts('{')&#13;&#10;    self:down(function()&#13;&#10;      if toStringResult then&#13;&#10;        self:puts(' -- ', escape(toStringResult))&#13;&#10;        if length &gt;= 1 then self:tabify() end&#13;&#10;      end&#13;&#10;&#13;&#10;      local count = 0&#13;&#10;      for i=1, length do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:puts(' ')&#13;&#10;        self:putValue(t[i])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      for _,k in ipairs(nonSequentialKeys) do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:putKey(k)&#13;&#10;        self:puts(' = ')&#13;&#10;        self:putValue(t[k])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      if mt then&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:puts('&lt;metatable&gt; = ')&#13;&#10;        self:putValue(mt)&#13;&#10;      end&#13;&#10;    end)&#13;&#10;&#13;&#10;    if #nonSequentialKeys &gt; 0 or mt then -- result is multi-lined. Justify closing }&#13;&#10;      self:tabify()&#13;&#10;    elseif length &gt; 0 then -- array tables have one extra space before closing }&#13;&#10;      self:puts(' ')&#13;&#10;    end&#13;&#10;&#13;&#10;    self:puts('}')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putValue(v)&#13;&#10;  local tv = type(v)&#13;&#10;&#13;&#10;  if tv == 'string' then&#13;&#10;    self:puts(smartQuote(escape(v)))&#13;&#10;  elseif tv == 'number' or tv == 'boolean' or tv == 'nil' then&#13;&#10;    self:puts(tostring(v))&#13;&#10;  elseif tv == 'table' then&#13;&#10;    self:putTable(v)&#13;&#10;  else&#13;&#10;    self:puts('&lt;',tv,' ',self:getId(v),'&gt;')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;function inspect.inspect(root, options)&#13;&#10;  options       = options or {}&#13;&#10;&#13;&#10;  local depth   = options.depth   or math.huge&#13;&#10;  local newline = options.newline or '\n'&#13;&#10;  local indent  = options.indent  or '  '&#13;&#10;  local process = options.process&#13;&#10;&#13;&#10;  if process then&#13;&#10;    root = processRecursive(process, root, {})&#13;&#10;  end&#13;&#10;&#13;&#10;  local inspector = setmetatable({&#13;&#10;    depth            = depth,&#13;&#10;    buffer           = {},&#13;&#10;    level            = 0,&#13;&#10;    ids              = setmetatable({}, idsMetaTable),&#13;&#10;    maxIds           = setmetatable({}, maxIdsMetaTable),&#13;&#10;    newline          = newline,&#13;&#10;    indent           = indent,&#13;&#10;    tableAppearances = countTableAppearances(root)&#13;&#10;  }, Inspector_mt)&#13;&#10;&#13;&#10;  inspector:putValue(root)&#13;&#10;&#13;&#10;  return table.concat(inspector.buffer)&#13;&#10;end&#13;&#10;&#13;&#10;setmetatable(inspect, { __call = function(_, ...) return inspect.inspect(...) end })&#13;&#10;&#13;&#10;return inspect&#13;&#10;end&#13;&#10;&#13;&#10;inspect = getInspect()"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000006"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Testkram" uuid="d4f7efbf360b4c629807d16efc17453a">
        <luaMethod luaMethodName="dumptests" luaMethodCode="&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;dumptests = function()&#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;--panel:sendMidiMessageNow(CtrlrMidiMessage(&quot;F0 33 00 1E 01 F7&quot;))&#13;&#10;&#9;--os.execute(sleep(1000))&#13;&#10;&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="f961f6c9c8ee41cbbde2c59a6c8abc36"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Start" uuid="f24d8fd87c2440a6b3074d89073fc9b5">
        <luaMethod luaMethodName="onPanelLoad" luaMethodCode="function onPanelLoad()&#10;&#13;&#10;&#13;&#10;--timerId = 0&#13;&#10;&#13;&#10;&#13;&#10;-- unmutes the panel's MIDI Out&#13;&#10;&#13;&#10;--panel:setPropertyInt(&quot;panelMidiPauseOut&quot;, 0)&#13;&#10;&#13;&#10;-- setup a variable to tell if any data has been loaded into the parameter Table or not&#13;&#10;&#13;&#10;--parameter_table_loaded = 0&#13;&#10;&#13;&#10;-- Set Global MidiChannel Variable, MIDI O/P Ch set to 1 equates to zero when sending Hex&#13;&#10;&#13;&#10;--MidiChannel = panel:getProperty(&quot;panelMidiOutputChannelDevice&quot;)-1&#13;&#10;&#13;&#10;&#9; -- setup variables for some  Modulators&#13;&#10;&#13;&#10;&#13;&#10;Analyzer_01 = panel:getModulatorByName(&quot;Analyzer_01&quot;)&#13;&#10;Analyzer_02 = panel:getModulatorByName(&quot;Analyzer_02&quot;)&#13;&#10;Analyzer_03 = panel:getModulatorByName(&quot;Analyzer_03&quot;)&#13;&#10;Analyzer_04 = panel:getModulatorByName(&quot;Analyzer_04&quot;)&#13;&#10;Analyzer_05 = panel:getModulatorByName(&quot;Analyzer_05&quot;)&#13;&#10;Analyzer_06 = panel:getModulatorByName(&quot;Analyzer_06&quot;)&#13;&#10;Analyzer_07 = panel:getModulatorByName(&quot;Analyzer_07&quot;)&#13;&#10;Analyzer_08 = panel:getModulatorByName(&quot;Analyzer_08&quot;)&#13;&#10;Analyzer_09 = panel:getModulatorByName(&quot;Analyzer_09&quot;)&#13;&#10;Analyzer_10 = panel:getModulatorByName(&quot;Analyzer_10&quot;)&#13;&#10;Analyzer_11 = panel:getModulatorByName(&quot;Analyzer_11&quot;)&#13;&#10;Analyzer_12 = panel:getModulatorByName(&quot;Analyzer_12&quot;)&#13;&#10;Analyzer_13 = panel:getModulatorByName(&quot;Analyzer_13&quot;)&#13;&#10;Analyzer_14 = panel:getModulatorByName(&quot;Analyzer_14&quot;)&#13;&#10;Analyzer_15 = panel:getModulatorByName(&quot;Analyzer_15&quot;)&#13;&#10;Analyzer_16 = panel:getModulatorByName(&quot;Analyzer_16&quot;)&#13;&#10;Analyzer_17 = panel:getModulatorByName(&quot;Analyzer_17&quot;)&#13;&#10;Analyzer_18 = panel:getModulatorByName(&quot;Analyzer_18&quot;)&#13;&#10;Analyzer_19 = panel:getModulatorByName(&quot;Analyzer_19&quot;)&#13;&#10;Analyzer_20 = panel:getModulatorByName(&quot;Analyzer_20&quot;)&#13;&#10;Analyzer_21 = panel:getModulatorByName(&quot;Analyzer_21&quot;)&#13;&#10;Analyzer_22 = panel:getModulatorByName(&quot;Analyzer_22&quot;)&#13;&#10;Analyzer_23 = panel:getModulatorByName(&quot;Analyzer_23&quot;)&#13;&#10;Analyzer_24 = panel:getModulatorByName(&quot;Analyzer_24&quot;)&#13;&#10;Analyzer_25 = panel:getModulatorByName(&quot;Analyzer_25&quot;)&#13;&#10;Analyzer_26 = panel:getModulatorByName(&quot;Analyzer_26&quot;)&#13;&#10;Analyzer_27 = panel:getModulatorByName(&quot;Analyzer_27&quot;)&#13;&#10;Analyzer_28 = panel:getModulatorByName(&quot;Analyzer_28&quot;)&#13;&#10;Analyzer_Vol_01 = panel:getModulatorByName(&quot;Analyzer_Vol_01&quot;)&#13;&#10;Analyzer_Vol_02 = panel:getModulatorByName(&quot;Analyzer_Vol_02&quot;)&#13;&#10;Clipping = panel:getModulatorByName(&quot;Clipping&quot;)&#13;&#10;&#13;&#10;&#9;-- Fader&#13;&#10;&#13;&#10;--panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#13;&#10;Fad_01 = panel:getModulatorByName(&quot;Fad_01&quot;)&#13;&#10;Fad_02 = panel:getModulatorByName(&quot;Fad_02&quot;)&#13;&#10;Fad_03 = panel:getModulatorByName(&quot;Fad_03&quot;)&#13;&#10;Fad_04 = panel:getModulatorByName(&quot;Fad_04&quot;)&#13;&#10;Fad_05 = panel:getModulatorByName(&quot;Fad_05&quot;)&#13;&#10;Fad_06 = panel:getModulatorByName(&quot;Fad_06&quot;)&#13;&#10;Fad_07 = panel:getModulatorByName(&quot;Fad_07&quot;)&#13;&#10;Fad_08 = panel:getModulatorByName(&quot;Fad_08&quot;)&#13;&#10;Fad_09 = panel:getModulatorByName(&quot;Fad_09&quot;)&#13;&#10;Fad_10 = panel:getModulatorByName(&quot;Fad_10&quot;)&#13;&#10;Fad_11 = panel:getModulatorByName(&quot;Fad_11&quot;)&#13;&#10;Fad_12 = panel:getModulatorByName(&quot;Fad_12&quot;)&#13;&#10;Fad_13 = panel:getModulatorByName(&quot;Fad_13&quot;)&#13;&#10;Fad_14 = panel:getModulatorByName(&quot;Fad_14&quot;)&#13;&#10;Fad_15 = panel:getModulatorByName(&quot;Fad_15&quot;)&#13;&#10;Fad_16 = panel:getModulatorByName(&quot;Fad_16&quot;)&#13;&#10;Fad_17 = panel:getModulatorByName(&quot;Fad_17&quot;)&#13;&#10;Fad_18 = panel:getModulatorByName(&quot;Fad_18&quot;)&#13;&#10;Fad_19 = panel:getModulatorByName(&quot;Fad_19&quot;)&#13;&#10;Fad_20 = panel:getModulatorByName(&quot;Fad_20&quot;)&#13;&#10;Fad_21 = panel:getModulatorByName(&quot;Fad_21&quot;)&#13;&#10;Fad_22 = panel:getModulatorByName(&quot;Fad_22&quot;)&#13;&#10;Fad_23 = panel:getModulatorByName(&quot;Fad_23&quot;)&#13;&#10;Fad_24 = panel:getModulatorByName(&quot;Fad_24&quot;)&#13;&#10;Fad_25 = panel:getModulatorByName(&quot;Fad_25&quot;)&#13;&#10;Fad_26 = panel:getModulatorByName(&quot;Fad_26&quot;)&#13;&#10;Fad_27 = panel:getModulatorByName(&quot;Fad_27&quot;)&#13;&#10;Fad_28 = panel:getModulatorByName(&quot;Fad_28&quot;)&#13;&#10;--&#13;&#10;Fad_Level = panel:getModulatorByName(&quot;Fad_Level&quot;)&#13;&#10;Fad_InGain = panel:getModulatorByName(&quot;Fad_InGain&quot;)&#13;&#10;Eq_On_Off = panel:getModulatorByName(&quot;Eq_On_Off&quot;)&#13;&#10;&#13;&#10;&#13;&#10;SweepValue = panel:getModulatorByName(&quot;SweepValue&quot;)&#13;&#10;SweepFrq = panel:getModulatorByName(&quot;SweepFrq&quot;)&#13;&#10;os.execute(sleep(10))&#13;&#10;XY_X = panel:getModulatorByName(&quot;XY_X&quot;)&#13;&#10;XY_Y = panel:getModulatorByName(&quot;XY_Y&quot;)&#13;&#10;os.execute(sleep(10))&#13;&#10;XY_X16dB = panel:getModulatorByName(&quot;XY_X16dB&quot;)&#13;&#10;XY_Y16dB = panel:getModulatorByName(&quot;XY_Y16dB&quot;)&#13;&#10;Poll_Rate = panel:getModulatorByName(&quot;Poll_Rate&quot;)&#13;&#10;&#13;&#10;panel:setPropertyInt(&quot;panelMidiPauseOut&quot;,0)&#13;&#10;&#13;&#10;--panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#13;&#10;--os.execute(sleep(30))&#13;&#10;&#13;&#10;&#13;&#10;--os.execute(sleep(30))&#13;&#10;XY_X = panel:getModulatorByName(&quot;XY_X&quot;)&#13;&#10;XY_Y = panel:getModulatorByName(&quot;XY_Y&quot;)&#13;&#10;&#13;&#10;dB = panel:getModulatorByName(&quot;dB&quot;)&#13;&#10;press_release = panel:getModulatorByName(&quot;press_release&quot;)&#13;&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 1A 2A 01 F7&quot;)))&#13;&#10;os.execute(sleep(2))&#13;&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 1A 07 01 F7&quot;)))&#13;&#10;os.execute(sleep(2))&#13;&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 12 F7&quot;)))&#13;&#10;os.execute(sleep(2))&#13;&#10;&#9; --Versionsanfrage&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 15 F7&quot;)))&#13;&#10;&#13;&#10;os.execute(sleep(50))&#13;&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 19 F7&quot;)))&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="a9a54f884cbd481cb1f89d6374c74834"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="beforePanelLoads" luaMethodCode="--&#10;-- Called when the panel is created, no modulators will exist at this point&#10;-- consider this the panels constructor&#10;--&#10;beforePanelLoads = function()&#13;&#10;&#13;&#10;panel:setPropertyInt(&quot;panelMidiPauseOut&quot;,1)&#13;&#10;&#13;&#10;--SweepValue = panel:getModulatorByName(&quot;SweepValue&quot;)&#13;&#10;--SweepFrq = panel:getModulatorByName(&quot;SweepFrq&quot;)&#13;&#10;&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="luaPanelBeforeLoad" luaMethodSource="0"
                   uuid="f210d6ec63d542c6972d2a7fa5d0522a" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="AssignValues" uuid="0cca553178ba4b24bd90f4bd939d8822">
        <luaMethod luaMethodName="assignValuesAnalizer" luaMethodCode="function assignValuesAnalizer(midiMessage)&#13;&#10;&#9;&#13;&#10;Analyzer()&#13;&#10;&#13;&#10;--dump(Anal)&#13;&#10;--Set Paremeter for Analyzer&#13;&#10;&#9;&#13;&#10;&#9;Analyzer_01:setValueMapped(AnalizerSys:getByte(00)+Anal, false, true)&#13;&#10;&#9;Analyzer_02:setValueMapped(AnalizerSys:getByte(01)+Anal, false, true)&#13;&#10;&#9;Analyzer_03:setValueMapped(AnalizerSys:getByte(02)+Anal, false, true)&#13;&#10;&#9;Analyzer_04:setValueMapped(AnalizerSys:getByte(03)+Anal, false, true)&#13;&#10;&#9;Analyzer_05:setValueMapped(AnalizerSys:getByte(04)+Anal, false, true)&#13;&#10;&#9;Analyzer_06:setValueMapped(AnalizerSys:getByte(05)+Anal, false, true)&#13;&#10;&#9;Analyzer_07:setValueMapped(AnalizerSys:getByte(06)+Anal, false, true)&#13;&#10;&#9;Analyzer_08:setValueMapped(AnalizerSys:getByte(07)+Anal, false, true)&#13;&#10;&#9;Analyzer_09:setValueMapped(AnalizerSys:getByte(08)+Anal, false, true)&#13;&#10;&#9;Analyzer_10:setValueMapped(AnalizerSys:getByte(09)+Anal, false, true)&#13;&#10;&#9;Analyzer_11:setValueMapped(AnalizerSys:getByte(10)+Anal, false, true)&#13;&#10;&#9;Analyzer_12:setValueMapped(AnalizerSys:getByte(11)+Anal, false, true)&#13;&#10;&#9;Analyzer_13:setValueMapped(AnalizerSys:getByte(12)+Anal, false, true)&#13;&#10;&#9;Analyzer_14:setValueMapped(AnalizerSys:getByte(13)+Anal, false, true)&#13;&#10;&#9;Analyzer_15:setValueMapped(AnalizerSys:getByte(14)+Anal, false, true)&#13;&#10;&#9;Analyzer_16:setValueMapped(AnalizerSys:getByte(15)+Anal, false, true)&#13;&#10;&#9;Analyzer_17:setValueMapped(AnalizerSys:getByte(16)+Anal, false, true)&#13;&#10;&#9;Analyzer_18:setValueMapped(AnalizerSys:getByte(17)+Anal, false, true)&#13;&#10;&#9;Analyzer_19:setValueMapped(AnalizerSys:getByte(18)+Anal, false, true)&#13;&#10;&#9;Analyzer_20:setValueMapped(AnalizerSys:getByte(19)+Anal, false, true)&#13;&#10;&#9;Analyzer_21:setValueMapped(AnalizerSys:getByte(20)+Anal, false, true)&#13;&#10;&#9;Analyzer_22:setValueMapped(AnalizerSys:getByte(21)+Anal, false, true)&#13;&#10;&#9;Analyzer_23:setValueMapped(AnalizerSys:getByte(22)+Anal, false, true)&#13;&#10;&#9;Analyzer_24:setValueMapped(AnalizerSys:getByte(23)+Anal, false, true)&#13;&#10;&#9;Analyzer_25:setValueMapped(AnalizerSys:getByte(24)+Anal, false, true)&#13;&#10;&#9;Analyzer_26:setValueMapped(AnalizerSys:getByte(25)+Anal, false, true)&#13;&#10;&#9;Analyzer_27:setValueMapped(AnalizerSys:getByte(26)+Anal, false, true)&#13;&#10;&#9;Analyzer_28:setValueMapped(AnalizerSys:getByte(27)+Anal, false, true)&#13;&#10;&#9;Analyzer_Vol_01:setValueMapped(AnalizerSys:getByte(28), false, true)&#13;&#10;&#9;Analyzer_Vol_02:setValueMapped(AnalizerSys:getByte(28), false, true)&#13;&#10;&#9;Clipping:setValueMapped(AnalizerSys:getByte(30), false, true)&#13;&#10;&#13;&#10;&#9;--console (&quot;AnalizerSys: &quot;)&#13;&#10;&#9;--console (string.format(&quot;%02x&quot;, AnalizerSys:getByte(15)))&#9;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="8fa0a79d42a2418e884b67357599ce0b"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="assignValuesSys" luaMethodCode="function assignValuesSys(midiMessage)&#13;&#10;&#9;&#9;&#13;&#10;--&#9;console (&quot;RAW DATA: &quot;)&#13;&#10;--&#9;console (programData1:toHexString(1))&#13;&#10;&#13;&#10;&#9; --assign settings for system-parameters&#13;&#10;&#9;&#13;&#10;&#9;panel:getModulatorByName(&quot;Midi_Omni&quot;):setValueMapped(programDatasys:getByte(5), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;TC_Link&quot;):setValueMapped(programDatasys:getByte(06), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Remote&quot;):setValueMapped(programDatasys:getByte(07), false, true)&#9;&#13;&#10;&#9;panel:getModulatorByName(&quot;Key_1&quot;):setValueMapped(programDatasys:getByte(08), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Key_2&quot;):setValueMapped(programDatasys:getByte(09), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Key_3&quot;):setValueMapped(programDatasys:getByte(10), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Key_4&quot;):setValueMapped(programDatasys:getByte(11), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Learn_Trigger&quot;):setValueMapped(programDatasys:getByte(12), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;EQRange&quot;):setValueMapped(programDatasys:getByte(21), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Soft_Crossfade&quot;):setValueMapped(programDatasys:getByte(22), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;SA-Source&quot;):setValueMapped(programDatasys:getByte(23), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Peak-Average&quot;):setValueMapped(programDatasys:getByte(24), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Release&quot;):setValueMapped(programDatasys:getByte(25), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;LowCut&quot;):setValueMapped(programDatasys:getByte(26), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;HiCut&quot;):setValueMapped(programDatasys:getByte(27), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;PresetNumBox&quot;):setModulatorValue(programDatasys:getByte(28), false, false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;SA-Level&quot;):setValueMapped(programDatasys:getByte(29), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Autolevel&quot;):setValueMapped(programDatasys:getByte(30), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;BB-Slope&quot;):setValueMapped(programDatasys:getByte(32), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Dmp-Slowdwn&quot;):setValueMapped(programDatasys:getByte(39), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;StereoMaster&quot;):setValueMapped(programDatasys:getByte(41), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Keys-Rec&quot;):setValueMapped(programDatasys:getByte(42), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Keys-Snd&quot;):setValueMapped(programDatasys:getByte(43), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Search_Destroy&quot;):setValueMapped(programDatasys:getByte(44), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;SearchMaxBands&quot;):setValueMapped(programDatasys:getByte(45), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Destroy_Ratio&quot;):setValueMapped(programDatasys:getByte(46), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Dev-Omni&quot;):setValueMapped(programDatasys:getByte(48), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Rec_PlayCueList&quot;):setValueMapped(programDatasys:getByte(58), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;MakeAktualRSP&quot;):setValueMapped(programDatasys:getByte(65), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;ShowAktualRsp&quot;):setValueMapped(programDatasys:getByte(66), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;AlignSAResp&quot;):setValueMapped(programDatasys:getByte(67), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;Silent_Update&quot;):setValueMapped(programDatasys:getByte(77), false, true)&#13;&#10;&#9;panel:getModulatorByName(&quot;AutolinAppend&quot;):setValueMapped(programDatasys:getByte(88), false, true)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;--console (&quot;programDatasys: &quot;)&#13;&#10;&#9;--console (string.format(&quot;%02x&quot;, programDatasys:getByte(89)))&#9;&#10;--end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="c05e48c547f34905a9bc4d6ca77a007c"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="assignValuesFad" luaMethodCode="function assignValuesFad(midiMessage)&#10;&#13;&#10;&#9;&#13;&#10;--&#9;console (&quot;assignValuesFad&quot;)&#13;&#10;&#9;&#9;&#13;&#10;--&#9;console (&quot;RAW DATA: &quot;)&#13;&#10;--&#9;console (programDataVal:toHexString(1))&#13;&#10;&#9;&#13;&#10;&#9; -- EQ-fader-values are set:&#13;&#10;&#13;&#10;&#9;Fad_01:setValueMapped(programDataVal:getByte(0), true, true)&#13;&#10;&#9;Fad_02:setValueMapped(programDataVal:getByte(1), true, true)&#13;&#10;&#9;Fad_03:setValueMapped(programDataVal:getByte(2), true, true)&#13;&#10;&#9;Fad_04:setValueMapped(programDataVal:getByte(3), true, true)&#13;&#10;&#9;Fad_05:setValueMapped(programDataVal:getByte(4), true, true)&#13;&#10;&#9;Fad_06:setValueMapped(programDataVal:getByte(5), true, true)&#13;&#10;&#9;Fad_07:setValueMapped(programDataVal:getByte(6), true, true)&#13;&#10;&#9;Fad_08:setValueMapped(programDataVal:getByte(7), true, true)&#13;&#10;&#9;Fad_09:setValueMapped(programDataVal:getByte(8), true, true)&#13;&#10;&#9;Fad_10:setValueMapped(programDataVal:getByte(9), true, true)&#13;&#10;&#9;Fad_11:setValueMapped(programDataVal:getByte(10), true, true)&#13;&#10;&#9;Fad_12:setValueMapped(programDataVal:getByte(11), true, true)&#13;&#10;&#9;Fad_13:setValueMapped(programDataVal:getByte(12), true, true)&#13;&#10;&#9;Fad_14:setValueMapped(programDataVal:getByte(13), true, true)&#13;&#10;&#9;Fad_15:setValueMapped(programDataVal:getByte(14), true, true)&#13;&#10;&#9;Fad_16:setValueMapped(programDataVal:getByte(15), true, true)&#13;&#10;&#9;Fad_17:setValueMapped(programDataVal:getByte(16), true, true)&#13;&#10;&#9;Fad_18:setValueMapped(programDataVal:getByte(17), true, true)&#13;&#10;&#9;Fad_19:setValueMapped(programDataVal:getByte(18), true, true)&#13;&#10;&#9;Fad_20:setValueMapped(programDataVal:getByte(19), true, true)&#13;&#10;&#9;Fad_21:setValueMapped(programDataVal:getByte(20), true, true)&#13;&#10;&#9;Fad_22:setValueMapped(programDataVal:getByte(21), true, true)&#13;&#10;&#9;Fad_23:setValueMapped(programDataVal:getByte(22), true, true)&#13;&#10;&#9;Fad_24:setValueMapped(programDataVal:getByte(23), true, true)&#13;&#10;&#9;Fad_25:setValueMapped(programDataVal:getByte(24), true, true)&#13;&#10;&#9;Fad_26:setValueMapped(programDataVal:getByte(25), true, true)&#13;&#10;&#9;Fad_27:setValueMapped(programDataVal:getByte(26), true, true)&#13;&#10;&#9;Fad_28:setValueMapped(programDataVal:getByte(27), true, true)&#13;&#10;&#13;&#10;&#9;Fad_Level:setValueMapped(programDataVal:getByte(28), true, true) &#13;&#10;&#9;Fad_InGain:setValueMapped(programDataVal:getByte(30), true, true)&#13;&#10;&#9;Eq_On_Off:setValueMapped(programDataVal:getByte(31), true, true)&#13;&#10;&#13;&#10;&#9;--console (&quot;programDataVal: &quot;)&#13;&#10;&#9;--console (programDataVal:toHexString(1))&#13;&#10;&#9;--console (&quot;programDataVal: &quot;)&#13;&#10;&#9;--console (string.format(&quot;%02x&quot;, programDataVal:getByte(31)))&#13;&#10;&#13;&#10;end&#13;&#10;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="01dcbc3e1448457c9d422fe19e6af14d"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="assignValuesVersion" luaMethodCode="function assignValuesVersion(midiMessage)&#13;&#10;&#13;&#10;local i = VersionVal:getByte(3)&#9;--local Var i for 16 or 12dB Version&#13;&#10;--dump(i)&#13;&#10;&#13;&#10;--panel:getModulator(dB)&#13;&#10;&#9;&#13;&#10;&#9; -- dont know exactly how the Version dB is defined, so i took the bts that differ in the version code--&#13;&#10;&#9; -- had 3 types of TC1128, one 16dB X (33), one 12dB X (65), and one 12dB with display and VGA-option (01)&#13;&#10;&#13;&#10;&#9;if i == 1 or 65 then&#13;&#10;&#9;--panel:getModulatorByName(&quot;dB&quot;):setValueMapped(0, false, true)&#9;--Switch for Version dB is set to something&#13;&#10;&#9;&#9;dB:setValueMapped(0, false, true)&#9;--Switch for Version dB is set to something&#13;&#10;&#9;if i == 33 then&#13;&#10;&#9;--panel:getModulatorByName(&quot;dB&quot;):setValueMapped(1, false, true)&#9;--&#9;&#9;&#9;&#9;&quot;&quot;&#13;&#10;&#9;&#9;dB:setValueMapped(1, false, true)&#9;--Switch for Version dB is set to something&#13;&#10;&#9;else end&#13;&#10;&#13;&#10;&#9;--os.execute(sleep(50))&#13;&#10;&#13;&#10;&#9;-- local var k is set from switch dB&#13;&#10;&#13;&#10;--local k = panel:getModulatorByName(&quot;dB&quot;):getValueMapped()&#13;&#10;&#13;&#10;local k = dB:getValueMapped()&#13;&#10;&#13;&#10;&#9;if k == 0 then&#9;&#13;&#10;&#9;UiFixedSliderContens16dB()&#9;-- resources and fixed slider-contens for EQ and Analyzer are set after a reset of those&#13;&#10;&#13;&#10;&#9;elseif k == 1 then&#13;&#10;&#9;UiFixedSliderContens16dB()&#9;--&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;&quot;&#13;&#10;&#13;&#10;&#9;else end&#13;&#10;&#13;&#10;--panel:getModulatorByName(&quot;setContent&quot;):setValueMapped(0, false, true)&#13;&#10;&#9;--console (&quot;VersionVal: &quot;)&#13;&#10;&#9;--console (VersionVal:toHexString(1))&#13;&#10;&#9;--console (&quot;VersionVal: &quot;)&#13;&#10;&#9;--console (string.format(&quot;%02x&quot;, VersionVal:getByte(4)))&#13;&#10;end&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="6d77935cfc974aa0b4689da812152e8f"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Sweeper" uuid="4055d9acf9514d07b2a12e36e10db2a9">
        <luaMethod luaMethodName="SweepFrqStetValZero" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;SweepFrqStetValZero = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;SweepValue = panel:getModulatorByName(&quot;SweepValue&quot;)&#13;&#10;SweepFrq = panel:getModulatorByName(&quot;SweepFrq&quot;)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;--panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;Ff0 33 00 11 1f f7&quot;)))&#9;&#13;&#10;&#13;&#10;&#9;local d = SweepFrq:getValueMapped()&#13;&#10;&#13;&#10;&#9;--console (&quot;i: &quot;)&#13;&#10;&#9;--console (string.format(&quot;%02x&quot;, i))&#13;&#10;&#13;&#10;&#9;--os.execute(sleep(20))&#13;&#10;&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 3F %02x F7&quot;, d)))&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#9;SweepValue:setModulatorValue(25, false, false, false)&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="c79f52e485dd4b33b8f76cd95ebb2cae" luaMethodValid="1"/>
        <luaMethod luaMethodName="Sweep_Enc_MsDwn" luaMethodCode="--&#10;-- Called when a mouse DOWN (any mouse button) event happens on a component&#10;-- @comp&#10;-- @event   http://www.rawmaterialsoftware.com/juce/api/classMouseEvent.html&#10;--&#10;&#10;Sweep_Enc_MsDwn = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;local n = L(comp:getOwner():getName())&#13;&#10;&#9;if dontrepeat == n then&#10;        return&#10;    end&#10;    panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 10 F7&quot;)))&#13;&#10;&#9;os.execute(sleep(50))&#13;&#10;&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#10;    dontrepeat = n&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                   uuid="ea3f8ef553f246e7a8e2a4b5bd2c2b8e" luaMethodValid="1"/>
        <luaMethod luaMethodName="Sweep_Enc_MsUP1" luaMethodCode="--&#10;-- Called when a mouse UP (any mouse button) event happens on a component&#10;--&#10;&#10;Sweep_Enc_MsUP1 = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;local n = L(comp:getOwner():getName())&#13;&#10;--console (&quot;n: &quot;)&#13;&#10;--console (string.format(i))&#13;&#10;if dontrepeat == n then&#10;        return&#10;    end&#13;&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 1f F7&quot;)))&#13;&#10;    dontrepeat = n&#10;end&#10;"
                   luaMethodLinkedProperty="uiCustomMouseUpCallback" luaMethodSource="0"
                   uuid="73222b2a4fc8432badc503b1791c4631" luaMethodValid="1"/>
        <luaMethod luaMethodName="sendSweepValue" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;sendSweepValue = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;if source == 4 then&#13;&#10;&#13;&#10;&#9;&#9;SweepValue = panel:getModulatorByName(&quot;SweepValue&quot;)&#13;&#10;&#13;&#10;&#9;&#9;--panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 10 F7&quot;)))&#13;&#10;&#13;&#10; &#9;&#9;local c = SweepValue:getValueMapped()&#13;&#10;&#13;&#10;&#9;&#9;--console (&quot;k: &quot;)&#13;&#10;&#9;&#9;--console (string.format(&quot;%02x&quot;, k))&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 3F %02x F7&quot;, c)))&#13;&#10;&#13;&#10;&#9;&#9;--os.execute(sleep(20))&#13;&#10;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="5635c952af494654b884a205d2ebcc6c" luaMethodValid="1"/>
        <luaMethod luaMethodName="Enc_enter_CB" luaMethodCode="--&#10;-- Called when the mouse cursors enters a component&#10;--&#10;PushEnter_pressed = 0&#10;Enc_enter_CB = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#9;if PushEnter_pressed == 0 then&#13;&#10;&#9;&#9;console(&quot;is 0, set 1&quot;)&#13;&#10;&#9;&#9;PushEnter_pressed = 1&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 10 F7&quot;)))&#13;&#10;&#13;&#10;&#9;end&#10;end&#13;&#10;&#13;&#10;--    &#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 10 F7&quot;)))&#13;&#10;&#13;&#10;&#9;&#9;&#13;&#10;--&#9;end&#13;&#10;--&#9;&#9;local z = 1&#13;&#10;--if source == 1 or 2 or 3 or 4 or 5 or 6 or 7 or 8 or 9  or 0 then&#13;&#10;--        return end &#13;&#10;&#9;--z = 0&#13;&#10;&#13;&#10;&#9;--panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;"
                   luaMethodLinkedProperty="uiCustomMouseEnterCallback" luaMethodSource="0"
                   uuid="df384fe5357246da8b8291b4a4fe2459" luaMethodValid="1"/>
        <luaMethod luaMethodName="Enc_exit_CB" luaMethodCode="--&#10;-- Called when the mouse cursors exits a component&#10;--&#10;&#10;Enc_exit_CB = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#9;if PushEnter_pressed == 1 then&#13;&#10;&#9;&#9;console(&quot;is 1, set 0.&quot;)&#13;&#10;&#9;&#9;PushEnter_pressed = 0&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 1f F7&quot;)))&#13;&#10;&#13;&#10;&#9;end&#10;end&#13;&#10;&#13;&#10;&#9;&#9;--console (&quot;k: &quot;)&#13;&#10;&#9;&#9;--console (string.format(k))&#13;&#10;&#9;&#9;--local k = L(comp:getOwner():getName())&#13;&#10;--&#9;what(panel:getComponent(&quot;modulator-6&quot;))&#13;&#10;--local PushEnter_pressed = 0"
                   luaMethodLinkedProperty="uiCustomMouseExitCallback" luaMethodSource="0"
                   uuid="d07c3f0c5bfe4defaccb0aef6df4e1d1" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="XY" uuid="05a6f33b03004cb2a9dfe43f32ab6cf8">
        <luaMethod luaMethodName="jonasMod8Change16dB" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;jonasMod8Change16dB = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9; --constructs a sysex message using the faders that serve the XY surface and sends it if a value changes&#13;&#10;&#13;&#10;&#9;local x = panel:getModulatorByName(&quot;XY_X16dB&quot;):getModulatorValue()&#13;&#10;&#9;-- x = 15&#13;&#10;&#9;local y = panel:getModulatorByName(&quot;XY_Y16dB&quot;):getModulatorValue()*4+14&#13;&#10;&#9;--dump(x)&#13;&#10;&#9;--dump(y)&#13;&#10;&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 B0 %02x %02x FF&quot;, x, y)))&#13;&#10;&#9;&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="87b4fadb3b154376878f67d4620733f0" luaMethodValid="1"/>
        <luaMethod luaMethodName="jonasMod8Change" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#13;&#10;&#10;jonasMod8Change = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9; --constructs a sysex message using the faders that serve the XY surface and sends it if a value changes&#13;&#10;&#13;&#10;&#9;local x = panel:getModulatorByName(&quot;XY_X&quot;):getModulatorValue()&#13;&#10;&#9;-- x = 15&#13;&#10;&#9;local y = panel:getModulatorByName(&quot;XY_Y&quot;):getModulatorValue()*4+14&#9;&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;--dump(y)&#13;&#10;&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 B0 %02x %02x FF&quot;, x, y)))&#13;&#10;&#9;&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="c2175fc72fe249a98bf11566cda2995f" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Version" uuid="7ae8fb91c7f64e348e1843c45e287877">
        <luaMethod luaMethodName="UiFixedSliderContens16dB" luaMethodCode="function UiFixedSliderContens16dB()&#13;&#10;&#10;&#13;&#10;Value_dB = panel:getModulatorByName(&quot;dB&quot;):getValueMapped()&#10;&#13;&#10;--console(string.format (&quot;Wert Isch : %d&quot;,Value_dB))&#13;&#10;--end&#13;&#10;-- setup variables for all Parameter Modulators&#13;&#10;&#13;&#10;&#9;-- Analyzer ImageResources reset&#13;&#10;&#13;&#10;Analyzer_01:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_02:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_03:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_04:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_05:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_06:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_07:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_08:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_09:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_10:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_11:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_12:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_13:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_14:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_15:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_16:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_17:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_18:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_19:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_20:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_21:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_22:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_23:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_24:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_25:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_26:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_27:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_28:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_Vol_01:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;Analyzer_Vol_02:getComponent():setProperty(&quot;uiImageSliderResource&quot;,&quot;&quot;, false)&#13;&#10;&#13;&#10;&#9;-- Fader Units reset&#13;&#10;&#13;&#10;Fad_01:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_02:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_03:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_04:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_05:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_06:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_07:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_08:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_09:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_10:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_11:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_12:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_13:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_14:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_15:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_16:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_17:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_18:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_19:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_20:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_21:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_22:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_23:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_24:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_25:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_26:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_27:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_28:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;&#13;&#10;Fad_Level:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;Fad_InGain:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;&quot;, false)&#13;&#10;&#13;&#10;&#9; -- Fader ImageResources reset&#13;&#10;&#13;&#10;Fad_01:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_02:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_03:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_04:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_05:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_06:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_07:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_08:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_09:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_10:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_11:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_12:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_13:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_14:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_15:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_16:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_17:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_18:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_19:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_20:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_21:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_22:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_23:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_24:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_25:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_26:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_27:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;Fad_28:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;&quot;, false)&#13;&#10;&#13;&#10;Fad_Level:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_InGain:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;panel:getModulatorByName(&quot;drawXY_Surface16dB&quot;):getComponent():setVisible(false)&#13;&#10;panel:getModulatorByName(&quot;drawXY_Surface&quot;):getComponent():setVisible(false)&#13;&#10;--console(string.format(&quot;%c&quot;, (y)))&#13;&#10;&#13;&#10;&#13;&#10;-- sets Properties for fixedSliders vor the 16dB Version of the TC1128 (x)&#13;&#10;&#9;-- Analyzer Units 16dB&#9;&#13;&#10;&#13;&#10;if Value_dB == 1 then&#13;&#10;&#13;&#10;Analyzer_01:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_02:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_03:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_04:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_05:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_06:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_07:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_08:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_09:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_10:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_11:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_12:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_13:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_14:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_15:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_16:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_17:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_18:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_19:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_20:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_21:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_22:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_23:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_24:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_25:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_26:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_27:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_28:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 &quot;, false)&#13;&#10;Analyzer_Vol_01:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 &quot;, false)&#13;&#10;Analyzer_Vol_02:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 &quot;, false)&#13;&#10;&#13;&#10;&#9;-- AnalyzerImageResources 16dB&#13;&#10;&#13;&#10;Analyzer_01:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_02:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_03:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_04:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_05:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_06:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_07:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_08:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_09:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_10:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_11:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_12:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_13:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_14:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_15:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_16:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_17:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_18:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_19:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_20:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_21:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_22:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_23:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_24:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_25:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_26:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_27:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_28:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph_136x09_42&quot;, false)&#13;&#10;Analyzer_Vol_01:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_33&quot;, false)&#13;&#10;Analyzer_Vol_02:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_33&quot;, false)&#13;&#10;&#13;&#10;&#9;-- Fader Units 16dB&#13;&#10;&#13;&#10;Fad_01:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_02:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_03:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_04:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_05:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_06:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_07:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_08:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_09:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_10:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_11:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_12:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_13:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_14:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_15:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_16:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_17:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_18:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_19:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_20:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_21:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_22:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_23:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_24:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_25:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_26:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_27:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_28:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;&#13;&#10;Fad_Level:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;Fad_InGain:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-16=9\n -15=10\n -14=11\n -13=12\n -12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37\n 13=38\n 14=39\n 15=40\n 16=41&quot;, false)&#13;&#10;&#13;&#10;&#13;&#10;&#9; -- Fader ImageResources 16dB&#13;&#10;&#13;&#10;Fad_01:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_02:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_03:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_04:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_05:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_06:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_07:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_08:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_09:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_10:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_11:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_12:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_13:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_14:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_15:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_16:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_17:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_18:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_19:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_20:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_21:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_22:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_23:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_24:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_25:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_26:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_27:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;Fad_28:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_33&quot;, false)&#13;&#10;&#13;&#10;XY_TabChange()&#13;&#10;&#13;&#10;panel:getModulatorByName(&quot;drawXY_Surface16dB&quot;):getComponent():setVisible(true)&#13;&#10;&#13;&#10;&#13;&#10;-- sets Properties for fixedSliders vor the 12dB Version of the TC1128 (x)&#13;&#10;&#9;-- Analyzer Units 12dB&#13;&#10;&#13;&#10;elseif Value_dB == 0 then&#13;&#10;&#13;&#10;Analyzer_01:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_02:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_03:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_04:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_05:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_06:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_07:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_08:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_09:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_10:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_11:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_12:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_13:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_14:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_15:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_16:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_17:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_18:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_19:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_20:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_21:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_22:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_23:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_24:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_25:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_26:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_27:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_28:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 \n33 \n34 \n35 \n36 \n37 \n38 \n39 \n40 \n41 \n42 \n43 \n44 \n45 \n46 \n47 \n48 \n49 \n50 &quot;, false)&#13;&#10;Analyzer_Vol_01:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 &quot;, false)&#13;&#10;Analyzer_Vol_02:getComponent():setProperty(&quot;uiFixedSliderContent&quot;, &quot;0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11 \n12 \n13 \n14 \n15 \n16 \n17 \n18 \n19 \n20 \n21 \n22 \n23 \n24 \n25 \n26 \n27 \n28 \n29 \n30 \n31 \n32 &quot;, false)&#13;&#10;&#9;-- -- Analyzer ImageResources 12dB&#13;&#10;&#13;&#10;Analyzer_01:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_02:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_03:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_04:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_05:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_06:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_07:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_08:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_09:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_10:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_11:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_12:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_13:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_14:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_15:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_16:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_17:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_18:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_19:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_20:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_21:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_22:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_23:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_24:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_25:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_26:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_27:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_28:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_51&quot;, false)&#13;&#10;Analyzer_Vol_01:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_33&quot;, false)&#13;&#10;Analyzer_Vol_02:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;Bargraph136x09_33&quot;, false)&#13;&#10;&#13;&#10;&#9;-- Fader Units 12dB&#13;&#10;&#13;&#10;Fad_01:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_02:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_03:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_04:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_05:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_06:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_07:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_08:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_09:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_10:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_11:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_12:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_13:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_14:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_15:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_16:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_17:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_18:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_19:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_20:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_21:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_22:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_23:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_24:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_25:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_26:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_27:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;Fad_28:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n -11=14\n -10=15\n -9=16\n -8=17\n -7=18\n -6=19\n -5=20\n -4=21\n -3=22\n -2=23\n -1=24\n 0=25\n 1=26\n 2=27\n 3=28\n 4=29\n 5=30\n 6=31\n 7=32\n 8=33\n 9=34\n 10=35\n 11=36\n 12=37&quot;, false)&#13;&#10;&#13;&#10;Fad_Level:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n-11=14\n-10=15\n-9=16\n-8=17\n-7=18\n-6=19\n-5=20\n-4=21\n-3=22\n-2=23\n-1=24\n0=25\n1=26\n2=27\n3=28\n4=29\n5=30\n6=31\n7=32\n8=33\n9=34\n10=35\n11=36\n12=37&quot;, false)&#13;&#10;Fad_InGain:getComponent():setProperty(&quot;uiFixedSliderContent&quot;,&quot;-12=13\n-11=14\n-10=15\n-9=16\n-8=17\n-7=18\n-6=19\n-5=20\n-4=21\n-3=22\n-2=23\n-1=24\n0=25\n1=26\n2=27\n3=28\n4=29\n5=30\n6=31\n7=32\n8=33\n9=34\n10=35\n11=36\n12=37&quot;, false)&#13;&#10;&#13;&#10;&#9; -- Fader ImageResources 12dB&#13;&#10;&#13;&#10;Fad_01:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_02:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_03:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_04:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_05:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_06:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_07:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_08:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_09:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_10:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_11:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_12:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_13:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_14:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_15:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_16:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_17:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_18:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_19:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_20:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_21:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_22:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_23:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_24:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_25:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_26:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_27:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;Fad_28:getComponent():setProperty(&quot;uiImageSliderResource&quot;, &quot;FaderVert_2_128_24_25&quot;, false)&#13;&#10;&#13;&#10;XY_TabChange()&#13;&#10;&#13;&#10;panel:getModulatorByName(&quot;drawXY_Surface&quot;):getComponent():setVisible(true)&#13;&#10;&#13;&#10;-- if there is data in the parameter table then reload it, this forces the modulator to retake it's original value&#13;&#10;-- as it gets reset to zero when the FixedSliderContents are re-written&#13;&#10;&#13;&#10;--if parameter_table_loaded == 1 then&#13;&#10;&#13;&#10;-- Reset P Delay to it's original value at the start of this script&#13;&#10;--parameter_5:setValue(param5, true, true)&#13;&#10;end&#13;&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(&quot;F0 33 00 17 F7&quot;))&#9; -- ask for values of the EQ-faders&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="974b9794cbfa4bbfbfd735509e50bc56"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="XY_TabChange" luaMethodCode="function XY_TabChange()&#10;&#13;&#10;local i = dB:getValueMapped()&#13;&#10;&#13;&#10;&#9;if i == 0 then&#9;-- 12dB&#13;&#10;&#13;&#10;&#9;panel:getModulatorByName(&quot;XY_Tabs&quot;):getComponent():setProperty (&quot;uiTabsCurrentTab&quot;, 0, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if i == 1 then&#9;-- 16dB&#13;&#10;&#13;&#10;&#9;panel:getModulatorByName(&quot;XY_Tabs&quot;):getComponent():setProperty (&quot;uiTabsCurrentTab&quot;, 1, false) &#13;&#10;&#9;&#13;&#10;&#9;else end&#13;&#10;&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="52cc9df709164d8fa8691d02d99c2df4"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="StretchValue" luaMethodCode="--&#10;--&#10;--&#10;StretchValue = function(--[[ CtrlrModulator --]] modulator, --[[ number --]] numericModulatorValue)&#13;&#10;&#13;&#10;&#9; -- looks if 12 or 16dB type of 1128 via switch dB and does some mathe on fhe values that are send from the EQ-fader&#13;&#10;&#9; -- the fader send CC&#180;s manipulated to sysex (F0 b0 channel value F7)[12 and 16dB Vers differ] and receive values via &#13;&#10;&#9; -- dump as sysex in a different format (funny...)&#13;&#10;&#13;&#10;Value_dB = panel:getModulatorByName(&quot;dB&quot;):getValueMapped()&#13;&#10;&#13;&#10;&#9;if Value_dB == 0 then&#9;&#9;-- 12dB&#13;&#10;&#9;numericModulatorValue=numericModulatorValue *4+14&#13;&#10;&#13;&#10;&#9;elseif Value_dB == 1 then&#9;--16dB&#13;&#10;&#9;numericModulatorValue = numericModulatorValue *4+16&#13;&#10;--&#9;numericModulatorValue = numericModulatorValue *4+9&#13;&#10;&#13;&#10;&#9;else end&#13;&#10;&#10;return numericModulatorValue&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="luaModulatorGetValueForMIDI" luaMethodSource="0"
                   uuid="7f04292507244ef893e0387fd672da90" luaMethodValid="1"/>
        <luaMethod luaMethodName="singlebits" luaMethodCode="function singlebits(EditBufferMessage)&#13;&#10;&#10; &#9;local bitTest = BigInteger(22)&#13;&#10;--local bitTest = BigInteger(EditBufferMessage:getByte(2))&#13;&#10;&#13;&#10;&#9;&#9;--console (&quot;bitTest: &quot;)&#13;&#10;&#9;--console (string.format(&quot;%02x&quot;,EditBufferMessage:getByte(2)))&#13;&#10;&#9;--console (&quot;VersionVal: &quot;)&#13;&#10;&#9;--console (string.format(&quot;%02x&quot;, VersionVal:getByte(4)))&#13;&#10;&#9;--console (&quot;EditBufferMessage: &quot;..tostring(EditBufferMessage:getByte(2)))&#13;&#10;&#13;&#10;--what(EditBufferMessage:getByte(2))&#13;&#10;&#13;&#10;--&#9;dump(bitTest:getBitRangeAsInt(0,1))&#13;&#10;--&#9;dump(bitTest:getBitRangeAsInt(1,1))&#13;&#10;--&#9;dump(bitTest:getBitRangeAsInt(2,1))&#13;&#10;--&#9;dump(bitTest:getBitRangeAsInt(3,1))&#13;&#10;--&#9;dump(bitTest:getBitRangeAsInt(4,1))&#13;&#10;--&#9;dump(bitTest:getBitRangeAsInt(5,1))&#13;&#10;--&#9;dump(bitTest:getBitRangeAsInt(6,1))&#13;&#10;--&#9;dump(bitTest:getBitRangeAsInt(7,1))&#13;&#10;&#13;&#10;&#13;&#10;-- &#9;dump(EditBufferMessage:getByte(2):getBitRangeAsInt(0,1))&#13;&#10;&#13;&#10;--&#9;bits = tonumber(bitTestx,2)&#13;&#10;&#13;&#10;--&#9;console (&quot;bitTest in binary: &quot;..tostring(bits))&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;--&#9;bitTest_bit1=bitTest:getBitRangeAsInt(0,1)&#13;&#10;--&#9;&#9;dump(bitTest_bit1)&#13;&#10;&#13;&#10;--&#9;bitTest_bit2=bitTest:getBitRangeAsInt(1,1)&#13;&#10;--&#9;&#9;dump(bitTest_bit2)&#13;&#10;&#13;&#10;--&#9;bitTest_bit3=bitTest:getBitRangeAsInt(2,1)&#13;&#10;--&#9;&#9;dump(bitTest_bit3)&#13;&#10;&#13;&#10;--&#9;bitTest_bit4=bitTest:getBitRangeAsInt(3,1)&#13;&#10;---&#9;&#9;dump(bitTest_bit4)&#13;&#10;--&#13;&#10;--&#9;bitTest_bit5=bitTest:getBitRangeAsInt(4,1)&#13;&#10;--&#9;&#9;dump(bitTest_bit5)&#13;&#10;&#13;&#10;--&#9;bitTest_bit6=bitTest:getBitRangeAsInt(5,1)&#13;&#10;--&#9;&#9;dump(bitTest_bit6)&#13;&#10;&#13;&#10;&#13;&#10;--&#9;bitTest_bit7=bitTest:getBitRangeAsInt(6,1)&#13;&#10;--&#9;&#9;dump(bitTest_bit7)&#13;&#10;&#13;&#10;--&#9;bitTest_bit8=bitTest:getBitRangeAsInt(7,1)&#13;&#10;--&#9;&#9;dump(bitTest_bit8)&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="6985dbc15a3b4fedba03c947e801c8f3"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="MidiReceived" uuid="fbd240394fc3490784c3ffabef052703">
        <luaMethod luaMethodName="midiMessageReceived" luaMethodCode="&#13;&#10;--&#13;&#10;-- Panel executes when when a midi message is received&#13;&#10;-- &#13;&#10;--&#13;&#10;&#10;&#13;&#10;midiMessageReceived = function(midiMessage)&#13;&#10;&#9;&#13;&#10;&#9;s = midiMessage:getSize()&#13;&#10;--&#9;console(string.format (&quot;I got the size of the message, here it is : %d&quot;,s))&#13;&#10;&#13;&#10;&#9;if  s == 96 then&#9;-- System-parameter&#13;&#10;--&#9;&#9;console(&quot;Received program dump of 96 bytes&quot;)&#13;&#10;--&#9;&#9;PatchDatasysLoaded = midiMessage:getData() -- create a memoryblock with the data dump&#10;&#9;&#9;programDatasys = midiMessage:getData():getRange(4,95-4) -- create a memory block with the synth engine data, leaving the header &#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;os.execute(sleep(50))&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;assignValuesSys(midiMessage)-- call a script to assign each byte to each modulator.&#13;&#10;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if s == 7 then&#9;&#9;-- Versions-parameter&#13;&#10;&#13;&#10;--&#9;&#9;console(&quot;Received program dump of 7 bytes&quot;)&#13;&#10;&#9;&#9;-- local x = midiMessage:getData():getRange(3,3)&#13;&#10;&#9; &#9;-- console (string.format(&quot;%02x&quot;, x:getByte(0)))&#13;&#10;--&#9;EditBufferMessage = midiMessage:getData():getRange(1,6)&#13;&#10;&#13;&#10;--&#9;singlebits(EditBufferMessage)&#13;&#10;&#9;&#13;&#10;&#9;&#9;-- console(what(x))&#13;&#10;&#9;&#9;if midiMessage:getData():getByte(3) == 22 then&#13;&#10; &#9;&#9;&#13;&#10;&#9;&#9;VersionVal = midiMessage:getData():getRange(1,6) -- create a memory block with the synth engine data&#9;&#13;&#10;&#9;&#9;&#9;-- console (&quot;VersionVal: &quot;)&#13;&#10;&#9;&#9;&#9;-- console (string.format(&quot;%02x&quot;, VersionVal:getByte(2)))&#13;&#10;&#13;&#10;&#9;&#9;assignValuesVersion(midiMessage)&#13;&#10;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;if  s == 36 then&#9;--Analyzer-data&#13;&#10;--&#9;&#9;console(&quot;Received program dump of 36 bytes&quot;)&#13;&#10;&#10;&#9;&#9;AnalizerSys = midiMessage:getData():getRange(4,35-4) -- create a memory block with the synth engine data, leaving the header &#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;os.execute(sleep(1))&#13;&#10;&#13;&#10;&#9;&#9;assignValuesAnalizer(midiMessage)-- call a script to assign each byte to each modulator.&#13;&#10;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;--s = midiMessage:getSize()&#13;&#10;--&#9;console(string.format (&quot;I got the size of the message, here it is : %d&quot;,s))&#13;&#10;&#13;&#10;&#9;if s == 37 then&#9;&#9;--EQ-fader-values&#13;&#10;--&#9;&#9;console(&quot;Received program dump of 37 bytes&quot;)&#13;&#10;&#13;&#10;&#9;&#9;programDataVal = midiMessage:getData():getRange(4,36-4) -- create a memory block with the synth engine data, leaving the header&#13;&#10;&#13;&#10;&#9;&#9;os.execute(sleep(50))&#13;&#10;&#10;&#9;&#9;assignValuesFad(midiMessage) -- call a script to assign each byte to each modulator.&#13;&#10;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="c0ef47525ad94b6a9f6f4441eee935fe"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Unused" uuid="5140c6967df84f8cabd49f8cb9b45c23">
        <luaMethod luaMethodName="ExitGain" luaMethodCode="--&#10;-- Called when the mouse cursors exits a component&#10;--&#10;&#10;ExitGain = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;local n = L(comp:getOwner():getName())&#13;&#10;dump(&quot;exitgain&quot;)&#13;&#10;--panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 0F F7&quot;)))&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 1F F7&quot;)))&#13;&#10;--panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 11 1F F7&quot;)))&#13;&#10;&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="uiCustomMouseExitCallback" luaMethodSource="0"
                   uuid="75f4f419e8404d1aa1ad7f124916cbc2" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Timer" uuid="cf585578d59445a8a0f5d5f31896e76b">
        <luaMethod luaMethodName="jTimer" luaMethodCode="&#13;&#10;&#9; -- asks for Analyzer-data&#13;&#10;&#13;&#10;jTimerCallback = function(timerId)&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(&quot;F0 33 00 12 F7&quot;))&#13;&#10;end&#13;&#10;&#13;&#10;--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;jTimer = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#9;--dump(value)&#13;&#10;&#9;&#13;&#10;&#9;timerId = 0&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- reset&#13;&#10;&#9;if(mod:getProperty(&quot;name&quot;) == &quot;tim&quot;) then&#9;-- if Tim, run 1&#13;&#10;&#9;timerId = 1&#13;&#10;&#9; end&#13;&#10;&#13;&#10;&#13;&#10;--&#9;if(timerId == 0) then&#13;&#10;--&#9; &#9; console(&quot;jTimer: No suitable timer found&quot;)&#13;&#10;--&#9; end&#13;&#10;&#13;&#10;&#9;if(value == 0) then&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- timerid 0 stopps the timer&#13;&#10;&#9;timer:stopTimer(timerId)&#13;&#10;&#9; end&#13;&#10;&#13;&#10;&#9;if(value == 1) then&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- timerid 1 &#13;&#10;&#9;timer:setCallback(timerId, jTimerCallback)&#13;&#10;&#9;timer:startTimer(timerId,(Poll_Rate :getValueMapped()))&#9;&#9;&#9;&#9;-- timer start, id, interval (ms)&#13;&#10;&#9; end&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="cc45051e255748e4abec69c7bcf48c52"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Request" uuid="6a90ab0abc194612ac673f4332d3711a">
        <luaMethod luaMethodName="SendValRequest" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;&#9;--used for Flat&#13;&#10;&#13;&#10;SendValRequest = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;--if is_panel_ready() == true then&#13;&#10;&#13;&#10;--local ReqFadVal = string.format(&quot;F0 33 00 15 F7&quot;)&#13;&#10;&#13;&#10;os.execute(sleep(15))&#13;&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#13;&#10;os.execute(sleep(15))&#13;&#10;&#13;&#10;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="480c038f15f440bfa65777fea91ea5c6" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethod luaMethodName="Analyzer" luaMethodCode="function Analyzer()&#10;Anal = panel:getModulatorByName(&quot;AnaAddValue&quot;):getValue()&#13;&#10;&#13;&#10;--dump(Anal)&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="0242a4e03f664bcdb2a782d5d4a484f8"
                 luaMethodValid="1"/>
      <luaMethod luaMethodName="TrackFad_Ref" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;TrackFad_Ref = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;os.execute(sleep(50))&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#9;os.execute(sleep(50))&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#9;os.execute(sleep(50))&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 17 F7&quot;)))&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(string.format(&quot;F0 33 00 19 F7&quot;)))&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="573183b3ffb14a56b3891c9c22a71f7a" luaMethodValid="1"/>
    </luaManagerMethods>
  </luaManager>
  <panelResources>
    <resource resourceHash="-3511200163484410233" resourceLoadedTime="1690726441463"
              resourceSize="782" resourceFile="Bargraph136x09_33.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\Bargraph136x09_33.png"
              resourceName="Bargraph136x09_33" resourceType="Image"/>
    <resource resourceHash="-3511200163074444664" resourceLoadedTime="1690726441465"
              resourceSize="930" resourceFile="Bargraph136x09_37.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\Bargraph136x09_37.png"
              resourceName="Bargraph136x09_37" resourceType="Image"/>
    <resource resourceHash="-3511200153291518226" resourceLoadedTime="1690726441468"
              resourceSize="994" resourceFile="Bargraph136x09_40.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\Bargraph136x09_40.png"
              resourceName="Bargraph136x09_40" resourceType="Image"/>
    <resource resourceHash="-3511200152457055930" resourceLoadedTime="1690726441471"
              resourceSize="1163" resourceFile="Bargraph136x09_48.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\Bargraph136x09_48.png"
              resourceName="Bargraph136x09_48" resourceType="Image"/>
    <resource resourceHash="-3511200142674537407" resourceLoadedTime="1690726441474"
              resourceSize="1252" resourceFile="Bargraph136x09_51.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\Bargraph136x09_51.png"
              resourceName="Bargraph136x09_51" resourceType="Image"/>
    <resource resourceHash="-6791476039804269493" resourceLoadedTime="1690726441475"
              resourceSize="576" resourceFile="Bargraph136x9_33.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.3tKBw2pat5E\Bargraph136x9_33.png"
              resourceName="Bargraph136x9_33" resourceType="Image"/>
    <resource resourceHash="7958289968162196026" resourceLoadedTime="1690726441477"
              resourceSize="1037" resourceFile="Bargraph_136x09_42.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\Bargraph_136x09_42.png"
              resourceName="Bargraph_136x09_42" resourceType="Image"/>
    <resource resourceHash="7958289968180388305" resourceLoadedTime="1690726441480"
              resourceSize="1115" resourceFile="Bargraph_136x09_46.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.3tKBw2pat5E\Bargraph_136x09_46.png"
              resourceName="Bargraph_136x09_46" resourceType="Image"/>
    <resource resourceHash="-5012104705402783607" resourceLoadedTime="1690726441521"
              resourceSize="560043" resourceFile="Black Plastic small 01.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\Black Plastic small 01.png"
              resourceName="Black Plastic small 01" resourceType="Image"/>
    <resource resourceHash="5878598144064068968" resourceLoadedTime="1690726441523"
              resourceSize="26515" resourceFile="ButtonBlueFlat_128_128_2.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\ButtonBlueFlat_128_128_2.png"
              resourceName="ButtonBlueFlat_128_128_2" resourceType="Image"/>
    <resource resourceHash="-1814189055964519774" resourceLoadedTime="1690726441525"
              resourceSize="21716" resourceFile="FaderVert_128_24_25.png" resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.3tKBw2pat5E\FaderVert_128_24_25.png"
              resourceName="FaderVert_128_24_25" resourceType="Image"/>
    <resource resourceHash="781732848043104625" resourceLoadedTime="1690726441527"
              resourceSize="14111" resourceFile="FaderVert_2_128_24_25.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\FaderVert_2_128_24_25.png"
              resourceName="FaderVert_2_128_24_25" resourceType="Image"/>
    <resource resourceHash="781732858600950121" resourceLoadedTime="1690726441530"
              resourceSize="18432" resourceFile="FaderVert_2_128_24_33.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\FaderVert_2_128_24_33.png"
              resourceName="FaderVert_2_128_24_33" resourceType="Image"/>
    <resource resourceHash="-96031293696739290" resourceLoadedTime="1690726441560"
              resourceSize="317620" resourceFile="FaderVert_Mast_512_64_51_V2.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC-1128-Editor\Resources\FaderVert_Mast_512_64_51_V2.png"
              resourceName="FaderVert_Mast_512_64_51_V2" resourceType="Image"/>
    <resource resourceHash="3817239692918660683" resourceLoadedTime="1690726441588"
              resourceSize="301994" resourceFile="FaderVert_Mast__2512_64_51..png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\FaderVert_Mast__2512_64_51..png"
              resourceName="FaderVert_Mast__2512_64_51." resourceType="Image"/>
    <resource resourceHash="1427447831153893198" resourceLoadedTime="1690726441599"
              resourceSize="325027" resourceFile="knob_Schnabel_120_black25.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\knob_Schnabel_120_black25.png"
              resourceName="knob_Schnabel_120_black25" resourceType="Image"/>
    <resource resourceHash="-7656788486538687938" resourceLoadedTime="1690726441601"
              resourceSize="36532" resourceFile="knob_Schnabel_120_black3.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\knob_Schnabel_120_black3.png"
              resourceName="knob_Schnabel_120_black3" resourceType="Image"/>
    <resource resourceHash="-7656788486433740934" resourceLoadedTime="1690726441602"
              resourceSize="50379" resourceFile="knob_Schnabel_120_black4.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\knob_Schnabel_120_black4.png"
              resourceName="knob_Schnabel_120_black4" resourceType="Image"/>
    <resource resourceHash="2991569520032931136" resourceLoadedTime="1690726441603"
              resourceSize="8360" resourceFile="knob_Schnabel_66_black2.png"
              resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.3tKBw2pat5E\knob_Schnabel_66_black2.png"
              resourceName="knob_Schnabel_66_black2" resourceType="Image"/>
    <resource resourceHash="4229567481902629818" resourceLoadedTime="1690726441604"
              resourceSize="9047" resourceFile="knob_Schnabel_66_black2_v2.png"
              resourceSourceFile="C:\Users\tf\AppData\Roaming\Ctrlr\8.3tKBw2pat5E\knob_Schnabel_66_black2_v2.png"
              resourceName="knob_Schnabel_66_black2_v2" resourceType="Image"/>
    <resource resourceHash="4229567482006806201" resourceLoadedTime="1690726441605"
              resourceSize="24380" resourceFile="knob_Schnabel_66_black2_v3.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\knob_Schnabel_66_black2_v3.png"
              resourceName="knob_Schnabel_66_black2_v3" resourceType="Image"/>
    <resource resourceHash="-893309548923628755" resourceLoadedTime="1690726441606"
              resourceSize="10151" resourceFile="LED_Button_128x128x2knob.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\LED_Button_128x128x2knob.png"
              resourceName="LED_Button_128x128x2knob" resourceType="Image"/>
    <resource resourceHash="-7161084716306933797" resourceLoadedTime="1690726441607"
              resourceSize="9066" resourceFile="LED_Red_64x64_2.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\LED_Red_64x64_2.png"
              resourceName="LED_Red_64x64_2" resourceType="Image"/>
    <resource resourceHash="-8055637490688086337" resourceLoadedTime="1690726441608"
              resourceSize="27259" resourceFile="ONButtonBlueFlat_128_128_2.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\ONButtonBlueFlat_128_128_2.png"
              resourceName="ONButtonBlueFlat_128_128_2" resourceType="Image"/>
    <resource resourceHash="-7202447552660068005" resourceLoadedTime="1690726441609"
              resourceSize="28568" resourceFile="Pad_LXM_120x120_2.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\Pad_LXM_120x120_2.png"
              resourceName="Pad_LXM_120x120_2" resourceType="Image"/>
    <resource resourceHash="8132807968402819370" resourceLoadedTime="1690726441609"
              resourceSize="1661" resourceFile="ST_button_Granite_50x23_2.png"
              resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\ST_button_Granite_50x23_2.png"
              resourceName="ST_button_Granite_50x23_2" resourceType="Image"/>
    <resource resourceHash="-5138348661225903746" resourceLoadedTime="1690726441631"
              resourceSize="9200" resourceFile="TCyxGrid_3.png" resourceSourceFile="C:\Users\tf\Desktop\TCyxGrid_3.png"
              resourceName="TCyxGrid_3" resourceType="Image"/>
    <resource resourceHash="-5138348661120250377" resourceLoadedTime="1690726441651"
              resourceSize="11341" resourceFile="TCyxGrid_4.png" resourceSourceFile="C:\Users\tf\Desktop\TCyxGrid_4.png"
              resourceName="TCyxGrid_4" resourceType="Image"/>
    <resource resourceHash="-5138348661004255119" resourceLoadedTime="1690726441695"
              resourceSize="41604" resourceFile="TCyxGrid_5.png" resourceSourceFile="C:\Users\tf\Desktop\TCyxGrid_5.png"
              resourceName="TCyxGrid_5" resourceType="Image"/>
    <resource resourceHash="8762007555829504534" resourceLoadedTime="1690726441737"
              resourceSize="41548" resourceFile="TCyxGrid_5_16dB.png" resourceSourceFile="C:\Users\tf\Desktop\TCyxGrid_5_16dB.png"
              resourceName="TCyxGrid_5_16dB" resourceType="Image"/>
    <resource resourceHash="-457965696531268915" resourceLoadedTime="1690726441738"
              resourceSize="4175" resourceFile="tc_logo.png" resourceSourceFile="C:\Users\tf\Desktop\Studiokram\CRLR\TC1128_Sysex\TC\tc_logo.png"
              resourceName="tc_logo" resourceType="Image"/>
  </panelResources>
  <uiPanelEditor uiPanelCanvasRectangle="0 0 1131 870" uiPanelSnapSize="8" uiPanelBackgroundColour="0xffffffff"
                 uiPanelBackgroundColour1="0xffffffff" uiPanelBackgroundColour2="0xffffffff"
                 uiPanelBackgroundGradientType="1" uiPanelImageResource="-- None"
                 uiPanelEditMode="1" uiPanelViewPortSize="1720" uiPanelPropertiesSize="832"
                 uiPanelLock="0" uiPanelDisabledOnEdit="0" uiPanelMenuBarVisible="1"
                 uiPanelMenuBarHideOnExport="1" uiPanelWidth="1104" uiPanelHeight="870"
                 name="TC-1128" uiPanelImageAlpha="255" uiPanelImageLayout="64"
                 uiPanelSnapActive="1" uiPanelPropertiesOnRight="0" luaPanelPaintBackground="-- None"
                 luaPanelResized="-- None" luaPanelFileDragDropHandler="-- None"
                 luaPanelFileDragEnterHandler="-- None" luaPanelFileDragExitHandler="-- None"
                 uiPanelInvisibleComponentAlpha="0.5" uiPanelTooltipBackgroundColour="0xffeeeebb"
                 uiPanelTooltipOutlineColour="0xff000000" uiPanelTooltipColour="0xff000000"
                 uiPanelTooltipCornerRound="1" uiPanelTooltipPlacement="2" uiPanelTooltipFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
                 uiPanelZoom="1.1000000000000001" uiPanelDisableCombosOnEdit="0"
                 lastBrowsedComponentDir="C:\Users\tf\Documents" uiPanelColourScheme="Light"
                 uiPanelLookAndFeel="V3" uiPanelMidiChannelMenuHideOnExport="0"
                 uiPanelMidiThruMenuHideOnExport="0" uiPanelMidiControllerMenuHideOnExport="0"
                 uiPanelProgramsMenuHideOnExport="0">
    <uiPanelCanvasLayer uiPanelCanvasLayerName="Top" uiPanelCanvasLayerUid="d07d786850110000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="3"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="Backround" uiPanelCanvasLayerUid="522d49ab45070000feffffffffffffff"
                        uiPanelCanvasLayerColour="645e5e" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="0"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="XY-Tabs_12 dB" uiPanelCanvasLayerUid="3fc46063dc030000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="1"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="XY-Tabs_16 dB" uiPanelCanvasLayerUid="53064a5f81040000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="2"/>
  </uiPanelEditor>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3106" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Frage1" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="-4608" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 15 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Frage1"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText=""
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="16 8 88 32" uiType="uiToggleButton" componentLayerUid="d07d786850110000feffffffffffffff"
               componentTabName="Tabs" componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3139" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="modulator-1" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 19 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="96Byte_rec"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="0xff0000ff"
               uiButtonColourOff="0xff4364ff" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="False&#10;True"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="472 8 88 32" componentLayerUid="d07d786850110000feffffffffffffff"
               uiType="uiButton" componentTabName="Tabs" componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="3140" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MidiCH" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 04 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="MidiCH"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="Rotary" uiSliderMin="0"
               uiSliderMax="15" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="1" componentTabName="Tabs"
               componentLayerUid="d07d786850110000feffffffffffffff" componentRectangle="8 8 64 64"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3205" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue +63"
             modulatorValueExpressionReverse="midiValue +63" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Eq_On_Off" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="33" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 21 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Eq"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="0 8 69 50"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0=0&#10;1=1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3206" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="SendValRequest"
             name="Flat" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 11 04 F7"
          midiMessageSysExFormula="F0 33 00 11 04 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Flat"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Glow" componentEffectRadius="1" componentEffectColour="ffbab6d9"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="944 8 69 50"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3207" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="resetEncVal"
             name="modulator-3" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 11 07 F7:SysEx,Direct,Direct,-1,-1,f0 33 00 11 1f f7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Single Band"
               componentMouseCursor="2" componentGroupName="Filter" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="20" componentRadioGroupNotifyMidi="0"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="752 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3208" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="resetEncVal"
             name="modulator-5" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 11 08 F7:SysEx,Direct,Direct,-1,-1,f0 33 00 11 1f f7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Broad Band"
               componentMouseCursor="2" componentGroupName="Filter" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="20" componentRadioGroupNotifyMidi="0"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="816 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="d07d786850110000feffffffffffffff"
               componentTabName="Tabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3209" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="dumptests"
             name="DumpMe" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="DumpMe"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="1" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="ButtonBlueFlat_128_128_2" componentRectangle="416 8 71 88"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="d07d786850110000feffffffffffffff"
               componentTabName="Tabs" componentTabId="4"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Tabs" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="125" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="Electronic Highway Sign;12;0;0;0;0;1;2" componentVisibleName="Tabs"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged=""
               uiTabsDepth="24" uiTabsOutlineThickness="2" uiTabsFrontTabOutline="2"
               uiTabsTabOutline="1" uiTabsIndentThickness="0" uiTabsOrientation="0"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiTabsOutlineGlobalColour="0x00000000" uiTabsOutlineGlobalBackgroundColour="0x67000000"
               uiTabsOutlineTabColour="0xff303030" uiTabsTextTabColour="0xff909090"
               uiTabsFrontTabOutlineColour="0xff000000" uiTabsFrontTabTextColour="ff424162"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="17 32 1009 127"
               uiType="uiTabs" componentLayerUid="d07d786850110000feffffffffffffff"
               uiTabsCurrentTab="0">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="Equalizer" uiTabsTabContentBackgroundColour="ff151618"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="Midi" uiTabsTabContentBackgroundColour="ff9c8da4"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="2" uiTabsTabName="Analyzer" uiTabsTabContentBackgroundColour="ffb5b5a0"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="3" uiTabsTabName="Track Funktions" uiTabsTabContentBackgroundColour="ff000000"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="4" uiTabsTabName="Hidden" uiTabsTabContentBackgroundColour="ffbbadad"
                 uiTabsTabBackgroundColour="88655a59" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3210" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="E-ReqVers" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="12" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 12 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="36Byte_Ana"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="Pad_LXM_120x120_2" componentRectangle="608 8 53 55"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="d07d786850110000feffffffffffffff"
               componentTabName="Tabs" componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3212" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HiCut" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 1A 1B xx F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="HiCut"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="knob_Schnabel_66_black2_v3"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="OFF&#10;15 KHz"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="Tabs"
               componentLayerUid="d07d786850110000feffffffffffffff" componentRectangle="480 8 64 64"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="3213" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="LowCut" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 1A 1A xx F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="fffefefe"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LowCut"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="knob_Schnabel_120_black4"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="OFF&#10;15 Hz&#10;30 Hz&#10;45 Hz&#10;"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="Tabs"
               componentLayerUid="d07d786850110000feffffffffffffff" componentRectangle="536 8 64 64"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="3215" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="PresetNumBox" modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 11 10 F7:SysEx,Direct,Direct,-1,-1,F0 33 00 11 0C 3F xx F7:SysEx,Direct,Direct,-1,-1,F0 33 00 11 10 F7:SysEx,Direct,Direct,-1,-1,F0 33 00 11 1F F7:SysEx,Direct,Direct,-1,-1,F0 33 00 17 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="fffefefe"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Presets"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff000000"
               uiComboOutlineColour="ff8c8c99" uiComboTextColour="ff060606"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff82828b"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="ffc91c1c" uiComboContent="0&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16&#10;17&#10;18&#10;19&#10;20&#10;21&#10;22&#10;23&#10;24&#10;25&#10;26&#10;27&#10;28&#10;29&#10;30&#10;31&#10;32&#10;33&#10;34&#10;35&#10;36&#10;37&#10;38&#10;39&#10;40&#10;41&#10;42&#10;43&#10;44&#10;45&#10;46&#10;47&#10;48&#10;49&#10;50&#10;51&#10;52&#10;53&#10;54&#10;55&#10;56&#10;57&#10;58&#10;59&#10;60&#10;61&#10;62&#10;63&#10;64&#10;65&#10;66&#10;67&#10;68&#10;69&#10;70&#10;71&#10;72&#10;73&#10;74&#10;75&#10;76&#10;77&#10;78&#10;79&#10;80&#10;81&#10;82&#10;83&#10;84&#10;85&#10;86&#10;87&#10;88&#10;89&#10;90&#10;91&#10;92&#10;93&#10;94&#10;95&#10;96&#10;97&#10;98&#10;99&#10;100&#10;101&#10;102&#10;103&#10;104&#10;105&#10;106&#10;107&#10;108&#10;109&#10;110&#10;111&#10;112&#10;113&#10;114&#10;115&#10;116&#10;117&#10;118&#10;119&#10;120&#10;121&#10;122&#10;123&#10;124&#10;125&#10;126&#10;127&#10;"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="856 16 88 32"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="0" vstIndex="3219" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value "
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="E-3" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 17 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="37Byte_rec"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="Pad_LXM_120x120_2" componentRectangle="560 8 53 55"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3220"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="1"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="drawXY_Surface" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="3" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 17 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="drawXY_Surface"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="10" componentEffectColour="0"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiXYSurfaceBgGradientType="Radial"
               uiXYSurfaceBackgroundColour1="bfbfbf" uiXYSurfaceBackgroundColour2="919191"
               uiXYSurfaceOutlineGradientType="0xff909090" uiXYSurfaceOutlineColour1="ffffff"
               uiXYSurfaceOutlineColour2="a9ffffff" uiXYSurfaceOutlineThickness="1"
               uiXYSurfaceCornerSize="10" uiXYSurfaceBgImageResource="-- None"
               componentRectangle="86 648 876 180" uiXYSurfaceBgImageLayout="0"
               uiXYSurfaceBgImageAlpha="0" uiXYSurfaceXTrackEnabled="1" uiXYSurfaceXTrackColour="ffffff"
               uiXYSurfaceXTrackThickness="2" uiXYSurfaceYTrackColour="0xffffffff"
               uiXYSurfaceYTrackThickness="2" uiXYSurfaceModSectionLocation="0"
               uiXYSurfaceModSectionHeight="16" uiXYSurfaceInfoLabelVisible="0"
               uiXYSurfaceInfoLabelLocation="bottomRight" uiXYSurfaceInfoLabelColour="0xffffffff"
               uiXYSurfaceInfoLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiXYSurfaceMaxX="27" uiXYSurfaceDestinationX="XY_X" uiXYSurfaceMaxY="24"
               uiXYSurfaceDestinationY="XY_Y" uiXYSurfaceGradientColour="ffffff"
               uiXYSurfaceGradientGrain="12" uiXYSurfaceModulatorBgGradientType="None"
               uiXYSurfaceModulatorBgColour1="ff900000" uiXYSurfaceModulatorBgColour2="0xff900000"
               uiXYSurfaceModulatorOutlineGradientType="None" uiXYSurfaceModulatorOutlineColour1="ff900000"
               uiXYSurfaceModulatorOutlineColour2="ff900000" uiXYSurfaceModulatorOutlineThickness="1"
               uiXYSurfaceModulatorWidth="8" uiXYSurfaceModulatorHeight="8"
               uiXYSuraceXFlip="0" uiXYSuraceYFlip="1" uiXYSuraceShowRightClickMenu="0"
               uiXYSurfaceDestinationXGroupFilter="" uiXYSurfaceDestinationYGroupFilter=""
               componentTabId="0" componentTabName="" componentLayerUid="d07d786850110000feffffffffffffff"
               uiType="uiXYSurface"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="27" vstIndex="3221" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="jonasMod8Change"
             name="XY_X" modulatorMin="0" modulatorValue="10">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 17 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="XY_X"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16&#10;17&#10;18&#10;19&#10;20&#10;21&#10;22&#10;23&#10;24&#10;25&#10;26&#10;27"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="4"
               uiSliderPopupBubble="0" componentTabId="4" componentTabName="Tabs"
               uiType="uiFixedSlider" componentRectangle="880 8 56 77" componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3222" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="jonasMod8Change"
             name="XY_Y" modulatorMin="0" modulatorValue="7">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 17 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="XY_Y"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="25" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-12&#10;-11&#10;-10&#10;-9&#10;-8&#10;-7&#10;-6&#10;-5&#10;-4&#10;-3&#10;-2&#10;-1&#10;0&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiXYSurfaceMaxY="0" componentTabId="4"
               componentTabName="Tabs" uiType="uiFixedSlider" componentRectangle="936 8 56 77"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3224" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Midi_Omni" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 05 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="12" componentLabelWidth="64" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Midi Omni"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="Rotary" uiSliderMin="0"
               uiSliderMax="17" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="Off=0&#10;On=1"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="72 8 64 64"
               componentLayerUid="d07d786850110000feffffffffffffff" componentTabName="Tabs"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3225" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Dev-Omni" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 30 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Dev-Omni"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="200 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="OFF=0&#10;ON=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="99" vstIndex="3226" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Dmp-Slowdwn" modulatorMin="0" modulatorValue="4">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 27 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="12" componentLabelWidth="64" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Dmp-Slowdwn"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="Rotary" uiSliderMin="0"
               uiSliderMax="99" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16&#10;17&#10;18&#10;19&#10;20&#10;21&#10;22&#10;23&#10;24&#10;25&#10;26&#10;27&#10;28&#10;29&#10;30&#10;31&#10;32&#10;33&#10;34&#10;35&#10;36&#10;37&#10;38&#10;39&#10;40&#10;41&#10;42&#10;43&#10;44&#10;45&#10;46&#10;47&#10;48&#10;49&#10;50&#10;51&#10;52&#10;53&#10;54&#10;55&#10;56&#10;57&#10;58&#10;59&#10;60&#10;61&#10;62&#10;63&#10;64&#10;65&#10;66&#10;67&#10;68&#10;69&#10;70&#10;71&#10;72&#10;73&#10;74&#10;75&#10;76&#10;77&#10;78&#10;79&#10;80&#10;81&#10;82&#10;83&#10;84&#10;85&#10;86&#10;87&#10;88&#10;89&#10;90&#10;91&#10;92&#10;93&#10;94&#10;95&#10;96&#10;97&#10;98&#10;99"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="1" componentTabName="Tabs"
               componentLayerUid="d07d786850110000feffffffffffffff" componentRectangle="936 8 64 64"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3228" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="StereoMaster" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 41 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="St-Master"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="256 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="OFF=0&#10;ON=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3229" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="AllThru" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 5A xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="All Thru"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="144 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="OFF=0&#10;ON=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="1" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3230" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Keys-Rec" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 2A xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Keys-Rec"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="552 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="OFF=0&#10;ON=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="1" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3232" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="SA-Source" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 17 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="SA-Source"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="0 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="IN=0&#10;OUT=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="2" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3233" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Peak-Average" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 18 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Peak-Average"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="64 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="AVG=0&#10;PK=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3234" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Autolevel" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 1e xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Autolevel"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="128 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="OFF=0&#10;ON=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="3235" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Release" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 1A 19 xx F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Release"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="knob_Schnabel_120_black4"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="SLO=0&#10;MED=1&#10;FST=2"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="248 8 64 64"
               componentLayerUid="d07d786850110000feffffffffffffff" componentTabName="Tabs"
               componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="18" vstIndex="3236" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="SA-Level" modulatorMin="0" modulatorValue="18">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 1d xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="12" componentLabelWidth="64" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="SA-Level"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="Rotary" uiSliderMin="0"
               uiSliderMax="17" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-12dB=0&#10;-11dB=1&#10;-10dB=2&#10;- 9dB=3&#10;- 8dB=4&#10;- 7dB=5&#10;- 6dB=6&#10;- 5dB=7&#10;- 4dB=8&#10;- 3dB=9&#10;- 2dB=10&#10;- 1dB=11&#10;  0dB=12&#10;+ 1dB=13&#10;+ 2dB=14&#10;+ 3dB=15&#10;+ 4dB=16&#10;+ 5dB=17&#10;+ 6dB=18"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="2" componentTabName="Tabs"
               componentLayerUid="d07d786850110000feffffffffffffff" componentRectangle="192 8 64 64"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3239" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="resetEncVal"
             name="LowShelving" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 11 09 F7:SysEx,Direct,Direct,-1,-1,f0 33 00 11 1f f7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low Shelving"
               componentMouseCursor="2" componentGroupName="Filter" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="20" componentRadioGroupNotifyMidi="0"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="dumptests"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="688 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="0" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3240" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="resetEncVal"
             name="HighShelving" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 11 0A F7:SysEx,Direct,Direct,-1,-1,f0 33 00 11 1f f7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High Shelving"
               componentMouseCursor="2" componentGroupName="Filter" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="20" componentRadioGroupNotifyMidi="0"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="dumptests"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="624 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="False&#10;True" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="3241" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="BB-Slope" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 11 08 F7:SysEx,Direct,Direct,-1,-1,F0 33 00 11 3F xx F7:SysEx,Direct,Direct,-1,-1,F0 33 00 11 1F F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="BB Slope"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="knob_Schnabel_120_black4"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent=" 3dB=0&#10; 6dB=1&#10; 9dB=2&#10;12dB=3"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="296 8 64 64"
               componentLayerUid="d07d786850110000feffffffffffffff" componentTabName="Tabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3244" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="EQRange" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 1A 15 xx F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EQ Range"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="knob_Schnabel_66_black2_v3"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="12dB=0&#10;6 dB=1"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="16 8 64 64"
               componentLayerUid="d07d786850110000feffffffffffffff" componentTabName="Tabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3249" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_04" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 03 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="63"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="152 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3250" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_05" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 04 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="80"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="184 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3251" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_06" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 05 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="100"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="216 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3252" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_07" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 06 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="125"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="248 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3253" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_08" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 07 xx F7  "/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="160"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="280 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3254" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_09" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 08 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="200"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="312 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3255" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_10" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 09 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="250"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="344 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3256" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_11" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 0a xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="315"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="376 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3257" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_12" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 0b xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="400"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="408 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3258" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_13" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 0c xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="500"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="440 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3259" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_14" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 0d xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="630"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="472 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3260" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_15" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 0E xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="800"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="504 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3261" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_16" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 0F xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="1 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="536 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3262" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_17" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 10 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="1,25 k "
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="568 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3263" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="Value "
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_18" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 11 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="1,6 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="16"
               uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="600 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3264" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_19" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 12 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="2 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="632 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3265" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_20" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 13 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="2,5 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="664 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3266" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_21" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 14 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="3,16 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="696 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3267" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_22" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 15 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="4 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="728 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3268" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_23" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 16 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="5 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="760 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3269" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value "
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_24" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="28" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 17 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="6,3 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="792 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3270" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_25" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 18 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="8 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="824 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3271" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_26" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 19 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="10 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="856 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3272" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_27" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 1a xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="12,5 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="888 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3273" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_28" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 1b xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="16 k"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="920 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3274" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_Level" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 1c xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Level"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="80" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10;-11=14&#10;-10=15&#10;-9=16&#10;-8=17&#10;-7=18&#10;-6=19&#10;-5=20&#10;-4=21&#10;-3=22&#10;-2=23&#10;-1=24&#10;0=25&#10;1=26&#10;2=27&#10;3=28&#10;4=29&#10;5=30&#10;6=31&#10;7=32&#10;8=33&#10;9=34&#10;10=35&#10;11=36&#10;12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="960 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3275" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_InGain" modulatorMin="0" modulatorValue="16">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 1e xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="InGain"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="60" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10;-11=14&#10;-10=15&#10;-9=16&#10;-8=17&#10;-7=18&#10;-6=19&#10;-5=20&#10;-4=21&#10;-3=22&#10;-2=23&#10;-1=24&#10;0=25&#10;1=26&#10;2=27&#10;3=28&#10;4=29&#10;5=30&#10;6=31&#10;7=32&#10;8=33&#10;9=34&#10;10=35&#10;11=36&#10;12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="16 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Frontplate" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Frontplate"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="" uiGroupTextColour="0xff000000"
               uiGroupOutlineColour1="0xffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff060606" uiGroupBackgroundColour2="ff292b2f"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="1"
               uiGroupBackgroundImage="" componentRectangle="16 332 1012 288"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3279" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Keys-Snd" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 2B xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Keys-Snd"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="496 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="OFF=0&#10;ON=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3291" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="TC_Link" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 06 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="TC Link"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="424 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="OFF=0&#10;ON=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3292" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Remote" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 07 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Remote"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="376 8 64 76"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="OFF=0&#10;ON=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="64" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="1" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="35" vstIndex="3293" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Key_1" modulatorMin="0" modulatorValue="32">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 08 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Key_1"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff000000"
               uiComboOutlineColour="ff000000" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff000000"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Input GAIN=0&#10;EQ  ON/OFF=1&#10;FREEZE=2&#10;Display=3&#10;Flat=4&#10;TRACK=5&#10;SWEEP=6&#10;Single BND=7&#10;Broad  BND=8&#10;LOW   SHLV=9&#10;HIGH  SHLV=10&#10;RECALL=11&#10;ADD=12&#10;STORE=13&#10;UTIL=14&#10;Filter=15&#10;ENTER=16&#10;EQ ON=17&#10;EQ OFF=18&#10;Freeze ON=19&#10;Freeze OFF=20&#10;Disp.TRACK=21&#10;Disp.EQ/SA=22&#10;Disp.EQ=23&#10;Disp.SA=24&#10;TRACK ON=25&#10;TRACK  OFF=26&#10;SWEEP ON=27&#10;SWEEP OFF=28&#10;PRESET -=29&#10;PRESET +=30&#10;OFF  KEY=31&#10;PRESET 1=32&#10;PRESET 2=33&#10;PRESET 3=34&#10;PRESET 4=35"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="624 8 88 32"
               componentLayerUid="d07d786850110000feffffffffffffff" componentTabName="Tabs"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="35" vstIndex="3294" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Key_2" modulatorMin="0" modulatorValue="33">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 09 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Key_2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff000000"
               uiComboOutlineColour="ff000000" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff000000"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Input GAIN=0&#10;EQ  ON/OFF=1&#10;FREEZE=2&#10;Display=3&#10;Flat=4&#10;TRACK=5&#10;SWEEP=6&#10;Single BND=7&#10;Broad  BND=8&#10;LOW   SHLV=9&#10;HIGH  SHLV=10&#10;RECALL=11&#10;ADD=12&#10;STORE=13&#10;UTIL=14&#10;Filter=15&#10;ENTER=16&#10;EQ ON=17&#10;EQ OFF=18&#10;Freeze ON=19&#10;Freeze OFF=20&#10;Disp.TRACK=21&#10;Disp.EQ/SA=22&#10;Disp.EQ=23&#10;Disp.SA=24&#10;TRACK ON=25&#10;TRACK  OFF=26&#10;SWEEP ON=27&#10;SWEEP OFF=28&#10;PRESET -=29&#10;PRESET +=30&#10;OFF  KEY=31&#10;PRESET 1=32&#10;PRESET 2=33&#10;PRESET 3=34&#10;PRESET 4=35"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="720 8 88 32" uiType="uiCombo" componentTabName="Tabs"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="35" vstIndex="3295" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Key_3" modulatorMin="0" modulatorValue="34">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 0a xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Key_3"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff000000"
               uiComboOutlineColour="ff000000" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff000000"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Input GAIN=0&#10;EQ  ON/OFF=1&#10;FREEZE=2&#10;Display=3&#10;Flat=4&#10;TRACK=5&#10;SWEEP=6&#10;Single BND=7&#10;Broad  BND=8&#10;LOW   SHLV=9&#10;HIGH  SHLV=10&#10;RECALL=11&#10;ADD=12&#10;STORE=13&#10;UTIL=14&#10;Filter=15&#10;ENTER=16&#10;EQ ON=17&#10;EQ OFF=18&#10;Freeze ON=19&#10;Freeze OFF=20&#10;Disp.TRACK=21&#10;Disp.EQ/SA=22&#10;Disp.EQ=23&#10;Disp.SA=24&#10;TRACK ON=25&#10;TRACK  OFF=26&#10;SWEEP ON=27&#10;SWEEP OFF=28&#10;PRESET -=29&#10;PRESET +=30&#10;OFF  KEY=31&#10;PRESET 1=32&#10;PRESET 2=33&#10;PRESET 3=34&#10;PRESET 4=35"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="624 40 88 32" uiType="uiCombo" componentTabName="Tabs"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="35" vstIndex="3296" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Key_4" modulatorMin="0" modulatorValue="35">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 0b xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Key_4"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff000000"
               uiComboOutlineColour="ff000000" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff000000"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Input GAIN=0&#10;EQ  ON/OFF=1&#10;FREEZE=2&#10;Display=3&#10;Flat=4&#10;TRACK=5&#10;SWEEP=6&#10;Single BND=7&#10;Broad  BND=8&#10;LOW   SHLV=9&#10;HIGH  SHLV=10&#10;RECALL=11&#10;ADD=12&#10;STORE=13&#10;UTIL=14&#10;Filter=15&#10;ENTER=16&#10;EQ ON=17&#10;EQ OFF=18&#10;Freeze ON=19&#10;Freeze OFF=20&#10;Disp.TRACK=21&#10;Disp.EQ/SA=22&#10;Disp.EQ=23&#10;Disp.SA=24&#10;TRACK ON=25&#10;TRACK  OFF=26&#10;SWEEP ON=27&#10;SWEEP OFF=28&#10;PRESET -=29&#10;PRESET +=30&#10;OFF  KEY=31&#10;PRESET 1=32&#10;PRESET 2=33&#10;PRESET 3=34&#10;PRESET 4=35"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="720 40 88 32" uiType="uiCombo" componentTabName="Tabs"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="35" vstIndex="3297" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Learn_Trigger" modulatorMin="0" modulatorValue="5">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 0c xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Learn_Trigger "
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff000000"
               uiComboOutlineColour="ff000000" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff000000"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Input GAIN=0&#10;EQ  ON/OFF=1&#10;FREEZE=2&#10;Display=3&#10;Flat=4&#10;TRACK=5&#10;SWEEP=6&#10;Single BND=7&#10;Broad  BND=8&#10;LOW   SHLV=9&#10;HIGH  SHLV=10&#10;RECALL=11&#10;ADD=12&#10;STORE=13&#10;UTIL=14&#10;Filter=15&#10;ENTER=16&#10;EQ ON=17&#10;EQ OFF=18&#10;Freeze ON=19&#10;Freeze OFF=20&#10;Disp.TRACK=21&#10;Disp.EQ/SA=22&#10;Disp.EQ=23&#10;Disp.SA=24&#10;TRACK ON=25&#10;TRACK  OFF=26&#10;SWEEP ON=27&#10;SWEEP OFF=28&#10;PRESET -=29&#10;PRESET +=30&#10;OFF  KEY=31&#10;PRESET 1=32&#10;PRESET 2=33&#10;PRESET 3=34&#10;PRESET 4=35"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentTabId="1" componentTabName="Tabs"
               uiType="uiCombo" componentRectangle="832 8 88 32" componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3299" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorMappedValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Track_On_Off" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="33" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="f0 33 00 11 14 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Track-Enbl"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="0 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=26&#10;On=25" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="d07d786850110000feffffffffffffff"
               componentTabName="Tabs" componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3300" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorMappedValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Sweep_On_Off" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="33" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="f0 33 00 11 14 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Sweep"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="56 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=28&#10;On=27" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="3" componentTabName="Tabs" componentLayerUid="d07d786850110000feffffffffffffff"
               uiType="uiImageButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3302" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorMappedValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Freeze_On_Off" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="33" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="f0 33 00 11 14 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Freeze"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="112 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=20&#10;On=19" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="d07d786850110000feffffffffffffff"
               componentTabName="Tabs" componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3303" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MakeAktualRSP" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 41 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="MakeAktualRSP"
               componentMouseCursor="2" componentGroupName="Radio_13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="13" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="504 8 80 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=0&#10;On=1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="27" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="3" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3305" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="ShowAktualRsp" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 42 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ShowAktualRsp"
               componentMouseCursor="2" componentGroupName="Radio_13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="13" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="584 8 80 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=0&#10;On=1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3306" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="AlignSAResp" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 43 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="AlignSAResp"
               componentMouseCursor="2" componentGroupName="Radio_13" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="13" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="432 8 80 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=0&#10;On=1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="3" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3307" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="SearchMaxBands" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 2D xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="SearchMaxBands"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="824 8 80 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=0&#10;On=1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3308" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Rec_PlayCueList" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 3A xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Rec_PlayCueList"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="14" componentRadioGroupNotifyMidi="0"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="904 8 80 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=0&#10;On=1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="3" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3309" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="AutolinAppend" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 58 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="AutolinAppend"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="15" componentRadioGroupNotifyMidi="0"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="656 8 80 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=0&#10;On=1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3310" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Search_Destroy" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 2c xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Search_Destroy"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="744 8 80 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="Off=0&#10;On=1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="3" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3311" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Silent_Update" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 4D xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Silent Update"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="knob_Schnabel_66_black2_v3"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="OFF=0&#10;ON=1"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="136 8 64 64"
               componentLayerUid="d07d786850110000feffffffffffffff" componentTabName="Tabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3312" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Soft_Crossfade" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 16 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Soft Crossfade"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="knob_Schnabel_66_black2_v3"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="OFF=0&#10;ON=1"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="Tabs"
               componentLayerUid="d07d786850110000feffffffffffffff" componentRectangle="72 8 64 64"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3313" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Destroy_Ratio" modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 2E xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Destroy Ratio"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="knob_Schnabel_120_black25"
               resourceImageWidth="120" resourceImageHeight="120" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-12dB=0&#10;-11dB=1&#10;-10dB=2&#10;- 9dB=3&#10;- 8dB=4&#10;- 7dB=5&#10;- 6dB=6&#10;- 5dB=7&#10;- 4dB=8&#10;- 3dB=9&#10;- 2dB=10&#10;- 1dB=11&#10;  0dB=12&#10;  1dB=13&#10;  2dB=14&#10;  3dB=15&#10;  4dB=16&#10;  5dB=17&#10;  6dB=18&#10;  7dB=19&#10;  8dB=20&#10;  9dB=21&#10; 10dB=22&#10; 11dB=23&#10; 12dB=24"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="200 8 64 64"
               componentLayerUid="d07d786850110000feffffffffffffff" componentTabName="Tabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3314" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_28" modulatorMin="0" modulatorValue="27">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_28"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="928 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3315" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_27" modulatorMin="0" modulatorValue="27">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_27"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="896 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3316" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_26" modulatorMin="0" modulatorValue="26">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_26"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="864 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3317" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_25" modulatorMin="0" modulatorValue="25">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_25"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="832 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3318" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_24" modulatorMin="0" modulatorValue="25">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_24"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="800 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3319" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_23" modulatorMin="0" modulatorValue="28">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_23"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="768 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3320" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_22" modulatorMin="0" modulatorValue="27">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_22"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="736 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3321" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_21" modulatorMin="0" modulatorValue="25">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_21"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="704 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3322" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_20" modulatorMin="0" modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_20"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="672 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3323" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_19" modulatorMin="0" modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_19"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="640 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3324" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_18" modulatorMin="0" modulatorValue="26">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_18"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="608 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3325" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_17" modulatorMin="0" modulatorValue="27">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_17"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="576 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3326" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_16" modulatorMin="0" modulatorValue="26">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_16"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="544 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3327" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_15" modulatorMin="0" modulatorValue="29">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_15"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="512 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3328" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_14" modulatorMin="0" modulatorValue="29">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_14"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="480 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3329" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_13" modulatorMin="0" modulatorValue="29">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_13"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="448 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3330" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_12" modulatorMin="0" modulatorValue="29">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_12"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="416 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3331" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_11" modulatorMin="0" modulatorValue="26">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_11"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="384 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3332" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_10" modulatorMin="0" modulatorValue="29">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_10"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="352 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3334" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_08" modulatorMin="0" modulatorValue="30">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_08"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="288 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3335" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_07" modulatorMin="0" modulatorValue="30">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_07"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="256 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3336" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_06" modulatorMin="0" modulatorValue="32">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_06"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="224 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3337" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_05" modulatorMin="0" modulatorValue="40">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_05"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="192 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3338" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_04" modulatorMin="0" modulatorValue="32">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_04"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="160 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3339" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_03" modulatorMin="0" modulatorValue="27">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_03"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="128 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3340" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_02" modulatorMin="0" modulatorValue="25">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_02"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="96 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3341" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_01" modulatorMin="0" modulatorValue="21">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_01"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="-4607.0001999999949" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="64 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3342" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_09" modulatorMin="0" modulatorValue="29">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_09"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_51"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 &#10;33 &#10;34 &#10;35 &#10;36 &#10;37 &#10;38 &#10;39 &#10;40 &#10;41 &#10;42 &#10;43 &#10;44 &#10;45 &#10;46 &#10;47 &#10;48 &#10;49 &#10;50 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="320 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="32" vstIndex="3344" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_Vol_02" modulatorMin="0" modulatorValue="23">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_28"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_33"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="968 0 25 179"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3348" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dB" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="dB"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="-- None" componentRectangle="936 24 94 19"
               resourceImageWidth="80" resourceImageHeight="30" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="ffffffff"
               uiImageButtonContent="12 dB Type=0&#10;16 dB Type=1" uiImageButtonTextPosition="top"
               uiImageButtonTextWidth="60" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3"
               uiButtonTextJustification="centredTop" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="d07d786850110000feffffffffffffff"
               componentTabName="" componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="32" vstIndex="3349" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Analyzer_Vol_01" modulatorMin="0" modulatorValue="23">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer_28"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Bargraph136x09_33"
               resourceImageWidth="9" resourceImageHeight="136" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="0"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="ff45bc24" uiFixedSliderContent="0 &#10;1 &#10;2 &#10;3 &#10;4 &#10;5 &#10;6 &#10;7 &#10;8 &#10;9 &#10;10 &#10;11 &#10;12 &#10;13 &#10;14 &#10;15 &#10;16 &#10;17 &#10;18 &#10;19 &#10;20 &#10;21 &#10;22 &#10;23 &#10;24 &#10;25 &#10;26 &#10;27 &#10;28 &#10;29 &#10;30 &#10;31 &#10;32 "
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="960 0 25 179" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Analyzer" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="1" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Analyzer"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff000000"
               uiGroupBackgroundColour2="ff1a1c24" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="16 156 1011 178"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiButtonTextFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentLayerUid="d07d786850110000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3350" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue +63"
             modulatorValueExpressionReverse="midiValue +63" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="jTimer"
             name="tim" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="33" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,33,63,64.F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Analyzer"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="TrackFadRefersh"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="0 8 69 50"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0=0&#10;1=1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3351" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_01" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 00 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="32"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="56 64 37 213" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3353" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Clipping" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="fffefefe"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Clipping"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="LED_Red_64x64_2" componentRectangle="0 72 59 69"
               resourceImageWidth="64" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0=0&#10;1=1" uiImageButtonTextPosition="bottom"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="20" vstIndex="3354" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="AnaAddValue" modulatorMin="0" modulatorValue="4">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Shift"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="1" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="32" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16&#10;17&#10;18&#10;19&#10;20"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="0 104 64 64"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Midi-Editor for TC 1128 PROGRAMMABLE 28 BAND GRAPHIC EQUALIZER/SPECTRUM ANALYZER"
               uiGroupTextColour="ffffffff" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff100f0f"
               uiGroupBackgroundColour2="ff636262" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="0 0 1131 870"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="topLeft" uiGroupTextFont="Electronic Highway Sign;14;0;0;0;0;1;2"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="10"
               uiType="uiGroup" componentLayerUid="522d49ab45070000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-4" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-4"
               componentMouseCursor="2" componentGroupName="Analyzer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="fffffdfd" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiLabelText="Clip" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="d07d786850110000feffffffffffffff" componentRectangle="8 64 44 21"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="0" vstIndex="3355" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="TrackFad_Ref"
             name="Track_SS" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 11 05 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Track"
               componentMouseCursor="2" componentGroupName="Filter" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="20" componentRadioGroupNotifyMidi="0"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="880 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="&#10;06" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentTabId="0" componentTabName="Tabs" uiType="uiImageButton"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3357" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Filter" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 1F xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Filter"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="1" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="944 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="ffffffff"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3358" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="DestroyRatio" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 1A 2E xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Destroy Ratio"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff000000"
               uiComboOutlineColour="ff000000" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="ff000000"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;-11dB=1&#10;-10dB=2&#10;- 9dB=3&#10;- 8dB=4&#10;- 7dB=5&#10;- 6dB=6&#10;- 5dB=7&#10;- 4dB=8&#10;- 3dB=9&#10;- 2dB=10&#10;- 1dB=11&#10;  0dB=12&#10;  1dB=13&#10;  2dB=14&#10;  3dB=15&#10;  4dB=16&#10;  5dB=17&#10;  6dB=18&#10;  7dB=19&#10;  8dB=20&#10;  9dB=21&#10; 10dB=22&#10; 11dB=23&#10; 12dB=24"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentTabId="0" componentTabName="Tabs"
               componentLayerUid="d07d786850110000feffffffffffffff" componentRectangle="384 40 83 34"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="3359" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorMappedValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="9216"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="sendSweepValue"
             name="SweepValue" modulatorMin="0" modulatorValue="25">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 11 3F xx F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="12" componentLabelWidth="64" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Sweep Value"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="99" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="Enc_enter_CB"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_Mast_512_64_51_V2"
               resourceImageWidth="55" resourceImageHeight="512" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="25" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiFixedSliderContent="39=103&#10;40=104&#10;41=105&#10;42=106&#10;43=107&#10;44=108&#10;45=109&#10;46=110&#10;47=111&#10;48=112&#10;49=113&#10;50=114&#10;51=115&#10;52=116&#10;53=117&#10;54=118&#10;55=119&#10;56=120&#10;57=121&#10;58=122&#10;59=123&#10;60=124&#10;61=125&#10;62=126&#10;63=127&#10;64=0&#10;65=1&#10;66=2&#10;67=3&#10;68=4&#10;69=5&#10;70=6&#10;71=7&#10;72=8&#10;73=9&#10;74=10&#10;75=11&#10;76=12&#10;77=13&#10;78=14&#10;79=15&#10;80=16&#10;81=17&#10;82=18&#10;83=19&#10;84=20&#10;85=21&#10;86=22&#10;87=23&#10;88=24&#10;89=25"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="5" uiSliderVelocityThreshold="5"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="25" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiButtonTextFont="&lt;Sans-Serif&gt;;12;1;0;0;0;0;3"
               componentLayerUid="d07d786850110000feffffffffffffff" componentRectangle="1040 152 61 550"
               uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="27" vstIndex="3362" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="SweepFrqStetValZero"
             name="SweepFrq" modulatorMin="0" modulatorValue="19">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="SysEx,Direct,Direct,-1,-1,F0 33 00 11 1F F7:SysEx,Direct,Direct,-1,-1,F0 33 00 11 3F xx F7:SysEx,Direct,Direct,-1,-1,F0 33 00 17 F7:SysEx,Direct,Direct,-1,-1,F0 33 00 11 10 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="12" componentLabelWidth="64" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Sweep Frq"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="Enc_exit_CB"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="Rotary" uiSliderMin="0"
               uiSliderMax="99" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="32=0&#10;40=1&#10;50=2&#10;63=3&#10;80=4&#10;100=5&#10;125=6&#10;160=7&#10;200=8&#10;250=9&#10;315=10&#10;400=11&#10;500=12&#10;630=13&#10;800=14&#10;1k=15&#10;1,25k=16&#10;1,6k=17&#10;2k=18&#10;2,5k=19&#10;3,16k=20&#10;4k=21&#10;5k=22&#10;6,3k=23&#10;8k=24&#10;10k=25&#10;12,5k=26&#10;16k=27"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;1;0;0;0;1;3"
               uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;1;0;0;1;3" componentTabId="1"
               componentTabName="" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="1040 772 64 64" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3364" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_03" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 02 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="50"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="120 64 37 213" uiType="uiFixedImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="3365" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue "
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="StretchValue" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="25" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Fad_02" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="0" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 b0 01 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="40"
               componentMouseCursor="2" componentGroupName="Frontplate" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="FaderVert_2_128_24_25"
               resourceImageWidth="24" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="LinearVertical" uiSliderMin="0"
               uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="12" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="40" uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="f0f0f"
               uiFixedSliderContent="-12=13&#10; -11=14&#10; -10=15&#10; -9=16&#10; -8=17&#10; -7=18&#10; -6=19&#10; -5=20&#10; -4=21&#10; -3=22&#10; -2=23&#10; -1=24&#10; 0=25&#10; 1=26&#10; 2=27&#10; 3=28&#10; 4=29&#10; 5=30&#10; 6=31&#10; 7=32&#10; 8=33&#10; 9=34&#10; 10=35&#10; 11=36&#10; 12=37"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="88 64 37 213"
               componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-12" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-12"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="tc_logo"
               componentTabId="0" componentTabName="" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="928 8 88 12" uiType="uiImage"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="0" vstIndex="3366" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="TrackFad_Ref"
             name="Track_SS-1" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 11 05 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Track"
               componentMouseCursor="2" componentGroupName="Filter" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="20" componentRadioGroupNotifyMidi="0"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="248 8 64 52"
               resourceImageWidth="128" resourceImageHeight="128" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="&#10;06" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"
               componentTabName="Tabs" componentTabId="3"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="XY_Tabs" modulatorVstExported="0" uiTabsCurrentTab="0"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="ff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="XY_Tabs"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="ffffffff"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged=""
               uiTabsDepth="24" uiTabsOutlineThickness="2" uiTabsFrontTabOutline="1"
               uiTabsTabOutline="1" uiTabsIndentThickness="0" uiTabsOrientation="1"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;0;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;0;3"
               uiTabsOutlineGlobalColour="0" uiTabsOutlineGlobalBackgroundColour="0"
               uiTabsOutlineTabColour="ff000000" uiTabsTextTabColour="ff000000"
               uiTabsFrontTabOutlineColour="0" uiTabsFrontTabTextColour="ff000000"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="16 622 1012 241"
               uiTabsCurrentTab="0" componentLayerUid="3fc46063dc030000feffffffffffffff"
               uiType="uiTabs">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="12dBVersion" uiTabsTabContentBackgroundColour="ff000000"
                 uiTabsTabBackgroundColour="ff000000" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="16dBVersion" uiTabsTabContentBackgroundColour="ff000000"
                 uiTabsTabBackgroundColour="ff000000" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="64" uiTabsTabBackgroundImageAlpha="0"/>
    </component>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Img_XYGrid_12dB" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="0" componentSentBack="1" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Img_XYGrid_12dB"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="TCyxGrid_5"
               componentTabId="0" componentTabName="XY_Tabs" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="30 -18 927 229" uiType="uiImage"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="27" vstIndex="3367" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="jonasMod8Change16dB"
             name="XY_X16dB" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 17 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="XY_X16dB"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="0&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16&#10;17&#10;18&#10;19&#10;20&#10;21&#10;22&#10;23&#10;24&#10;25&#10;26&#10;27"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="4"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="688 8 56 77" uiType="uiFixedSlider" componentTabName="Tabs"
               componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="32" vstIndex="3368" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="jonasMod8Change16dB"
             name="XY_Y16dB" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 17 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="XY_Y16dB"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="32" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="-16&#10;-15&#10;-14&#10;-13&#10;-12&#10;-11&#10;-10&#10;-9&#10;-8&#10;-7&#10;-6&#10;-5&#10;-4&#10;-3&#10;-2&#10;-1&#10;0&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="d07d786850110000feffffffffffffff"
               componentRectangle="744 8 56 77" uiType="uiFixedSlider" componentTabName="Tabs"
               componentTabId="4" uiXYSurfaceMaxY="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3369"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="1"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="drawXY_Surface16dB" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="3" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 17 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="drawXY_Surface16dB"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiXYSurfaceBgGradientType="Radial"
               uiXYSurfaceBackgroundColour1="7b6e6e" uiXYSurfaceBackgroundColour2="919191"
               uiXYSurfaceOutlineGradientType="0xff909090" uiXYSurfaceOutlineColour1="ffffff"
               uiXYSurfaceOutlineColour2="ffffffff" uiXYSurfaceOutlineThickness="1"
               uiXYSurfaceCornerSize="10" uiXYSurfaceBgImageResource="-- None"
               componentRectangle="88 648 874 180" uiXYSurfaceBgImageLayout="36"
               uiXYSurfaceBgImageAlpha="100" uiXYSurfaceXTrackEnabled="1" uiXYSurfaceXTrackColour="ffffff"
               uiXYSurfaceXTrackThickness="0" uiXYSurfaceYTrackColour="0xffffffff"
               uiXYSurfaceYTrackThickness="2" uiXYSurfaceModSectionLocation="0"
               uiXYSurfaceModSectionHeight="16" uiXYSurfaceInfoLabelVisible="0"
               uiXYSurfaceInfoLabelLocation="bottomRight" uiXYSurfaceInfoLabelColour="0xffffffff"
               uiXYSurfaceInfoLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiXYSurfaceMaxX="27" uiXYSurfaceDestinationX="XY_X16dB" uiXYSurfaceMaxY="32"
               uiXYSurfaceDestinationY="XY_Y16dB" uiXYSurfaceGradientColour="ffffff"
               uiXYSurfaceGradientGrain="30" uiXYSurfaceModulatorBgGradientType="None"
               uiXYSurfaceModulatorBgColour1="ffbb7676" uiXYSurfaceModulatorBgColour2="ffbb7676"
               uiXYSurfaceModulatorOutlineGradientType="None" uiXYSurfaceModulatorOutlineColour1="ffbb7676"
               uiXYSurfaceModulatorOutlineColour2="ffbb7676" uiXYSurfaceModulatorOutlineThickness="1"
               uiXYSurfaceModulatorWidth="8" uiXYSurfaceModulatorHeight="8"
               uiXYSuraceXFlip="0" uiXYSuraceYFlip="1" uiXYSuraceShowRightClickMenu="0"
               uiXYSurfaceDestinationXGroupFilter="" uiXYSurfaceDestinationYGroupFilter=""
               uiType="uiXYSurface" componentLayerUid="d07d786850110000feffffffffffffff"
               componentTabName="" componentTabId="1"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Img_XYGrid_16dB" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="0" componentSentBack="1" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Img_XYGrid_16dB"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="TCyxGrid_5_16dB"
               uiType="uiImage" componentRectangle="30 -18 927 229" componentLayerUid="3fc46063dc030000feffffffffffffff"
               componentTabName="XY_Tabs" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3370" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Initialise" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 15 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Initialize"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Glow" componentEffectRadius="1" componentEffectColour="ffbab6d9"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="1040 8 69 30"
               resourceImageWidth="128" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3371" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Get_Sys_Data" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 19 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Get Sys-Data"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Glow" componentEffectRadius="1" componentEffectColour="ffbab6d9"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="1040 40 69 30"
               resourceImageWidth="128" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiType="uiImageButton" componentLayerUid="d07d786850110000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3372" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Get_Fad_Val" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 33 00 17 F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Get Fad-Val"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="1" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Glow" componentEffectRadius="1" componentEffectColour="ffbab6d9"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="1"
               uiImageButtonResource="LED_Button_128x128x2knob" componentRectangle="1040 72 69 30"
               resourceImageWidth="128" resourceImageHeight="64" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d07d786850110000feffffffffffffff" uiType="uiImageButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="3373" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="1" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Poll_Rate" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="12" componentLabelWidth="64" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Poll-Rate"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="0" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageSliderResource="Black Plastic small 01"
               resourceImageWidth="80" resourceImageHeight="80" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiSliderStyle="Rotary" uiSliderMin="70"
               uiSliderMax="200" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValueHeight="12" uiSliderValuePosition="4"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderRotaryOutlineColour="0xff0000ff"
               uiSliderRotaryFillColour="0xff0000ff" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="0xffffffff"
               uiSliderTrackColour="0xff0f0f0f" uiFixedSliderContent="40ms =40&#10;50ms =50&#10;60ms =60&#10;70ms =70&#10;80ms =80&#10;90ms =90&#10;100ms=100&#10;110ms=110&#10;120ms=120&#10;130ms=130&#10;140ms=140&#10;150ms=150&#10;160ms=160&#10;170ms=170&#10;180ms=180&#10;190ms=190&#10;200ms=200"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiFixedImageSlider" componentRectangle="312 8 64 64"
               componentLayerUid="d07d786850110000feffffffffffffff" componentTabName="Tabs"
               componentTabId="2"/>
  </modulator>
  <panelCustomData/>
</panel>
